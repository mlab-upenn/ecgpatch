   1               		.file	"basic_rf.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.global __do_copy_data
   8               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 126               	.global	rf_security_last_pkt_status
 128               	rf_security_last_pkt_status:
 129               		.stabd	46,0,0
   1:../../src/radio/cc2420/source/basic_rf.c **** /******************************************************************************
   2:../../src/radio/cc2420/source/basic_rf.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../src/radio/cc2420/source/basic_rf.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../src/radio/cc2420/source/basic_rf.c **** *  All rights reserved.
   5:../../src/radio/cc2420/source/basic_rf.c **** *
   6:../../src/radio/cc2420/source/basic_rf.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../src/radio/cc2420/source/basic_rf.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../src/radio/cc2420/source/basic_rf.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../src/radio/cc2420/source/basic_rf.c **** *
  10:../../src/radio/cc2420/source/basic_rf.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../src/radio/cc2420/source/basic_rf.c **** *  it under the terms of the GNU General Public License as published by
  12:../../src/radio/cc2420/source/basic_rf.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../src/radio/cc2420/source/basic_rf.c **** *
  14:../../src/radio/cc2420/source/basic_rf.c **** *  This program is distributed in the hope that it will be useful,
  15:../../src/radio/cc2420/source/basic_rf.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../src/radio/cc2420/source/basic_rf.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../src/radio/cc2420/source/basic_rf.c **** *  GNU General Public License for more details.
  18:../../src/radio/cc2420/source/basic_rf.c **** *
  19:../../src/radio/cc2420/source/basic_rf.c **** *  You should have received a copy of the GNU General Public License
  20:../../src/radio/cc2420/source/basic_rf.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../src/radio/cc2420/source/basic_rf.c **** *
  22:../../src/radio/cc2420/source/basic_rf.c **** *  Contributing Authors (specific to this file):
  23:../../src/radio/cc2420/source/basic_rf.c **** *  Chipcon Development Team
  24:../../src/radio/cc2420/source/basic_rf.c **** *  Anthony Rowe
  25:../../src/radio/cc2420/source/basic_rf.c **** *  Nuno Pereira
  26:../../src/radio/cc2420/source/basic_rf.c **** *  Bach Bui 
  27:../../src/radio/cc2420/source/basic_rf.c **** *******************************************************************************/
  28:../../src/radio/cc2420/source/basic_rf.c **** 
  29:../../src/radio/cc2420/source/basic_rf.c **** #include <include.h>
  30:../../src/radio/cc2420/source/basic_rf.c **** #include <basic_rf.h>
  31:../../src/radio/cc2420/source/basic_rf.c **** #include <ulib.h>
  32:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk.h>
  33:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_events.h>
  34:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_error.h>
  35:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_timer.h>
  36:../../src/radio/cc2420/source/basic_rf.c **** #include <nrk_cpu.h>
  37:../../src/radio/cc2420/source/basic_rf.c **** 
  38:../../src/radio/cc2420/source/basic_rf.c **** 
  39:../../src/radio/cc2420/source/basic_rf.c **** //#ifndef RADIO_PRIORITY_CEILING
  40:../../src/radio/cc2420/source/basic_rf.c **** //  #define RADIO_PRIORITY_CEILING	20
  41:../../src/radio/cc2420/source/basic_rf.c **** //#endif
  42:../../src/radio/cc2420/source/basic_rf.c **** 
  43:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_t *radio_sem;
  44:../../src/radio/cc2420/source/basic_rf.c **** uint8_t auto_ack_enable;
  45:../../src/radio/cc2420/source/basic_rf.c **** uint8_t security_enable;
  46:../../src/radio/cc2420/source/basic_rf.c **** uint8_t last_pkt_encrypted;
  47:../../src/radio/cc2420/source/basic_rf.c **** uint16_t mdmctrl0;
  48:../../src/radio/cc2420/source/basic_rf.c **** uint8_t tx_ctr[4];
  49:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rx_ctr[4];
  50:../../src/radio/cc2420/source/basic_rf.c **** 
  51:../../src/radio/cc2420/source/basic_rf.c **** // Returns 1 if the last packet was encrypted, 0 otherwise
  52:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_security_last_pkt_status()
  53:../../src/radio/cc2420/source/basic_rf.c **** {
 131               	.LM0:
 132               	.LFBB1:
 133               	/* prologue: frame size=0 */
 134               	/* prologue end (size=0) */
 135 0000 8091 0000 		lds r24,last_pkt_encrypted
  54:../../src/radio/cc2420/source/basic_rf.c **** return last_pkt_encrypted;
  55:../../src/radio/cc2420/source/basic_rf.c **** }
 137               	.LM1:
 138 0004 9927      		clr r25
 139               	/* epilogue: frame size=0 */
 140 0006 0895      		ret
 141               	/* epilogue end (size=1) */
 142               	/* function rf_security_last_pkt_status size 4 (3) */
 144               	.Lscope1:
 146               		.stabd	78,0,0
 149               	.global	rf_security_set_ctr_counter
 151               	rf_security_set_ctr_counter:
 152               		.stabd	46,0,0
  56:../../src/radio/cc2420/source/basic_rf.c **** 
  57:../../src/radio/cc2420/source/basic_rf.c **** 
  58:../../src/radio/cc2420/source/basic_rf.c **** void rf_security_set_ctr_counter(uint8_t *counter)
  59:../../src/radio/cc2420/source/basic_rf.c **** {
 154               	.LM2:
 155               	.LFBB2:
 156               	/* prologue: frame size=0 */
 157 0008 CF93      		push r28
 158 000a DF93      		push r29
 159               	/* prologue end (size=2) */
 160 000c DC01      		movw r26,r24
  60:../../src/radio/cc2420/source/basic_rf.c **** uint8_t n;
  61:../../src/radio/cc2420/source/basic_rf.c **** // CTR counter value
  62:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_WRITE_RAM(&counter[0],(CC2420RAM_TXNONCE+9),2,n); 
 162               	.LM3:
 163 000e 4098      		cbi 40-0x20,0
 164 0010 89EC      		ldi r24,lo8(-55)
 165 0012 8EBD      		out 78-0x20,r24
 166               	.L4:
 168               	.LM4:
 169 0014 0DB4      		in __tmp_reg__,77-0x20
 170 0016 07FE      		sbrs __tmp_reg__,7
 171 0018 00C0      		rjmp .L4
 172 001a 80E8      		ldi r24,lo8(-128)
 173 001c 8EBD      		out 78-0x20,r24
 174               	.L6:
 175 001e 0DB4      		in __tmp_reg__,77-0x20
 176 0020 07FE      		sbrs __tmp_reg__,7
 177 0022 00C0      		rjmp .L6
 178 0024 92E0      		ldi r25,lo8(2)
 179               	.L8:
 180 0026 9150      		subi r25,lo8(-(-1))
 181 0028 FD01      		movw r30,r26
 182 002a E90F      		add r30,r25
 183 002c F11D      		adc r31,__zero_reg__
 184 002e 8081      		ld r24,Z
 185 0030 8EBD      		out 78-0x20,r24
 186               	.L9:
 187 0032 0DB4      		in __tmp_reg__,77-0x20
 188 0034 07FE      		sbrs __tmp_reg__,7
 189 0036 00C0      		rjmp .L9
 190 0038 9923      		tst r25
 191 003a 01F4      		brne .L8
 192 003c 409A      		sbi 40-0x20,0
  63:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_WRITE_RAM(&counter[2],(CC2420RAM_TXNONCE+11),2,n); 
 194               	.LM5:
 195 003e 4098      		cbi 40-0x20,0
 196 0040 8BEC      		ldi r24,lo8(-53)
 197 0042 8EBD      		out 78-0x20,r24
 198               	.L12:
 199 0044 0DB4      		in __tmp_reg__,77-0x20
 200 0046 07FE      		sbrs __tmp_reg__,7
 201 0048 00C0      		rjmp .L12
 202 004a 80E8      		ldi r24,lo8(-128)
 203 004c 8EBD      		out 78-0x20,r24
 204               	.L14:
 205 004e 0DB4      		in __tmp_reg__,77-0x20
 206 0050 07FE      		sbrs __tmp_reg__,7
 207 0052 00C0      		rjmp .L14
 208 0054 92E0      		ldi r25,lo8(2)
 209 0056 9D01      		movw r18,r26
 210 0058 2E5F      		subi r18,lo8(-(2))
 211 005a 3F4F      		sbci r19,hi8(-(2))
 212               	.L16:
 213 005c E901      		movw r28,r18
 214 005e 9150      		subi r25,lo8(-(-1))
 215 0060 F901      		movw r30,r18
 216 0062 E90F      		add r30,r25
 217 0064 F11D      		adc r31,__zero_reg__
 218 0066 8081      		ld r24,Z
 219 0068 8EBD      		out 78-0x20,r24
 220               	.L17:
 221 006a 0DB4      		in __tmp_reg__,77-0x20
 222 006c 07FE      		sbrs __tmp_reg__,7
 223 006e 00C0      		rjmp .L17
 224 0070 9923      		tst r25
 225 0072 01F4      		brne .L16
 226 0074 409A      		sbi 40-0x20,0
  64:../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[0]=counter[0];
 228               	.LM6:
 229 0076 8C91      		ld r24,X
 230 0078 8093 0000 		sts tx_ctr,r24
  65:../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[1]=counter[1];
 232               	.LM7:
 233 007c FD01      		movw r30,r26
 234 007e 8181      		ldd r24,Z+1
 235 0080 8093 0000 		sts tx_ctr+1,r24
  66:../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[2]=counter[2];
 237               	.LM8:
 238 0084 8881      		ld r24,Y
 239 0086 8093 0000 		sts tx_ctr+2,r24
  67:../../src/radio/cc2420/source/basic_rf.c **** tx_ctr[3]=counter[3];
 241               	.LM9:
 242 008a 8381      		ldd r24,Z+3
 243 008c 8093 0000 		sts tx_ctr+3,r24
 244               	/* epilogue: frame size=0 */
 245 0090 DF91      		pop r29
 246 0092 CF91      		pop r28
 247 0094 0895      		ret
 248               	/* epilogue end (size=3) */
 249               	/* function rf_security_set_ctr_counter size 71 (66) */
 254               	.Lscope2:
 256               		.stabd	78,0,0
 259               	.global	rf_security_enable
 261               	rf_security_enable:
 262               		.stabd	46,0,0
  68:../../src/radio/cc2420/source/basic_rf.c **** }
  69:../../src/radio/cc2420/source/basic_rf.c **** 
  70:../../src/radio/cc2420/source/basic_rf.c **** 
  71:../../src/radio/cc2420/source/basic_rf.c **** void rf_security_set_key(uint8_t *key)
  72:../../src/radio/cc2420/source/basic_rf.c **** {
  73:../../src/radio/cc2420/source/basic_rf.c **** uint8_t n,i;
  74:../../src/radio/cc2420/source/basic_rf.c **** uint16_t key_buf;
  75:../../src/radio/cc2420/source/basic_rf.c **** 
  76:../../src/radio/cc2420/source/basic_rf.c **** // Set AES key
  77:../../src/radio/cc2420/source/basic_rf.c **** nrk_spin_wait_us(100); 
  78:../../src/radio/cc2420/source/basic_rf.c **** for(i=0; i<8; i++ )
  79:../../src/radio/cc2420/source/basic_rf.c **** 	{
  80:../../src/radio/cc2420/source/basic_rf.c ****     	key_buf=(key[i]<<8)|key[i+1]; 
  81:../../src/radio/cc2420/source/basic_rf.c ****    	nrk_spin_wait_us(100); 
  82:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_KEY0+(i*2)),2,n); 
  83:../../src/radio/cc2420/source/basic_rf.c **** 	}
  84:../../src/radio/cc2420/source/basic_rf.c **** 
  85:../../src/radio/cc2420/source/basic_rf.c **** // Set AES nonce to all zeros
  86:../../src/radio/cc2420/source/basic_rf.c **** nrk_spin_wait_us(100); 
  87:../../src/radio/cc2420/source/basic_rf.c **** for(i=0; i<7; i++ )
  88:../../src/radio/cc2420/source/basic_rf.c **** 	{
  89:../../src/radio/cc2420/source/basic_rf.c ****     	key_buf=0; 
  90:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_TXNONCE+(i*2)),2,n); 
  91:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_RXNONCE+(i*2)),2,n); 
  92:../../src/radio/cc2420/source/basic_rf.c **** 	}
  93:../../src/radio/cc2420/source/basic_rf.c **** 	// block counter set 1
  94:../../src/radio/cc2420/source/basic_rf.c ****     	key_buf=1; 
  95:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_TXNONCE+14),2,n); 
  96:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_RAM_LE(&key_buf,(CC2420RAM_RXNONCE+14),2,n); 
  97:../../src/radio/cc2420/source/basic_rf.c **** }
  98:../../src/radio/cc2420/source/basic_rf.c **** 
  99:../../src/radio/cc2420/source/basic_rf.c **** void rf_security_enable(uint8_t *key)
 100:../../src/radio/cc2420/source/basic_rf.c **** {
 264               	.LM10:
 265               	.LFBB3:
 266               	/* prologue: frame size=0 */
 267               	/* prologue end (size=0) */
 101:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_SECCTRL0, 0x0306); // Enable CTR encryption with key 0
 269               	.LM11:
 270 0096 4098      		cbi 40-0x20,0
 271 0098 89E1      		ldi r24,lo8(25)
 272 009a 8EBD      		out 78-0x20,r24
 273               	.L38:
 275               	.LM12:
 276 009c 0DB4      		in __tmp_reg__,77-0x20
 277 009e 07FE      		sbrs __tmp_reg__,7
 278 00a0 00C0      		rjmp .L38
 279 00a2 83E0      		ldi r24,lo8(3)
 280 00a4 8EBD      		out 78-0x20,r24
 281               	.L40:
 282 00a6 0DB4      		in __tmp_reg__,77-0x20
 283 00a8 07FE      		sbrs __tmp_reg__,7
 284 00aa 00C0      		rjmp .L40
 285 00ac 86E0      		ldi r24,lo8(6)
 286 00ae 8EBD      		out 78-0x20,r24
 287               	.L42:
 288 00b0 0DB4      		in __tmp_reg__,77-0x20
 289 00b2 07FE      		sbrs __tmp_reg__,7
 290 00b4 00C0      		rjmp .L42
 291 00b6 409A      		sbi 40-0x20,0
 102:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_SECCTRL1, 0x0e0e); // Encrypt / Decrypt 18 bytes into header
 293               	.LM13:
 294 00b8 4098      		cbi 40-0x20,0
 295 00ba 8AE1      		ldi r24,lo8(26)
 296 00bc 8EBD      		out 78-0x20,r24
 297               	.L44:
 298 00be 0DB4      		in __tmp_reg__,77-0x20
 299 00c0 07FE      		sbrs __tmp_reg__,7
 300 00c2 00C0      		rjmp .L44
 301 00c4 8EE0      		ldi r24,lo8(14)
 302 00c6 8EBD      		out 78-0x20,r24
 303               	.L46:
 304 00c8 0DB4      		in __tmp_reg__,77-0x20
 305 00ca 07FE      		sbrs __tmp_reg__,7
 306 00cc 00C0      		rjmp .L46
 307 00ce 8EE0      		ldi r24,lo8(14)
 308 00d0 8EBD      		out 78-0x20,r24
 309               	.L48:
 310 00d2 0DB4      		in __tmp_reg__,77-0x20
 311 00d4 07FE      		sbrs __tmp_reg__,7
 312 00d6 00C0      		rjmp .L48
 313 00d8 409A      		sbi 40-0x20,0
 103:../../src/radio/cc2420/source/basic_rf.c **** 
 104:../../src/radio/cc2420/source/basic_rf.c **** security_enable=1;
 315               	.LM14:
 316 00da 81E0      		ldi r24,lo8(1)
 317 00dc 8093 0000 		sts security_enable,r24
 318               	/* epilogue: frame size=0 */
 319 00e0 0895      		ret
 320               	/* epilogue end (size=1) */
 321               	/* function rf_security_enable size 38 (37) */
 323               	.Lscope3:
 325               		.stabd	78,0,0
 327               	.global	rf_security_disable
 329               	rf_security_disable:
 330               		.stabd	46,0,0
 105:../../src/radio/cc2420/source/basic_rf.c **** }
 106:../../src/radio/cc2420/source/basic_rf.c **** 
 107:../../src/radio/cc2420/source/basic_rf.c **** 
 108:../../src/radio/cc2420/source/basic_rf.c **** 
 109:../../src/radio/cc2420/source/basic_rf.c **** void rf_security_disable()
 110:../../src/radio/cc2420/source/basic_rf.c **** {
 332               	.LM15:
 333               	.LFBB4:
 334               	/* prologue: frame size=0 */
 335               	/* prologue end (size=0) */
 111:../../src/radio/cc2420/source/basic_rf.c ****   FASTSPI_SETREG(CC2420_SECCTRL0, 0x01C4); // Turn off "Security enable"
 337               	.LM16:
 338 00e2 4098      		cbi 40-0x20,0
 339 00e4 89E1      		ldi r24,lo8(25)
 340 00e6 8EBD      		out 78-0x20,r24
 341               	.L64:
 343               	.LM17:
 344 00e8 0DB4      		in __tmp_reg__,77-0x20
 345 00ea 07FE      		sbrs __tmp_reg__,7
 346 00ec 00C0      		rjmp .L64
 347 00ee 81E0      		ldi r24,lo8(1)
 348 00f0 8EBD      		out 78-0x20,r24
 349               	.L66:
 350 00f2 0DB4      		in __tmp_reg__,77-0x20
 351 00f4 07FE      		sbrs __tmp_reg__,7
 352 00f6 00C0      		rjmp .L66
 353 00f8 84EC      		ldi r24,lo8(-60)
 354 00fa 8EBD      		out 78-0x20,r24
 355               	.L68:
 356 00fc 0DB4      		in __tmp_reg__,77-0x20
 357 00fe 07FE      		sbrs __tmp_reg__,7
 358 0100 00C0      		rjmp .L68
 359 0102 409A      		sbi 40-0x20,0
 112:../../src/radio/cc2420/source/basic_rf.c ****   security_enable=0;
 361               	.LM18:
 362 0104 1092 0000 		sts security_enable,__zero_reg__
 363               	/* epilogue: frame size=0 */
 364 0108 0895      		ret
 365               	/* epilogue end (size=1) */
 366               	/* function rf_security_disable size 20 (19) */
 368               	.Lscope4:
 370               		.stabd	78,0,0
 372               	.global	rf_get_sem
 374               	rf_get_sem:
 375               		.stabd	46,0,0
 113:../../src/radio/cc2420/source/basic_rf.c **** }
 114:../../src/radio/cc2420/source/basic_rf.c **** 
 115:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 116:../../src/radio/cc2420/source/basic_rf.c **** // The RF settings structure is declared here, since we'll always need halRfInit()
 117:../../src/radio/cc2420/source/basic_rf.c **** volatile RF_SETTINGS rfSettings;
 118:../../src/radio/cc2420/source/basic_rf.c **** volatile uint8_t rx_ready;
 119:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 120:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_t* rf_get_sem()
 121:../../src/radio/cc2420/source/basic_rf.c **** {
 377               	.LM19:
 378               	.LFBB5:
 379               	/* prologue: frame size=0 */
 380               	/* prologue end (size=0) */
 122:../../src/radio/cc2420/source/basic_rf.c **** return radio_sem;
 123:../../src/radio/cc2420/source/basic_rf.c **** }
 382               	.LM20:
 383 010a 8091 0000 		lds r24,radio_sem
 384 010e 9091 0000 		lds r25,(radio_sem)+1
 385               	/* epilogue: frame size=0 */
 386 0112 0895      		ret
 387               	/* epilogue end (size=1) */
 388               	/* function rf_get_sem size 5 (4) */
 390               	.Lscope5:
 392               		.stabd	78,0,0
 394               	.global	rf_addr_decode_enable
 396               	rf_addr_decode_enable:
 397               		.stabd	46,0,0
 124:../../src/radio/cc2420/source/basic_rf.c **** 
 125:../../src/radio/cc2420/source/basic_rf.c **** void rf_tx_power(uint8_t pwr)
 126:../../src/radio/cc2420/source/basic_rf.c **** {
 127:../../src/radio/cc2420/source/basic_rf.c **** uint16_t tmp;
 128:../../src/radio/cc2420/source/basic_rf.c ****     //tmp=0x5070;
 129:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 130:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 131:../../src/radio/cc2420/source/basic_rf.c **** #endif
 132:../../src/radio/cc2420/source/basic_rf.c ****     tmp=0xA0E0;
 133:../../src/radio/cc2420/source/basic_rf.c ****     tmp=tmp | (pwr&0x1F);  
 134:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_TXCTRL, tmp);   // Set the FIFOP threshold to maximum
 135:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 136:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 137:../../src/radio/cc2420/source/basic_rf.c **** #endif
 138:../../src/radio/cc2420/source/basic_rf.c **** }
 139:../../src/radio/cc2420/source/basic_rf.c **** void rf_set_channel( uint8_t channel )
 140:../../src/radio/cc2420/source/basic_rf.c **** {
 141:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 142:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 143:../../src/radio/cc2420/source/basic_rf.c **** #endif
 144:../../src/radio/cc2420/source/basic_rf.c ****     halRfSetChannel(channel);
 145:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 146:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 147:../../src/radio/cc2420/source/basic_rf.c **** #endif
 148:../../src/radio/cc2420/source/basic_rf.c **** }
 149:../../src/radio/cc2420/source/basic_rf.c **** 
 150:../../src/radio/cc2420/source/basic_rf.c **** 
 151:../../src/radio/cc2420/source/basic_rf.c **** void rf_addr_decode_enable()
 152:../../src/radio/cc2420/source/basic_rf.c **** {
 399               	.LM21:
 400               	.LFBB6:
 401               	/* prologue: frame size=0 */
 402               	/* prologue end (size=0) */
 153:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 |= 0x0800;
 404               	.LM22:
 405 0114 2091 0000 		lds r18,mdmctrl0
 406 0118 3091 0000 		lds r19,(mdmctrl0)+1
 407 011c 3860      		ori r19,hi8(2048)
 408 011e 3093 0000 		sts (mdmctrl0)+1,r19
 409 0122 2093 0000 		sts mdmctrl0,r18
 154:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);
 411               	.LM23:
 412 0126 4098      		cbi 40-0x20,0
 413 0128 81E1      		ldi r24,lo8(17)
 414 012a 8EBD      		out 78-0x20,r24
 415               	.L80:
 417               	.LM24:
 418 012c 0DB4      		in __tmp_reg__,77-0x20
 419 012e 07FE      		sbrs __tmp_reg__,7
 420 0130 00C0      		rjmp .L80
 421 0132 832F      		mov r24,r19
 422 0134 9927      		clr r25
 423 0136 8EBD      		out 78-0x20,r24
 424               	.L82:
 425 0138 0DB4      		in __tmp_reg__,77-0x20
 426 013a 07FE      		sbrs __tmp_reg__,7
 427 013c 00C0      		rjmp .L82
 428 013e 2EBD      		out 78-0x20,r18
 429               	.L84:
 430 0140 0DB4      		in __tmp_reg__,77-0x20
 431 0142 07FE      		sbrs __tmp_reg__,7
 432 0144 00C0      		rjmp .L84
 433 0146 409A      		sbi 40-0x20,0
 434               	/* epilogue: frame size=0 */
 435 0148 0895      		ret
 436               	/* epilogue end (size=1) */
 437               	/* function rf_addr_decode_enable size 27 (26) */
 439               	.Lscope6:
 441               		.stabd	78,0,0
 443               	.global	rf_addr_decode_disable
 445               	rf_addr_decode_disable:
 446               		.stabd	46,0,0
 155:../../src/radio/cc2420/source/basic_rf.c **** }
 156:../../src/radio/cc2420/source/basic_rf.c **** 
 157:../../src/radio/cc2420/source/basic_rf.c **** void rf_addr_decode_disable()
 158:../../src/radio/cc2420/source/basic_rf.c **** {
 448               	.LM25:
 449               	.LFBB7:
 450               	/* prologue: frame size=0 */
 451               	/* prologue end (size=0) */
 159:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 &= (~0x0800);
 453               	.LM26:
 454 014a 2091 0000 		lds r18,mdmctrl0
 455 014e 3091 0000 		lds r19,(mdmctrl0)+1
 456 0152 377F      		andi r19,hi8(-2049)
 457 0154 3093 0000 		sts (mdmctrl0)+1,r19
 458 0158 2093 0000 		sts mdmctrl0,r18
 160:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);
 460               	.LM27:
 461 015c 4098      		cbi 40-0x20,0
 462 015e 81E1      		ldi r24,lo8(17)
 463 0160 8EBD      		out 78-0x20,r24
 464               	.L94:
 466               	.LM28:
 467 0162 0DB4      		in __tmp_reg__,77-0x20
 468 0164 07FE      		sbrs __tmp_reg__,7
 469 0166 00C0      		rjmp .L94
 470 0168 832F      		mov r24,r19
 471 016a 9927      		clr r25
 472 016c 8EBD      		out 78-0x20,r24
 473               	.L96:
 474 016e 0DB4      		in __tmp_reg__,77-0x20
 475 0170 07FE      		sbrs __tmp_reg__,7
 476 0172 00C0      		rjmp .L96
 477 0174 2EBD      		out 78-0x20,r18
 478               	.L98:
 479 0176 0DB4      		in __tmp_reg__,77-0x20
 480 0178 07FE      		sbrs __tmp_reg__,7
 481 017a 00C0      		rjmp .L98
 482 017c 409A      		sbi 40-0x20,0
 483               	/* epilogue: frame size=0 */
 484 017e 0895      		ret
 485               	/* epilogue end (size=1) */
 486               	/* function rf_addr_decode_disable size 28 (27) */
 488               	.Lscope7:
 490               		.stabd	78,0,0
 492               	.global	rf_auto_ack_enable
 494               	rf_auto_ack_enable:
 495               		.stabd	46,0,0
 161:../../src/radio/cc2420/source/basic_rf.c **** }
 162:../../src/radio/cc2420/source/basic_rf.c **** 
 163:../../src/radio/cc2420/source/basic_rf.c **** 
 164:../../src/radio/cc2420/source/basic_rf.c **** void rf_auto_ack_enable()
 165:../../src/radio/cc2420/source/basic_rf.c **** {
 497               	.LM29:
 498               	.LFBB8:
 499               	/* prologue: frame size=0 */
 500               	/* prologue end (size=0) */
 166:../../src/radio/cc2420/source/basic_rf.c ****     auto_ack_enable=1;
 502               	.LM30:
 503 0180 81E0      		ldi r24,lo8(1)
 504 0182 8093 0000 		sts auto_ack_enable,r24
 167:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 |= 0x0010;
 506               	.LM31:
 507 0186 2091 0000 		lds r18,mdmctrl0
 508 018a 3091 0000 		lds r19,(mdmctrl0)+1
 509 018e 2061      		ori r18,lo8(16)
 510 0190 3093 0000 		sts (mdmctrl0)+1,r19
 511 0194 2093 0000 		sts mdmctrl0,r18
 168:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0); 
 513               	.LM32:
 514 0198 4098      		cbi 40-0x20,0
 515 019a 81E1      		ldi r24,lo8(17)
 516 019c 8EBD      		out 78-0x20,r24
 517               	.L108:
 519               	.LM33:
 520 019e 0DB4      		in __tmp_reg__,77-0x20
 521 01a0 07FE      		sbrs __tmp_reg__,7
 522 01a2 00C0      		rjmp .L108
 523 01a4 832F      		mov r24,r19
 524 01a6 9927      		clr r25
 525 01a8 8EBD      		out 78-0x20,r24
 526               	.L110:
 527 01aa 0DB4      		in __tmp_reg__,77-0x20
 528 01ac 07FE      		sbrs __tmp_reg__,7
 529 01ae 00C0      		rjmp .L110
 530 01b0 2EBD      		out 78-0x20,r18
 531               	.L112:
 532 01b2 0DB4      		in __tmp_reg__,77-0x20
 533 01b4 07FE      		sbrs __tmp_reg__,7
 534 01b6 00C0      		rjmp .L112
 535 01b8 409A      		sbi 40-0x20,0
 536               	/* epilogue: frame size=0 */
 537 01ba 0895      		ret
 538               	/* epilogue end (size=1) */
 539               	/* function rf_auto_ack_enable size 30 (29) */
 541               	.Lscope8:
 543               		.stabd	78,0,0
 545               	.global	rf_auto_ack_disable
 547               	rf_auto_ack_disable:
 548               		.stabd	46,0,0
 169:../../src/radio/cc2420/source/basic_rf.c **** }
 170:../../src/radio/cc2420/source/basic_rf.c **** 
 171:../../src/radio/cc2420/source/basic_rf.c **** void rf_auto_ack_disable()
 172:../../src/radio/cc2420/source/basic_rf.c **** {
 550               	.LM34:
 551               	.LFBB9:
 552               	/* prologue: frame size=0 */
 553               	/* prologue end (size=0) */
 173:../../src/radio/cc2420/source/basic_rf.c ****     auto_ack_enable=0;
 555               	.LM35:
 556 01bc 1092 0000 		sts auto_ack_enable,__zero_reg__
 174:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0 &= (~0x0010);
 558               	.LM36:
 559 01c0 2091 0000 		lds r18,mdmctrl0
 560 01c4 3091 0000 		lds r19,(mdmctrl0)+1
 561 01c8 2F7E      		andi r18,lo8(-17)
 562 01ca 3093 0000 		sts (mdmctrl0)+1,r19
 563 01ce 2093 0000 		sts mdmctrl0,r18
 175:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);  
 565               	.LM37:
 566 01d2 4098      		cbi 40-0x20,0
 567 01d4 81E1      		ldi r24,lo8(17)
 568 01d6 8EBD      		out 78-0x20,r24
 569               	.L122:
 571               	.LM38:
 572 01d8 0DB4      		in __tmp_reg__,77-0x20
 573 01da 07FE      		sbrs __tmp_reg__,7
 574 01dc 00C0      		rjmp .L122
 575 01de 832F      		mov r24,r19
 576 01e0 9927      		clr r25
 577 01e2 8EBD      		out 78-0x20,r24
 578               	.L124:
 579 01e4 0DB4      		in __tmp_reg__,77-0x20
 580 01e6 07FE      		sbrs __tmp_reg__,7
 581 01e8 00C0      		rjmp .L124
 582 01ea 2EBD      		out 78-0x20,r18
 583               	.L126:
 584 01ec 0DB4      		in __tmp_reg__,77-0x20
 585 01ee 07FE      		sbrs __tmp_reg__,7
 586 01f0 00C0      		rjmp .L126
 587 01f2 409A      		sbi 40-0x20,0
 588               	/* epilogue: frame size=0 */
 589 01f4 0895      		ret
 590               	/* epilogue end (size=1) */
 591               	/* function rf_auto_ack_disable size 30 (29) */
 593               	.Lscope9:
 595               		.stabd	78,0,0
 597               	.global	rf_busy
 599               	rf_busy:
 600               		.stabd	46,0,0
 176:../../src/radio/cc2420/source/basic_rf.c **** }
 177:../../src/radio/cc2420/source/basic_rf.c **** 
 178:../../src/radio/cc2420/source/basic_rf.c **** 
 179:../../src/radio/cc2420/source/basic_rf.c **** void rf_addr_decode_set_my_mac(uint16_t my_mac)
 180:../../src/radio/cc2420/source/basic_rf.c **** {
 181:../../src/radio/cc2420/source/basic_rf.c **** uint8_t n;
 182:../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.myAddr = my_mac;
 183:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 184:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&my_mac, CC2420RAM_SHORTADDR, 2, n);
 185:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 186:../../src/radio/cc2420/source/basic_rf.c **** }
 187:../../src/radio/cc2420/source/basic_rf.c **** 
 188:../../src/radio/cc2420/source/basic_rf.c **** 
 189:../../src/radio/cc2420/source/basic_rf.c **** 
 190:../../src/radio/cc2420/source/basic_rf.c **** void rf_set_rx(RF_RX_INFO *pRRI, uint8_t channel )
 191:../../src/radio/cc2420/source/basic_rf.c **** {
 192:../../src/radio/cc2420/source/basic_rf.c **** 
 193:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 194:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 195:../../src/radio/cc2420/source/basic_rf.c **** #endif
 196:../../src/radio/cc2420/source/basic_rf.c **** 
 197:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHRX);
 198:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHRX);
 199:../../src/radio/cc2420/source/basic_rf.c ****     halRfSetChannel(channel);
 200:../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.pRxInfo = pRRI;
 201:../../src/radio/cc2420/source/basic_rf.c **** 
 202:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 203:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 204:../../src/radio/cc2420/source/basic_rf.c **** #endif
 205:../../src/radio/cc2420/source/basic_rf.c **** }
 206:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 207:../../src/radio/cc2420/source/basic_rf.c **** //  void rf_init(RF_RX_INFO *pRRI, uint8_t channel, WORD panId, WORD myAddr)
 208:../../src/radio/cc2420/source/basic_rf.c **** //
 209:../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 210:../../src/radio/cc2420/source/basic_rf.c **** //      Initializes CC2420 for radio communication via the basic RF library functions. Turns on the
 211:../../src/radio/cc2420/source/basic_rf.c **** //		voltage regulator, resets the CC2420, turns on the crystal oscillator, writes all necessary
 212:../../src/radio/cc2420/source/basic_rf.c **** //		registers and protocol addresses (for automatic address recognition). Note that the crystal
 213:../../src/radio/cc2420/source/basic_rf.c **** //		oscillator will remain on (forever).
 214:../../src/radio/cc2420/source/basic_rf.c **** //
 215:../../src/radio/cc2420/source/basic_rf.c **** //  ARGUMENTS:
 216:../../src/radio/cc2420/source/basic_rf.c **** //      RF_RX_INFO *pRRI
 217:../../src/radio/cc2420/source/basic_rf.c **** //          A pointer the RF_RX_INFO data structure to be used during the first packet reception.
 218:../../src/radio/cc2420/source/basic_rf.c **** //			The structure can be switched upon packet reception.
 219:../../src/radio/cc2420/source/basic_rf.c **** //      uint8_t channel
 220:../../src/radio/cc2420/source/basic_rf.c **** //          The RF channel to be used (11 = 2405 MHz to 26 = 2480 MHz)
 221:../../src/radio/cc2420/source/basic_rf.c **** //      WORD panId
 222:../../src/radio/cc2420/source/basic_rf.c **** //          The personal area network identification number
 223:../../src/radio/cc2420/source/basic_rf.c **** //      WORD myAddr
 224:../../src/radio/cc2420/source/basic_rf.c **** //          The 16-bit short address which is used by this node. Must together with the PAN ID form
 225:../../src/radio/cc2420/source/basic_rf.c **** //			unique 32-bit identifier to avoid addressing conflicts. Normally, in a 802.15.4 network, the
 226:../../src/radio/cc2420/source/basic_rf.c **** //			short address will be given to associated nodes by the PAN coordinator.
 227:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 228:../../src/radio/cc2420/source/basic_rf.c **** void rf_init(RF_RX_INFO *pRRI, uint8_t channel, uint16_t panId, uint16_t myAddr) {
 229:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t n;
 230:../../src/radio/cc2420/source/basic_rf.c **** 
 231:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 232:../../src/radio/cc2420/source/basic_rf.c ****    int8_t v;
 233:../../src/radio/cc2420/source/basic_rf.c ****     radio_sem = nrk_sem_create(1,RADIO_PRIORITY_CEILING);
 234:../../src/radio/cc2420/source/basic_rf.c ****     if (radio_sem == NULL)
 235:../../src/radio/cc2420/source/basic_rf.c ****       nrk_kernel_error_add (NRK_SEMAPHORE_CREATE_ERROR, nrk_get_pid ());
 236:../../src/radio/cc2420/source/basic_rf.c **** 
 237:../../src/radio/cc2420/source/basic_rf.c ****   v = nrk_sem_pend (radio_sem);
 238:../../src/radio/cc2420/source/basic_rf.c ****   if (v == NRK_ERROR) {
 239:../../src/radio/cc2420/source/basic_rf.c ****     nrk_kprintf (PSTR ("CC2420 ERROR:  Access to semaphore failed\r\n"));
 240:../../src/radio/cc2420/source/basic_rf.c ****   }
 241:../../src/radio/cc2420/source/basic_rf.c **** #endif
 242:../../src/radio/cc2420/source/basic_rf.c **** 
 243:../../src/radio/cc2420/source/basic_rf.c ****     // Make sure that the voltage regulator is on, and that the reset pin is inactive
 244:../../src/radio/cc2420/source/basic_rf.c ****     SET_VREG_ACTIVE();
 245:../../src/radio/cc2420/source/basic_rf.c ****     halWait(1000);
 246:../../src/radio/cc2420/source/basic_rf.c ****     SET_RESET_ACTIVE();
 247:../../src/radio/cc2420/source/basic_rf.c ****     halWait(1);
 248:../../src/radio/cc2420/source/basic_rf.c ****     SET_RESET_INACTIVE();
 249:../../src/radio/cc2420/source/basic_rf.c ****     halWait(100);
 250:../../src/radio/cc2420/source/basic_rf.c **** 
 251:../../src/radio/cc2420/source/basic_rf.c ****     // Initialize the FIFOP external interrupt
 252:../../src/radio/cc2420/source/basic_rf.c ****     //FIFOP_INT_INIT();
 253:../../src/radio/cc2420/source/basic_rf.c ****     //ENABLE_FIFOP_INT();
 254:../../src/radio/cc2420/source/basic_rf.c **** 
 255:../../src/radio/cc2420/source/basic_rf.c ****     // Turn off all interrupts while we're accessing the CC2420 registers
 256:../../src/radio/cc2420/source/basic_rf.c **** 	DISABLE_GLOBAL_INT();
 257:../../src/radio/cc2420/source/basic_rf.c **** 
 258:../../src/radio/cc2420/source/basic_rf.c ****     // Register modifications
 259:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SXOSCON);
 260:../../src/radio/cc2420/source/basic_rf.c ****     mdmctrl0=0x02E2;
 261:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, mdmctrl0);  // Std Preamble, CRC, no auto ack, no hw addr decod
 262:../../src/radio/cc2420/source/basic_rf.c ****     //FASTSPI_SETREG(CC2420_MDMCTRL0, 0x0AF2);  // Turn on automatic packet acknowledgment
 263:../../src/radio/cc2420/source/basic_rf.c **** 						// Turn on hw addre decoding 
 264:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0500); // Set the correlation threshold = 20
 265:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_IOCFG0, 0x007F);   // Set the FIFOP threshold to maximum
 266:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_SECCTRL0, 0x01C4); // Turn off "Security"
 267:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_RXCTRL1, 0x1A56); // All default except
 268:../../src/radio/cc2420/source/basic_rf.c **** 					    // reference bias current to RX
 269:../../src/radio/cc2420/source/basic_rf.c **** 					    // bandpass filter is set to 3uA 
 270:../../src/radio/cc2420/source/basic_rf.c **** 
 271:../../src/radio/cc2420/source/basic_rf.c **** /*
 272:../../src/radio/cc2420/source/basic_rf.c ****     // FIXME: remove later for auto ack
 273:../../src/radio/cc2420/source/basic_rf.c ****     myAddr=MY_MAC;
 274:../../src/radio/cc2420/source/basic_rf.c ****     panId=0x02;
 275:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_SETREG(CC2420_MDMCTRL0, 0x0AF2);  // Turn on automatic packet acknowledgment
 276:../../src/radio/cc2420/source/basic_rf.c **** //    FASTSPI_SETREG(CC2420_MDMCTRL0, 0x0AE2);  // Turn on automatic packet acknowledgment
 277:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 278:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 279:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&myAddr, CC2420RAM_SHORTADDR, 2, n);
 280:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 281:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&panId, CC2420RAM_PANID, 2, n);
 282:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 283:../../src/radio/cc2420/source/basic_rf.c ****     
 284:../../src/radio/cc2420/source/basic_rf.c ****    printf( "myAddr=%d\r\n",myAddr );
 285:../../src/radio/cc2420/source/basic_rf.c **** */
 286:../../src/radio/cc2420/source/basic_rf.c **** 
 287:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 288:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_RAM_LE(&panId, CC2420RAM_PANID, 2, n);
 289:../../src/radio/cc2420/source/basic_rf.c ****     nrk_spin_wait_us(500);
 290:../../src/radio/cc2420/source/basic_rf.c **** 
 291:../../src/radio/cc2420/source/basic_rf.c ****   	ENABLE_GLOBAL_INT();
 292:../../src/radio/cc2420/source/basic_rf.c **** 
 293:../../src/radio/cc2420/source/basic_rf.c ****     // Set the RF channel
 294:../../src/radio/cc2420/source/basic_rf.c ****     halRfSetChannel(channel);
 295:../../src/radio/cc2420/source/basic_rf.c **** 
 296:../../src/radio/cc2420/source/basic_rf.c ****     // Turn interrupts back on
 297:../../src/radio/cc2420/source/basic_rf.c **** 	ENABLE_GLOBAL_INT();
 298:../../src/radio/cc2420/source/basic_rf.c **** 
 299:../../src/radio/cc2420/source/basic_rf.c **** 	// Set the protocol configuration
 300:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.pRxInfo = pRRI;
 301:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.panId = panId;
 302:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.myAddr = myAddr;
 303:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.txSeqNumber = 0;
 304:../../src/radio/cc2420/source/basic_rf.c ****         rfSettings.receiveOn = FALSE;
 305:../../src/radio/cc2420/source/basic_rf.c **** 
 306:../../src/radio/cc2420/source/basic_rf.c **** 	// Wait for the crystal oscillator to become stable
 307:../../src/radio/cc2420/source/basic_rf.c ****     halRfWaitForCrystalOscillator();
 308:../../src/radio/cc2420/source/basic_rf.c **** 
 309:../../src/radio/cc2420/source/basic_rf.c **** 	// Write the short address and the PAN ID to the CC2420 RAM (requires that the XOSC is on and stab
 310:../../src/radio/cc2420/source/basic_rf.c ****    //	DISABLE_GLOBAL_INT();
 311:../../src/radio/cc2420/source/basic_rf.c **** //    FASTSPI_WRITE_RAM_LE(&myAddr, CC2420RAM_SHORTADDR, 2, n);
 312:../../src/radio/cc2420/source/basic_rf.c **** //    FASTSPI_WRITE_RAM_LE(&panId, CC2420RAM_PANID, 2, n);
 313:../../src/radio/cc2420/source/basic_rf.c ****   //	ENABLE_GLOBAL_INT();
 314:../../src/radio/cc2420/source/basic_rf.c **** 
 315:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 316:../../src/radio/cc2420/source/basic_rf.c ****   v = nrk_sem_post (radio_sem);
 317:../../src/radio/cc2420/source/basic_rf.c ****   if (v == NRK_ERROR) {
 318:../../src/radio/cc2420/source/basic_rf.c ****     nrk_kprintf (PSTR ("CC2420 ERROR:  Release of semaphore failed\r\n"));
 319:../../src/radio/cc2420/source/basic_rf.c ****     _nrk_errno_set (2);
 320:../../src/radio/cc2420/source/basic_rf.c ****   }
 321:../../src/radio/cc2420/source/basic_rf.c **** #endif
 322:../../src/radio/cc2420/source/basic_rf.c **** 
 323:../../src/radio/cc2420/source/basic_rf.c **** auto_ack_enable=0;
 324:../../src/radio/cc2420/source/basic_rf.c **** security_enable=0;
 325:../../src/radio/cc2420/source/basic_rf.c **** last_pkt_encrypted=0;
 326:../../src/radio/cc2420/source/basic_rf.c **** } // rf_init() 
 327:../../src/radio/cc2420/source/basic_rf.c **** 
 328:../../src/radio/cc2420/source/basic_rf.c **** 
 329:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 330:../../src/radio/cc2420/source/basic_rf.c **** //  void rf_rx_on(void)
 331:../../src/radio/cc2420/source/basic_rf.c **** //
 332:../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 333:../../src/radio/cc2420/source/basic_rf.c **** //      Enables the CC2420 receiver and the FIFOP interrupt. When a packet is received through this
 334:../../src/radio/cc2420/source/basic_rf.c **** //      interrupt, it will call rf_rx_callback(...), which must be defined by the application
 335:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 336:../../src/radio/cc2420/source/basic_rf.c **** void rf_rx_on(void) {
 337:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 338:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 339:../../src/radio/cc2420/source/basic_rf.c **** #endif
 340:../../src/radio/cc2420/source/basic_rf.c ****     	rfSettings.receiveOn = TRUE;
 341:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRXON);
 342:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 343:../../src/radio/cc2420/source/basic_rf.c **** 	rx_ready=0;
 344:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 345:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 346:../../src/radio/cc2420/source/basic_rf.c **** #endif
 347:../../src/radio/cc2420/source/basic_rf.c ****     //	ENABLE_FIFOP_INT();
 348:../../src/radio/cc2420/source/basic_rf.c **** } // rf_rx_on() 
 349:../../src/radio/cc2420/source/basic_rf.c **** 
 350:../../src/radio/cc2420/source/basic_rf.c **** void rf_polling_rx_on(void) {
 351:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 352:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 353:../../src/radio/cc2420/source/basic_rf.c **** #endif
 354:../../src/radio/cc2420/source/basic_rf.c ****     	rfSettings.receiveOn = TRUE;
 355:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRXON);
 356:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 357:../../src/radio/cc2420/source/basic_rf.c **** 	rx_ready=0;
 358:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 359:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 360:../../src/radio/cc2420/source/basic_rf.c **** #endif
 361:../../src/radio/cc2420/source/basic_rf.c **** } // rf_rx_on() 
 362:../../src/radio/cc2420/source/basic_rf.c **** 
 363:../../src/radio/cc2420/source/basic_rf.c **** 
 364:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
 365:../../src/radio/cc2420/source/basic_rf.c **** // Here is a sample of the rf_rx_callback() that should
 366:../../src/radio/cc2420/source/basic_rf.c **** // be placed in your application
 367:../../src/radio/cc2420/source/basic_rf.c **** 
 368:../../src/radio/cc2420/source/basic_rf.c **** RF_RX_INFO* rf_rx_callback(RF_RX_INFO *pRRI) {
 369:../../src/radio/cc2420/source/basic_rf.c **** 	// Its okay to leave this empty...    
 370:../../src/radio/cc2420/source/basic_rf.c **** 	return pRRI;
 371:../../src/radio/cc2420/source/basic_rf.c **** }  
 372:../../src/radio/cc2420/source/basic_rf.c **** ***********************************************************/
 373:../../src/radio/cc2420/source/basic_rf.c **** 
 374:../../src/radio/cc2420/source/basic_rf.c **** 
 375:../../src/radio/cc2420/source/basic_rf.c **** 
 376:../../src/radio/cc2420/source/basic_rf.c **** 
 377:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 378:../../src/radio/cc2420/source/basic_rf.c **** //  void rf_rx_off(void)
 379:../../src/radio/cc2420/source/basic_rf.c **** //
 380:../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 381:../../src/radio/cc2420/source/basic_rf.c **** //      Disables the CC2420 receiver and the FIFOP interrupt.
 382:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 383:../../src/radio/cc2420/source/basic_rf.c **** void rf_rx_off(void) {
 384:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 385:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_pend (radio_sem);
 386:../../src/radio/cc2420/source/basic_rf.c **** #endif
 387:../../src/radio/cc2420/source/basic_rf.c **** 	// XXX
 388:../../src/radio/cc2420/source/basic_rf.c ****     	//SET_VREG_INACTIVE();	
 389:../../src/radio/cc2420/source/basic_rf.c **** 	rfSettings.receiveOn = FALSE;
 390:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRFOFF);
 391:../../src/radio/cc2420/source/basic_rf.c **** 	rx_ready=0;
 392:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 393:../../src/radio/cc2420/source/basic_rf.c ****     nrk_sem_post(radio_sem);
 394:../../src/radio/cc2420/source/basic_rf.c **** #endif
 395:../../src/radio/cc2420/source/basic_rf.c ****     //	DISABLE_FIFOP_INT();
 396:../../src/radio/cc2420/source/basic_rf.c **** } // rf_rx_off() 
 397:../../src/radio/cc2420/source/basic_rf.c **** 
 398:../../src/radio/cc2420/source/basic_rf.c **** 
 399:../../src/radio/cc2420/source/basic_rf.c **** /**************************************************************************
 400:../../src/radio/cc2420/source/basic_rf.c **** This function is the same as normal TX, only it waits until the last
 401:../../src/radio/cc2420/source/basic_rf.c **** second to send the duty out with the high speed timer.  And by duty, I mean
 402:../../src/radio/cc2420/source/basic_rf.c **** the packet BIATCH...
 403:../../src/radio/cc2420/source/basic_rf.c **** **************************************************************************/
 404:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_tx_tdma_packet(RF_TX_INFO *pRTI, uint16_t slot_start_time, uint16_t tx_guard_time) {
 405:../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
 406:../../src/radio/cc2420/source/basic_rf.c ****     	uint8_t packetLength;
 407:../../src/radio/cc2420/source/basic_rf.c ****     	uint8_t success;
 408:../../src/radio/cc2420/source/basic_rf.c ****     	uint8_t spiStatusByte;
 409:../../src/radio/cc2420/source/basic_rf.c ****    	uint8_t checksum,i;
 410:../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t timestamp;
 411:../../src/radio/cc2420/source/basic_rf.c **** 
 412:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 413:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend (radio_sem);
 414:../../src/radio/cc2420/source/basic_rf.c **** #endif
 415:../../src/radio/cc2420/source/basic_rf.c **** 	timestamp=_nrk_os_timer_get();
 416:../../src/radio/cc2420/source/basic_rf.c **** 	// XXX 2 below are hacks...
 417:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 418:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 419:../../src/radio/cc2420/source/basic_rf.c ****     // Wait until the transceiver is idle
 420:../../src/radio/cc2420/source/basic_rf.c ****      while (FIFOP_IS_1 || SFD_IS_1);
 421:../../src/radio/cc2420/source/basic_rf.c ****     // Turn off global interrupts to avoid interference on the SPI interface
 422:../../src/radio/cc2420/source/basic_rf.c ****       DISABLE_GLOBAL_INT();
 423:../../src/radio/cc2420/source/basic_rf.c **** 	// Flush the TX FIFO just in case...
 424:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 425:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 426:../../src/radio/cc2420/source/basic_rf.c **** 
 427:../../src/radio/cc2420/source/basic_rf.c ****     checksum=0;
 428:../../src/radio/cc2420/source/basic_rf.c ****     for(i=0; i<pRTI->length; i++ )
 429:../../src/radio/cc2420/source/basic_rf.c ****     {
 430:../../src/radio/cc2420/source/basic_rf.c **** 	// lets do our own payload checksum because we don't trust the CRC
 431:../../src/radio/cc2420/source/basic_rf.c **** 	checksum+=pRTI->pPayload[i];
 432:../../src/radio/cc2420/source/basic_rf.c ****     }
 433:../../src/radio/cc2420/source/basic_rf.c ****     packetLength = pRTI->length + RF_PACKET_OVERHEAD_SIZE + CHECKSUM_OVERHEAD;
 434:../../src/radio/cc2420/source/basic_rf.c ****     //nrk_set_led(3);
 435:../../src/radio/cc2420/source/basic_rf.c ****     //do { } while(_nrk_get_high_speed_timer()<(tx_guard_time));
 436:../../src/radio/cc2420/source/basic_rf.c ****     
 437:../../src/radio/cc2420/source/basic_rf.c ****     // Write the packet to the TX FIFO (the FCS is appended automatically when AUTOCRC is enabled)
 438:../../src/radio/cc2420/source/basic_rf.c ****     // These are only the MAC AGNOSTIC parameters...
 439:../../src/radio/cc2420/source/basic_rf.c ****     // Slots for example are at a higher layer since they assume TDMA
 440:../../src/radio/cc2420/source/basic_rf.c ****     
 441:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*)&packetLength, 1);               // Packet length
 442:../../src/radio/cc2420/source/basic_rf.c ****     frameControlField = pRTI->ackRequest ? RF_FCF_ACK : RF_FCF_NOACK;
 443:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &frameControlField, 2);         // Frame control field
 444:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.txSeqNumber, 1);    // Sequence number
 445:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.panId, 2);          // Dest. PAN ID
 446:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &pRTI->destAddr, 2);            // Dest. address
 447:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.myAddr, 2);         // Source address
 448:../../src/radio/cc2420/source/basic_rf.c **** 
 449:../../src/radio/cc2420/source/basic_rf.c ****     nrk_high_speed_timer_wait(slot_start_time,tx_guard_time);
 450:../../src/radio/cc2420/source/basic_rf.c ****     //nrk_clr_led(3);
 451:../../src/radio/cc2420/source/basic_rf.c ****     /*
 452:../../src/radio/cc2420/source/basic_rf.c **** 	DISABLE_GLOBAL_INT();
 453:../../src/radio/cc2420/source/basic_rf.c ****      nrk_set_led(3);
 454:../../src/radio/cc2420/source/basic_rf.c ****     last=0;
 455:../../src/radio/cc2420/source/basic_rf.c **** 	do {
 456:../../src/radio/cc2420/source/basic_rf.c **** 	if(last==_nrk_get_high_speed_timer())
 457:../../src/radio/cc2420/source/basic_rf.c **** 		{
 458:../../src/radio/cc2420/source/basic_rf.c **** 		//while(1)
 459:../../src/radio/cc2420/source/basic_rf.c **** 		//printf( "TX ERROR %d vs %d\r\n",_nrk_get_high_speed_timer(),tx_guard_time );
 460:../../src/radio/cc2420/source/basic_rf.c **** 		break;
 461:../../src/radio/cc2420/source/basic_rf.c **** 		}	
 462:../../src/radio/cc2420/source/basic_rf.c **** 	last=_nrk_get_high_speed_timer();
 463:../../src/radio/cc2420/source/basic_rf.c **** 	}
 464:../../src/radio/cc2420/source/basic_rf.c **** 	while((volatile)last<(tx_guard_time));
 465:../../src/radio/cc2420/source/basic_rf.c ****      
 466:../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
 467:../../src/radio/cc2420/source/basic_rf.c **** 	nrk_clr_led(3);
 468:../../src/radio/cc2420/source/basic_rf.c **** */
 469:../../src/radio/cc2420/source/basic_rf.c **** /*
 470:../../src/radio/cc2420/source/basic_rf.c ****     // Turn on RX if necessary
 471:../../src/radio/cc2420/source/basic_rf.c ****     if (!rfSettings.receiveOn) {
 472:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SRXON);
 473:../../src/radio/cc2420/source/basic_rf.c **** 		}
 474:../../src/radio/cc2420/source/basic_rf.c **** 
 475:../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the RSSI value to become valid
 476:../../src/radio/cc2420/source/basic_rf.c ****     do {
 477:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_UPD_STATUS(spiStatusByte);
 478:../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_RSSI_VALID)));
 479:../../src/radio/cc2420/source/basic_rf.c **** 
 480:../../src/radio/cc2420/source/basic_rf.c **** 	// TX begins after the CCA check has passed
 481:../../src/radio/cc2420/source/basic_rf.c ****     do {
 482:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_STXONCCA);
 483:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_UPD_STATUS(spiStatusByte);
 484:../../src/radio/cc2420/source/basic_rf.c **** 		halWait(100);
 485:../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_TX_ACTIVE)));
 486:../../src/radio/cc2420/source/basic_rf.c **** */
 487:../../src/radio/cc2420/source/basic_rf.c **** if (pRTI->cca == TRUE)
 488:../../src/radio/cc2420/source/basic_rf.c ****     {
 489:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t cnt;
 490:../../src/radio/cc2420/source/basic_rf.c ****       if (!rfSettings.receiveOn)
 491:../../src/radio/cc2420/source/basic_rf.c **** 	{
 492:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_SRXON);
 493:../../src/radio/cc2420/source/basic_rf.c **** 	}
 494:../../src/radio/cc2420/source/basic_rf.c **** 
 495:../../src/radio/cc2420/source/basic_rf.c ****       // Wait for the RSSI value to become valid
 496:../../src/radio/cc2420/source/basic_rf.c ****       do
 497:../../src/radio/cc2420/source/basic_rf.c **** 	{
 498:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 499:../../src/radio/cc2420/source/basic_rf.c **** 	}
 500:../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_RSSI_VALID)));
 501:../../src/radio/cc2420/source/basic_rf.c **** 
 502:../../src/radio/cc2420/source/basic_rf.c ****       // TX begins after the CCA check has passed
 503:../../src/radio/cc2420/source/basic_rf.c ****       cnt = 0;
 504:../../src/radio/cc2420/source/basic_rf.c ****       do
 505:../../src/radio/cc2420/source/basic_rf.c **** 	{
 506:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_STXONCCA);
 507:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 508:../../src/radio/cc2420/source/basic_rf.c **** 	  cnt++;
 509:../../src/radio/cc2420/source/basic_rf.c **** 	  if (cnt > 100)
 510:../../src/radio/cc2420/source/basic_rf.c **** 	    {
 511:../../src/radio/cc2420/source/basic_rf.c **** 	      ENABLE_GLOBAL_INT ();
 512:../../src/radio/cc2420/source/basic_rf.c **** 		nrk_sem_post(radio_sem);
 513:../../src/radio/cc2420/source/basic_rf.c **** 	      return FALSE;
 514:../../src/radio/cc2420/source/basic_rf.c **** 	    }
 515:../../src/radio/cc2420/source/basic_rf.c **** 	  halWait (100);
 516:../../src/radio/cc2420/source/basic_rf.c **** 	}
 517:../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_TX_ACTIVE)));
 518:../../src/radio/cc2420/source/basic_rf.c ****     }
 519:../../src/radio/cc2420/source/basic_rf.c ****   else
 520:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE (CC2420_STXON);
 521:../../src/radio/cc2420/source/basic_rf.c **** 	 //nrk_gpio_set(DEBUG_0);
 522:../../src/radio/cc2420/source/basic_rf.c **** 
 523:../../src/radio/cc2420/source/basic_rf.c **** 
 524:../../src/radio/cc2420/source/basic_rf.c ****     // Fill in the rest of the packet now
 525:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) pRTI->pPayload, pRTI->length);  // Payload
 526:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &checksum, 1);         // Checksum
 527:../../src/radio/cc2420/source/basic_rf.c **** 
 528:../../src/radio/cc2420/source/basic_rf.c **** 
 529:../../src/radio/cc2420/source/basic_rf.c **** 
 530:../../src/radio/cc2420/source/basic_rf.c ****     //nrk_spin_wait_us(200);
 531:../../src/radio/cc2420/source/basic_rf.c **** //  FASTSPI_STROBE(CC2420_STXON);
 532:../../src/radio/cc2420/source/basic_rf.c ****    // Wait for the transmission to begin before exiting (makes sure that this function cannot be ca
 533:../../src/radio/cc2420/source/basic_rf.c **** 	// a second time, and thereby cancelling the first transmission (observe the FIFOP + SFD test abov
 534:../../src/radio/cc2420/source/basic_rf.c **** 	while (!SFD_IS_1);
 535:../../src/radio/cc2420/source/basic_rf.c **** 	success = TRUE;
 536:../../src/radio/cc2420/source/basic_rf.c **** 
 537:../../src/radio/cc2420/source/basic_rf.c **** 	// Turn interrupts back on
 538:../../src/radio/cc2420/source/basic_rf.c **** //	ENABLE_GLOBAL_INT();
 539:../../src/radio/cc2420/source/basic_rf.c **** 
 540:../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the acknowledge to be received, if any
 541:../../src/radio/cc2420/source/basic_rf.c ****     /*if (pRTI->ackRequest) {
 542:../../src/radio/cc2420/source/basic_rf.c **** 		rfSettings.ackReceived = FALSE;
 543:../../src/radio/cc2420/source/basic_rf.c **** 
 544:../../src/radio/cc2420/source/basic_rf.c **** 		// Wait for the SFD to go low again
 545:../../src/radio/cc2420/source/basic_rf.c **** 		while (SFD_IS_1);
 546:../../src/radio/cc2420/source/basic_rf.c ****         // We'll enter RX automatically, so just wait until we can be sure that the ack reception s
 547:../../src/radio/cc2420/source/basic_rf.c ****         // The timeout consists of a 12-symbol turnaround time, the ack packet duration, and a smal
 548:../../src/radio/cc2420/source/basic_rf.c ****         halWait((12 * RF_SYMBOL_DURATION) + (RF_ACK_DURATION) + (2 * RF_SYMBOL_DURATION) + 100);
 549:../../src/radio/cc2420/source/basic_rf.c **** 
 550:../../src/radio/cc2420/source/basic_rf.c **** 		// If an acknowledgment has been received (by the FIFOP interrupt), the ackReceived flag should b
 551:../../src/radio/cc2420/source/basic_rf.c **** 		success = rfSettings.ackReceived;
 552:../../src/radio/cc2420/source/basic_rf.c ****     }*/
 553:../../src/radio/cc2420/source/basic_rf.c **** 
 554:../../src/radio/cc2420/source/basic_rf.c ****     
 555:../../src/radio/cc2420/source/basic_rf.c **** 	// Turn off the receiver if it should not continue to be enabled
 556:../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();
 557:../../src/radio/cc2420/source/basic_rf.c ****     // XXX hack, temp out
 558:../../src/radio/cc2420/source/basic_rf.c ****     //if (!rfSettings.receiveOn) { while (SFD_IS_1); /*FASTSPI_STROBE(CC2420_SRFOFF);*/ }
 559:../../src/radio/cc2420/source/basic_rf.c ****     // while (SFD_IS_1); 
 560:../../src/radio/cc2420/source/basic_rf.c ****     while (SFD_IS_1); // wait for packet to finish
 561:../../src/radio/cc2420/source/basic_rf.c ****     	
 562:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 563:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHRX);
 564:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 565:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SFLUSHTX);
 566:../../src/radio/cc2420/source/basic_rf.c **** 
 567:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_STROBE(CC2420_SRFOFF);  // shut off radio
 568:../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
 569:../../src/radio/cc2420/source/basic_rf.c ****     
 570:../../src/radio/cc2420/source/basic_rf.c **** 
 571:../../src/radio/cc2420/source/basic_rf.c ****     // Increment the sequence number, and return the result
 572:../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.txSeqNumber++;
 573:../../src/radio/cc2420/source/basic_rf.c **** //	while (SFD_IS_1);
 574:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 575:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 576:../../src/radio/cc2420/source/basic_rf.c **** #endif
 577:../../src/radio/cc2420/source/basic_rf.c **** 
 578:../../src/radio/cc2420/source/basic_rf.c ****     return success;
 579:../../src/radio/cc2420/source/basic_rf.c **** 
 580:../../src/radio/cc2420/source/basic_rf.c **** }
 581:../../src/radio/cc2420/source/basic_rf.c **** 
 582:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 583:../../src/radio/cc2420/source/basic_rf.c **** //  BYTE rf_tx_packet(RF_TX_INFO *pRTI)
 584:../../src/radio/cc2420/source/basic_rf.c **** //
 585:../../src/radio/cc2420/source/basic_rf.c **** //  DESCRIPTION:
 586:../../src/radio/cc2420/source/basic_rf.c **** //		Transmits a packet using the IEEE 802.15.4 MAC data packet format with short addresses. CCA is
 587:../../src/radio/cc2420/source/basic_rf.c **** //		measured only once before backet transmission (not compliant with 802.15.4 CSMA-CA).
 588:../../src/radio/cc2420/source/basic_rf.c **** //		The function returns:
 589:../../src/radio/cc2420/source/basic_rf.c **** //			- When pRTI->ackRequest is FALSE: After the transmission has begun (SFD gone high)
 590:../../src/radio/cc2420/source/basic_rf.c **** //			- When pRTI->ackRequest is TRUE: After the acknowledgment has been received/declared missing.
 591:../../src/radio/cc2420/source/basic_rf.c **** //		The acknowledgment is received through the FIFOP interrupt.
 592:../../src/radio/cc2420/source/basic_rf.c **** //
 593:../../src/radio/cc2420/source/basic_rf.c **** //  ARGUMENTS:
 594:../../src/radio/cc2420/source/basic_rf.c **** //      RF_TX_INFO *pRTI
 595:../../src/radio/cc2420/source/basic_rf.c **** //          The transmission structure, which contains all relevant info about the packet.
 596:../../src/radio/cc2420/source/basic_rf.c **** //
 597:../../src/radio/cc2420/source/basic_rf.c **** //  RETURN VALUE:
 598:../../src/radio/cc2420/source/basic_rf.c **** //		uint8_t
 599:../../src/radio/cc2420/source/basic_rf.c **** //			Successful transmission (acknowledgment received)
 600:../../src/radio/cc2420/source/basic_rf.c **** //-------------------------------------------------------------------------------------------------
 601:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_tx_packet(RF_TX_INFO *pRTI) {
 602:../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
 603:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t packetLength, length;
 604:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t success;
 605:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t spiStatusByte;
 606:../../src/radio/cc2420/source/basic_rf.c ****    uint8_t checksum,i;
 607:../../src/radio/cc2420/source/basic_rf.c **** 	
 608:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 609:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 610:../../src/radio/cc2420/source/basic_rf.c **** #endif
 611:../../src/radio/cc2420/source/basic_rf.c **** 
 612:../../src/radio/cc2420/source/basic_rf.c **** if(security_enable)
 613:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_STXENC);
 614:../../src/radio/cc2420/source/basic_rf.c **** 
 615:../../src/radio/cc2420/source/basic_rf.c ****     checksum=0;
 616:../../src/radio/cc2420/source/basic_rf.c ****     for(i=0; i<pRTI->length; i++ )
 617:../../src/radio/cc2420/source/basic_rf.c ****     {
 618:../../src/radio/cc2420/source/basic_rf.c **** 	// lets do our own payload checksum because we don't trust the CRC
 619:../../src/radio/cc2420/source/basic_rf.c **** 	checksum+=pRTI->pPayload[i];
 620:../../src/radio/cc2420/source/basic_rf.c ****     }
 621:../../src/radio/cc2420/source/basic_rf.c ****     // Write the packet to the TX FIFO (the FCS is appended automatically when AUTOCRC is enabled)
 622:../../src/radio/cc2420/source/basic_rf.c **** 
 623:../../src/radio/cc2420/source/basic_rf.c ****     // These are only the MAC AGNOSTIC parameters...
 624:../../src/radio/cc2420/source/basic_rf.c ****     // Slots for example are at a slighly higher later since they assume TDMA
 625:../../src/radio/cc2420/source/basic_rf.c ****     packetLength = pRTI->length + RF_PACKET_OVERHEAD_SIZE + CHECKSUM_OVERHEAD;
 626:../../src/radio/cc2420/source/basic_rf.c ****     if(security_enable) packetLength+=4;  // for CTR counter
 627:../../src/radio/cc2420/source/basic_rf.c **** 
 628:../../src/radio/cc2420/source/basic_rf.c **** 
 629:../../src/radio/cc2420/source/basic_rf.c ****    	// XXX 2 below are hacks...
 630:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 631:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 632:../../src/radio/cc2420/source/basic_rf.c ****     // Wait until the transceiver is idle
 633:../../src/radio/cc2420/source/basic_rf.c ****     while (FIFOP_IS_1 || SFD_IS_1);
 634:../../src/radio/cc2420/source/basic_rf.c ****     // Turn off global interrupts to avoid interference on the SPI interface
 635:../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();
 636:../../src/radio/cc2420/source/basic_rf.c **** 	// Flush the TX FIFO just in case...
 637:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHTX);
 638:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE(CC2420_SFLUSHTX);
 639:../../src/radio/cc2420/source/basic_rf.c **** 
 640:../../src/radio/cc2420/source/basic_rf.c **** /*
 641:../../src/radio/cc2420/source/basic_rf.c ****     // Turn on RX if necessary
 642:../../src/radio/cc2420/source/basic_rf.c ****     if (!rfSettings.receiveOn) {
 643:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_SRXON);
 644:../../src/radio/cc2420/source/basic_rf.c **** 		}
 645:../../src/radio/cc2420/source/basic_rf.c **** 
 646:../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the RSSI value to become valid
 647:../../src/radio/cc2420/source/basic_rf.c ****     do {
 648:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_UPD_STATUS(spiStatusByte);
 649:../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_RSSI_VALID)));
 650:../../src/radio/cc2420/source/basic_rf.c **** 
 651:../../src/radio/cc2420/source/basic_rf.c **** 	// TX begins after the CCA check has passed
 652:../../src/radio/cc2420/source/basic_rf.c ****     do {
 653:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_STROBE(CC2420_STXONCCA);
 654:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_UPD_STATUS(spiStatusByte);
 655:../../src/radio/cc2420/source/basic_rf.c **** 		halWait(100);
 656:../../src/radio/cc2420/source/basic_rf.c ****     } while (!(spiStatusByte & BM(CC2420_TX_ACTIVE)));
 657:../../src/radio/cc2420/source/basic_rf.c **** */
 658:../../src/radio/cc2420/source/basic_rf.c **** 
 659:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*)&packetLength, 1);               // Packet length
 660:../../src/radio/cc2420/source/basic_rf.c ****     frameControlField = RF_FCF_NOACK;   // default
 661:../../src/radio/cc2420/source/basic_rf.c ****     if(auto_ack_enable) frameControlField |= RF_ACK_BM;
 662:../../src/radio/cc2420/source/basic_rf.c ****     if(security_enable) frameControlField |= RF_SEC_BM;
 663:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &frameControlField, 2);         // Frame control field
 664:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.txSeqNumber, 1);    // Sequence number
 665:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.panId, 2);          // Dest. PAN ID
 666:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &pRTI->destAddr, 2);            // Dest. address
 667:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &rfSettings.myAddr, 2);         // Source address
 668:../../src/radio/cc2420/source/basic_rf.c ****     if(security_enable)
 669:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_WRITE_FIFO((uint8_t*) &tx_ctr, 4);         // CTR counter 
 670:../../src/radio/cc2420/source/basic_rf.c ****    
 671:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) pRTI->pPayload, pRTI->length);  // Payload
 672:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_WRITE_FIFO((uint8_t*) &checksum, 1);         // Checksum
 673:../../src/radio/cc2420/source/basic_rf.c **** 
 674:../../src/radio/cc2420/source/basic_rf.c **** if (pRTI->cca == TRUE)
 675:../../src/radio/cc2420/source/basic_rf.c **** {
 676:../../src/radio/cc2420/source/basic_rf.c ****     uint8_t cnt;
 677:../../src/radio/cc2420/source/basic_rf.c ****      if (!rfSettings.receiveOn)
 678:../../src/radio/cc2420/source/basic_rf.c **** 	{
 679:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_SRXON);
 680:../../src/radio/cc2420/source/basic_rf.c **** 	}
 681:../../src/radio/cc2420/source/basic_rf.c ****       
 682:../../src/radio/cc2420/source/basic_rf.c ****       // Wait for the RSSI value to become valid
 683:../../src/radio/cc2420/source/basic_rf.c ****       do
 684:../../src/radio/cc2420/source/basic_rf.c **** 	{
 685:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 686:../../src/radio/cc2420/source/basic_rf.c **** 	}
 687:../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_RSSI_VALID)));      
 688:../../src/radio/cc2420/source/basic_rf.c ****       // TX begins after the CCA check has passed
 689:../../src/radio/cc2420/source/basic_rf.c ****       cnt = 0;
 690:../../src/radio/cc2420/source/basic_rf.c ****       do
 691:../../src/radio/cc2420/source/basic_rf.c **** 	{
 692:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_STROBE (CC2420_STXONCCA);
 693:../../src/radio/cc2420/source/basic_rf.c **** 	  FASTSPI_UPD_STATUS (spiStatusByte);
 694:../../src/radio/cc2420/source/basic_rf.c **** 	  cnt++;
 695:../../src/radio/cc2420/source/basic_rf.c **** 	  if (cnt > 100)
 696:../../src/radio/cc2420/source/basic_rf.c **** 	    {
 697:../../src/radio/cc2420/source/basic_rf.c **** 	      ENABLE_GLOBAL_INT ();
 698:../../src/radio/cc2420/source/basic_rf.c **** 	      nrk_sem_post(radio_sem);
 699:../../src/radio/cc2420/source/basic_rf.c **** 	      return FALSE;
 700:../../src/radio/cc2420/source/basic_rf.c **** 	    }
 701:../../src/radio/cc2420/source/basic_rf.c **** 	  halWait (100);
 702:../../src/radio/cc2420/source/basic_rf.c **** 	}
 703:../../src/radio/cc2420/source/basic_rf.c ****       while (!(spiStatusByte & BM (CC2420_TX_ACTIVE)));
 704:../../src/radio/cc2420/source/basic_rf.c ****     }
 705:../../src/radio/cc2420/source/basic_rf.c ****   else
 706:../../src/radio/cc2420/source/basic_rf.c ****     FASTSPI_STROBE (CC2420_STXON); 
 707:../../src/radio/cc2420/source/basic_rf.c **** 
 708:../../src/radio/cc2420/source/basic_rf.c **** 
 709:../../src/radio/cc2420/source/basic_rf.c ****   ENABLE_GLOBAL_INT();
 710:../../src/radio/cc2420/source/basic_rf.c **** 	// Wait for the transmission to begin before exiting (makes sure that this function cannot be call
 711:../../src/radio/cc2420/source/basic_rf.c **** 	// a second time, and thereby cancelling the first transmission (observe the FIFOP + SFD test abov
 712:../../src/radio/cc2420/source/basic_rf.c ****   while (!SFD_IS_1);
 713:../../src/radio/cc2420/source/basic_rf.c ****   success = TRUE;
 714:../../src/radio/cc2420/source/basic_rf.c **** 
 715:../../src/radio/cc2420/source/basic_rf.c **** 	// Turn interrupts back on
 716:../../src/radio/cc2420/source/basic_rf.c **** //	ENABLE_GLOBAL_INT();
 717:../../src/radio/cc2420/source/basic_rf.c **** 
 718:../../src/radio/cc2420/source/basic_rf.c ****     while (SFD_IS_1); // wait for packet to finish
 719:../../src/radio/cc2420/source/basic_rf.c **** 
 720:../../src/radio/cc2420/source/basic_rf.c ****     // Wait for the acknowledge to be received, if any
 721:../../src/radio/cc2420/source/basic_rf.c ****     if (auto_ack_enable) {
 722:../../src/radio/cc2420/source/basic_rf.c **** //		rfSettings.ackReceived = FALSE;
 723:../../src/radio/cc2420/source/basic_rf.c **** 
 724:../../src/radio/cc2420/source/basic_rf.c **** 		// Wait for the SFD to go low again
 725:../../src/radio/cc2420/source/basic_rf.c **** 		//	while (SFD_IS_1);
 726:../../src/radio/cc2420/source/basic_rf.c ****         // We'll enter RX automatically, so just wait until we can be sure that the 
 727:../../src/radio/cc2420/source/basic_rf.c **** 	// ack reception should have finished
 728:../../src/radio/cc2420/source/basic_rf.c ****         // The timeout consists of a 12-symbol turnaround time, the ack packet duration, 
 729:../../src/radio/cc2420/source/basic_rf.c **** 	// and a small margin
 730:../../src/radio/cc2420/source/basic_rf.c ****         halWait((12 * RF_SYMBOL_DURATION) + (RF_ACK_DURATION) + (2 * RF_SYMBOL_DURATION) + 100);
 731:../../src/radio/cc2420/source/basic_rf.c **** 
 732:../../src/radio/cc2420/source/basic_rf.c **** 	if(FIFO_IS_1)
 733:../../src/radio/cc2420/source/basic_rf.c **** 	{
 734:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_BYTE(length);
 735:../../src/radio/cc2420/source/basic_rf.c **** 	length &= RF_LENGTH_MASK; // Ignore MSB
 736:../../src/radio/cc2420/source/basic_rf.c **** 	    success = TRUE;
 737:../../src/radio/cc2420/source/basic_rf.c **** 
 738:../../src/radio/cc2420/source/basic_rf.c **** 	}else
 739:../../src/radio/cc2420/source/basic_rf.c **** 	{
 740:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 741:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 742:../../src/radio/cc2420/source/basic_rf.c **** 	    success = FALSE;
 743:../../src/radio/cc2420/source/basic_rf.c **** 	}
 744:../../src/radio/cc2420/source/basic_rf.c **** 
 745:../../src/radio/cc2420/source/basic_rf.c ****     }
 746:../../src/radio/cc2420/source/basic_rf.c **** 
 747:../../src/radio/cc2420/source/basic_rf.c ****     
 748:../../src/radio/cc2420/source/basic_rf.c **** 	// Turn off the receiver if it should not continue to be enabled
 749:../../src/radio/cc2420/source/basic_rf.c ****     
 750:../../src/radio/cc2420/source/basic_rf.c ****     DISABLE_GLOBAL_INT();	
 751:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 752:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHRX);
 753:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHTX);
 754:../../src/radio/cc2420/source/basic_rf.c **** 	//FASTSPI_STROBE(CC2420_SFLUSHTX);
 755:../../src/radio/cc2420/source/basic_rf.c ****     
 756:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_STROBE(CC2420_SRFOFF);  // shut off radio
 757:../../src/radio/cc2420/source/basic_rf.c ****     ENABLE_GLOBAL_INT();
 758:../../src/radio/cc2420/source/basic_rf.c **** 
 759:../../src/radio/cc2420/source/basic_rf.c ****     // agr XXX hack to test time issue
 760:../../src/radio/cc2420/source/basic_rf.c ****     //rf_rx_on(); 
 761:../../src/radio/cc2420/source/basic_rf.c **** 
 762:../../src/radio/cc2420/source/basic_rf.c ****     // Increment the sequence number, and return the result
 763:../../src/radio/cc2420/source/basic_rf.c ****     rfSettings.txSeqNumber++;
 764:../../src/radio/cc2420/source/basic_rf.c **** //	while (SFD_IS_1);
 765:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 766:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 767:../../src/radio/cc2420/source/basic_rf.c **** #endif
 768:../../src/radio/cc2420/source/basic_rf.c ****     return success;
 769:../../src/radio/cc2420/source/basic_rf.c **** 
 770:../../src/radio/cc2420/source/basic_rf.c **** }
 771:../../src/radio/cc2420/source/basic_rf.c **** 
 772:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_busy()
 773:../../src/radio/cc2420/source/basic_rf.c **** {
 602               	.LM39:
 603               	.LFBB10:
 604               	/* prologue: frame size=0 */
 605               	/* prologue end (size=0) */
 774:../../src/radio/cc2420/source/basic_rf.c **** return SFD_IS_1;
 607               	.LM40:
 608 01f6 89B1      		in r24,41-0x20
 609 01f8 9927      		clr r25
 610 01fa 66E0      		ldi r22,6
 611 01fc 9695      	1:	lsr r25
 612 01fe 8795      		ror r24
 613 0200 6A95      		dec r22
 614 0202 01F4      		brne 1b
 775:../../src/radio/cc2420/source/basic_rf.c **** }
 616               	.LM41:
 617 0204 8170      		andi r24,lo8(1)
 618 0206 9070      		andi r25,hi8(1)
 619               	/* epilogue: frame size=0 */
 620 0208 0895      		ret
 621               	/* epilogue end (size=1) */
 622               	/* function rf_busy size 10 (9) */
 624               	.Lscope10:
 626               		.stabd	78,0,0
 628               	.global	rf_rx_check_fifop
 630               	rf_rx_check_fifop:
 631               		.stabd	46,0,0
 776:../../src/radio/cc2420/source/basic_rf.c **** 
 777:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_rx_check_fifop()
 778:../../src/radio/cc2420/source/basic_rf.c **** {
 633               	.LM42:
 634               	.LFBB11:
 635               	/* prologue: frame size=0 */
 636               	/* prologue end (size=0) */
 779:../../src/radio/cc2420/source/basic_rf.c **** return FIFOP_IS_1;
 638               	.LM43:
 639 020a 8CB1      		in r24,44-0x20
 640 020c 9927      		clr r25
 641 020e 87FD      		sbrc r24,7
 642 0210 9095      		com r25
 780:../../src/radio/cc2420/source/basic_rf.c **** }
 644               	.LM44:
 645 0212 8827      		clr r24
 646 0214 990F      		lsl r25
 647 0216 881F      		rol r24
 648 0218 9927      		clr r25
 649               	/* epilogue: frame size=0 */
 650 021a 0895      		ret
 651               	/* epilogue end (size=1) */
 652               	/* function rf_rx_check_fifop size 9 (8) */
 654               	.Lscope11:
 656               		.stabd	78,0,0
 658               	.global	rf_rx_check_sfd
 660               	rf_rx_check_sfd:
 661               		.stabd	46,0,0
 781:../../src/radio/cc2420/source/basic_rf.c **** 
 782:../../src/radio/cc2420/source/basic_rf.c **** 
 783:../../src/radio/cc2420/source/basic_rf.c **** uint8_t rf_rx_check_sfd()
 784:../../src/radio/cc2420/source/basic_rf.c **** {
 663               	.LM45:
 664               	.LFBB12:
 665               	/* prologue: frame size=0 */
 666               	/* prologue end (size=0) */
 785:../../src/radio/cc2420/source/basic_rf.c **** return SFD_IS_1;
 668               	.LM46:
 669 021c 89B1      		in r24,41-0x20
 670 021e 9927      		clr r25
 671 0220 E6E0      		ldi r30,6
 672 0222 9695      	1:	lsr r25
 673 0224 8795      		ror r24
 674 0226 EA95      		dec r30
 675 0228 01F4      		brne 1b
 786:../../src/radio/cc2420/source/basic_rf.c **** }
 677               	.LM47:
 678 022a 8170      		andi r24,lo8(1)
 679 022c 9070      		andi r25,hi8(1)
 680               	/* epilogue: frame size=0 */
 681 022e 0895      		ret
 682               	/* epilogue end (size=1) */
 683               	/* function rf_rx_check_sfd size 10 (9) */
 685               	.Lscope12:
 687               		.stabd	78,0,0
 689               	.global	rf_rx_packet
 691               	rf_rx_packet:
 692               		.stabd	46,0,0
 787:../../src/radio/cc2420/source/basic_rf.c **** uint16_t tmp_blah;
 788:../../src/radio/cc2420/source/basic_rf.c **** 
 789:../../src/radio/cc2420/source/basic_rf.c **** int8_t rf_polling_rx_packet()
 790:../../src/radio/cc2420/source/basic_rf.c **** {
 791:../../src/radio/cc2420/source/basic_rf.c **** uint8_t tmp;
 792:../../src/radio/cc2420/source/basic_rf.c **** 	
 793:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 794:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 795:../../src/radio/cc2420/source/basic_rf.c **** #endif
 796:../../src/radio/cc2420/source/basic_rf.c **** 
 797:../../src/radio/cc2420/source/basic_rf.c ****     if(FIFOP_IS_1 )
 798:../../src/radio/cc2420/source/basic_rf.c ****     {
 799:../../src/radio/cc2420/source/basic_rf.c **** 	uint16_t frameControlField;
 800:../../src/radio/cc2420/source/basic_rf.c **** 	int8_t length;
 801:../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t pFooter[2];
 802:../../src/radio/cc2420/source/basic_rf.c **** 	uint8_t checksum,rx_checksum,i;
 803:../../src/radio/cc2420/source/basic_rf.c **** 			
 804:../../src/radio/cc2420/source/basic_rf.c **** 	last_pkt_encrypted=0;
 805:../../src/radio/cc2420/source/basic_rf.c **** 
 806:../../src/radio/cc2420/source/basic_rf.c **** //	FASTSPI_STROBE(CC2420_SRXON);
 807:../../src/radio/cc2420/source/basic_rf.c **** //	FASTSPI_STROBE(CC2420_SFLUSHRX);
 808:../../src/radio/cc2420/source/basic_rf.c ****     
 809:../../src/radio/cc2420/source/basic_rf.c **** //	while(!SFD_IS_1);
 810:../../src/radio/cc2420/source/basic_rf.c **** //  XXX Need to make sure SFD has gone down to be sure packet finished!
 811:../../src/radio/cc2420/source/basic_rf.c **** //	while(SFD_IS_1);
 812:../../src/radio/cc2420/source/basic_rf.c ****     // Clean up and exit in case of FIFO overflow, which is indicated by FIFOP = 1 and FIFO = 0
 813:../../src/radio/cc2420/source/basic_rf.c **** 	if((FIFOP_IS_1) && (!(FIFO_IS_1))) {	   
 814:../../src/radio/cc2420/source/basic_rf.c **** 	    // always read 1 byte before flush (data sheet pg 62)
 815:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_READ_FIFO_BYTE(tmp);  
 816:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 817:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 818:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 819:../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 820:../../src/radio/cc2420/source/basic_rf.c **** #endif
 821:../../src/radio/cc2420/source/basic_rf.c **** 	    return -1;
 822:../../src/radio/cc2420/source/basic_rf.c **** 	}
 823:../../src/radio/cc2420/source/basic_rf.c **** 
 824:../../src/radio/cc2420/source/basic_rf.c **** 	// Payload length
 825:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_READ_FIFO_BYTE(length);
 826:../../src/radio/cc2420/source/basic_rf.c **** 	length &= RF_LENGTH_MASK; // Ignore MSB
 827:../../src/radio/cc2420/source/basic_rf.c ****     // Ignore the packet if the length is too short
 828:../../src/radio/cc2420/source/basic_rf.c ****     if(length==0){  
 829:../../src/radio/cc2420/source/basic_rf.c **** 	    // always read 1 byte before flush (data sheet pg 62)
 830:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_READ_FIFO_BYTE(tmp);  
 831:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 832:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 833:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 834:../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 835:../../src/radio/cc2420/source/basic_rf.c **** #endif
 836:../../src/radio/cc2420/source/basic_rf.c **** 	return -2;
 837:../../src/radio/cc2420/source/basic_rf.c **** 	}
 838:../../src/radio/cc2420/source/basic_rf.c ****     if (length < RF_ACK_PACKET_SIZE || (length-RF_PACKET_OVERHEAD_SIZE)> rfSettings.pRxInfo->max_le
 839:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_READ_FIFO_GARBAGE(length);
 840:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_READ_FIFO_BYTE(tmp);  
 841:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 842:../../src/radio/cc2420/source/basic_rf.c **** 	    FASTSPI_STROBE(CC2420_SFLUSHRX);
 843:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 844:../../src/radio/cc2420/source/basic_rf.c **** 	    nrk_sem_post(radio_sem);
 845:../../src/radio/cc2420/source/basic_rf.c **** #endif
 846:../../src/radio/cc2420/source/basic_rf.c **** 	return -3;
 847:../../src/radio/cc2420/source/basic_rf.c **** 	//printf_u( "Bad length: %d %d\n",length, rfSettings.pRxInfo->max_length );
 848:../../src/radio/cc2420/source/basic_rf.c ****     // Otherwise, if the length is valid, then proceed with the rest of the packet
 849:../../src/radio/cc2420/source/basic_rf.c ****     } else {
 850:../../src/radio/cc2420/source/basic_rf.c ****         // Register the payload length
 851:../../src/radio/cc2420/source/basic_rf.c ****         rfSettings.pRxInfo->length = length - RF_PACKET_OVERHEAD_SIZE - CHECKSUM_OVERHEAD;
 852:../../src/radio/cc2420/source/basic_rf.c ****         // Read the frame control field and the data sequence number
 853:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) &frameControlField, 2);
 854:../../src/radio/cc2420/source/basic_rf.c ****         rfSettings.pRxInfo->ackRequest = !!(frameControlField & RF_FCF_ACK_BM);
 855:../../src/radio/cc2420/source/basic_rf.c ****     	FASTSPI_READ_FIFO_BYTE(rfSettings.pRxInfo->seqNumber);
 856:../../src/radio/cc2420/source/basic_rf.c **** 
 857:../../src/radio/cc2420/source/basic_rf.c **** 		// Is this an acknowledgment packet?
 858:../../src/radio/cc2420/source/basic_rf.c **** /*
 859:../../src/radio/cc2420/source/basic_rf.c ****     	if ((length == RF_ACK_PACKET_SIZE) && (frameControlField == RF_ACK_FCF) && (rfSettings.pRxInfo
 860:../../src/radio/cc2420/source/basic_rf.c **** 
 861:../../src/radio/cc2420/source/basic_rf.c ****  	       	// Read the footer and check for CRC OK
 862:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) pFooter, 2);
 863:../../src/radio/cc2420/source/basic_rf.c **** 
 864:../../src/radio/cc2420/source/basic_rf.c **** 			// Indicate the successful ack reception (this flag is polled by the transmission routine)
 865:../../src/radio/cc2420/source/basic_rf.c **** 			if (pFooter[1] & RF_CRC_OK_BM) rfSettings.ackReceived = TRUE;
 866:../../src/radio/cc2420/source/basic_rf.c ****  
 867:../../src/radio/cc2420/source/basic_rf.c **** 		// Too small to be a valid packet?
 868:../../src/radio/cc2420/source/basic_rf.c **** 		} else if (length < RF_PACKET_OVERHEAD_SIZE) {
 869:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_GARBAGE(length - 3);
 870:../../src/radio/cc2420/source/basic_rf.c **** 
 871:../../src/radio/cc2420/source/basic_rf.c **** 		// Receive the rest of the packet
 872:../../src/radio/cc2420/source/basic_rf.c **** 		} else {
 873:../../src/radio/cc2420/source/basic_rf.c **** */
 874:../../src/radio/cc2420/source/basic_rf.c **** 			// Skip the destination PAN and address (that's taken care of by harware address recognition!)
 875:../../src/radio/cc2420/source/basic_rf.c **** 		FASTSPI_READ_FIFO_GARBAGE(4);
 876:../../src/radio/cc2420/source/basic_rf.c **** 
 877:../../src/radio/cc2420/source/basic_rf.c **** 			// Read the source address
 878:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) &rfSettings.pRxInfo->srcAddr, 2);
 879:../../src/radio/cc2420/source/basic_rf.c **** 
 880:../../src/radio/cc2420/source/basic_rf.c **** 		        if(frameControlField & RF_SEC_BM)
 881:../../src/radio/cc2420/source/basic_rf.c **** 			{
 882:../../src/radio/cc2420/source/basic_rf.c **** 				uint8_t n;
 883:../../src/radio/cc2420/source/basic_rf.c **** 				// READ rx_ctr and set it
 884:../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) &rx_ctr, 4);
 885:../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_WRITE_RAM(&rx_ctr[0],(CC2420RAM_RXNONCE+9),2,n); 
 886:../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_WRITE_RAM(&rx_ctr[2],(CC2420RAM_RXNONCE+11),2,n); 
 887:../../src/radio/cc2420/source/basic_rf.c **** 				FASTSPI_STROBE(CC2420_SRXDEC);  // if packet is encrypted then decrypt 
 888:../../src/radio/cc2420/source/basic_rf.c **** 				last_pkt_encrypted=1;
 889:../../src/radio/cc2420/source/basic_rf.c ****         			rfSettings.pRxInfo->length -= 4;
 890:../../src/radio/cc2420/source/basic_rf.c **** 			}
 891:../../src/radio/cc2420/source/basic_rf.c **** 	
 892:../../src/radio/cc2420/source/basic_rf.c **** 			// Read the packet payload
 893:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT(rfSettings.pRxInfo->pPayload, rfSettings.pRxInfo->length);
 894:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT(&rx_checksum, 1 );
 895:../../src/radio/cc2420/source/basic_rf.c **** 
 896:../../src/radio/cc2420/source/basic_rf.c **** 			// Read the footer to get the RSSI value
 897:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_READ_FIFO_NO_WAIT((uint8_t*) pFooter, 2);
 898:../../src/radio/cc2420/source/basic_rf.c **** 			rfSettings.pRxInfo->rssi = pFooter[0];
 899:../../src/radio/cc2420/source/basic_rf.c **** 			checksum=0;	
 900:../../src/radio/cc2420/source/basic_rf.c **** 			for(i=0; i<rfSettings.pRxInfo->length; i++ )
 901:../../src/radio/cc2420/source/basic_rf.c **** 			{
 902:../../src/radio/cc2420/source/basic_rf.c **** 				checksum+=rfSettings.pRxInfo->pPayload[i];
 903:../../src/radio/cc2420/source/basic_rf.c **** 				//printf( "%d ", rfSettings.pRxInfo->pPayload[i]);
 904:../../src/radio/cc2420/source/basic_rf.c **** 			}
 905:../../src/radio/cc2420/source/basic_rf.c **** 
 906:../../src/radio/cc2420/source/basic_rf.c **** 			if(checksum!=rx_checksum) {
 907:../../src/radio/cc2420/source/basic_rf.c **** 				//printf( "Checksum failed %d %d\r",rx_checksum, checksum );
 908:../../src/radio/cc2420/source/basic_rf.c **** 	    			// always read 1 byte before flush (data sheet pg 62)
 909:../../src/radio/cc2420/source/basic_rf.c **** 	   			FASTSPI_READ_FIFO_BYTE(tmp);  
 910:../../src/radio/cc2420/source/basic_rf.c **** 	    			FASTSPI_STROBE(CC2420_SFLUSHRX);
 911:../../src/radio/cc2420/source/basic_rf.c **** 	    			FASTSPI_STROBE(CC2420_SFLUSHRX);
 912:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 913:../../src/radio/cc2420/source/basic_rf.c **** 	    			nrk_sem_post(radio_sem);
 914:../../src/radio/cc2420/source/basic_rf.c **** #endif
 915:../../src/radio/cc2420/source/basic_rf.c **** 				return -4;
 916:../../src/radio/cc2420/source/basic_rf.c **** 			}	
 917:../../src/radio/cc2420/source/basic_rf.c **** 			if (pFooter[1] & RF_CRC_OK_BM) {
 918:../../src/radio/cc2420/source/basic_rf.c **** 				//rfSettings.pRxInfo = rf_rx_callback(rfSettings.pRxInfo);
 919:../../src/radio/cc2420/source/basic_rf.c **** 				rx_ready++;
 920:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 921:../../src/radio/cc2420/source/basic_rf.c **** 	    			nrk_sem_post(radio_sem);
 922:../../src/radio/cc2420/source/basic_rf.c **** #endif
 923:../../src/radio/cc2420/source/basic_rf.c **** 				return 1;
 924:../../src/radio/cc2420/source/basic_rf.c **** 			} else
 925:../../src/radio/cc2420/source/basic_rf.c **** 	    		{
 926:../../src/radio/cc2420/source/basic_rf.c **** 	    		// always read 1 byte before flush (data sheet pg 62)
 927:../../src/radio/cc2420/source/basic_rf.c **** 	   		FASTSPI_READ_FIFO_BYTE(tmp);  
 928:../../src/radio/cc2420/source/basic_rf.c **** 			FASTSPI_STROBE(CC2420_SFLUSHRX);
 929:../../src/radio/cc2420/source/basic_rf.c **** 	    		FASTSPI_STROBE(CC2420_SFLUSHRX);
 930:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 931:../../src/radio/cc2420/source/basic_rf.c **** 	    		nrk_sem_post(radio_sem);
 932:../../src/radio/cc2420/source/basic_rf.c **** #endif
 933:../../src/radio/cc2420/source/basic_rf.c **** 			return -5;
 934:../../src/radio/cc2420/source/basic_rf.c **** 			}
 935:../../src/radio/cc2420/source/basic_rf.c **** //		}
 936:../../src/radio/cc2420/source/basic_rf.c ****     
 937:../../src/radio/cc2420/source/basic_rf.c **** 	}
 938:../../src/radio/cc2420/source/basic_rf.c **** 
 939:../../src/radio/cc2420/source/basic_rf.c **** 
 940:../../src/radio/cc2420/source/basic_rf.c ****     }
 941:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 942:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 943:../../src/radio/cc2420/source/basic_rf.c **** #endif
 944:../../src/radio/cc2420/source/basic_rf.c **** return 0;
 945:../../src/radio/cc2420/source/basic_rf.c **** }
 946:../../src/radio/cc2420/source/basic_rf.c **** 
 947:../../src/radio/cc2420/source/basic_rf.c **** int8_t rf_rx_packet()
 948:../../src/radio/cc2420/source/basic_rf.c **** {
 694               	.LM48:
 695               	.LFBB13:
 696               	/* prologue: frame size=0 */
 697               	/* prologue end (size=0) */
 949:../../src/radio/cc2420/source/basic_rf.c **** int8_t tmp;
 950:../../src/radio/cc2420/source/basic_rf.c **** if(rx_ready>0) { tmp=rx_ready; rx_ready=0; return tmp;}
 699               	.LM49:
 700 0230 8091 0000 		lds r24,rx_ready
 701 0234 8823      		tst r24
 702 0236 01F4      		brne .L143
 704               	.LM50:
 705 0238 80E0      		ldi r24,lo8(0)
 706 023a 90E0      		ldi r25,hi8(0)
 707 023c 0895      		ret
 708               	.L143:
 709 023e 8091 0000 		lds r24,rx_ready
 710 0242 1092 0000 		sts rx_ready,__zero_reg__
 711 0246 9927      		clr r25
 712 0248 87FD      		sbrc r24,7
 713 024a 9095      		com r25
 951:../../src/radio/cc2420/source/basic_rf.c **** return 0;
 952:../../src/radio/cc2420/source/basic_rf.c **** }
 715               	.LM51:
 716 024c 0895      		ret
 717               	/* epilogue: frame size=0 */
 718               	/* epilogue: noreturn */
 719               	/* epilogue end (size=0) */
 720               	/* function rf_rx_packet size 15 (15) */
 722               	.Lscope13:
 724               		.stabd	78,0,0
 726               	.global	rf_flush_rx_fifo
 728               	rf_flush_rx_fifo:
 729               		.stabd	46,0,0
 953:../../src/radio/cc2420/source/basic_rf.c **** 
 954:../../src/radio/cc2420/source/basic_rf.c **** 
 955:../../src/radio/cc2420/source/basic_rf.c **** inline void rf_flush_rx_fifo()
 956:../../src/radio/cc2420/source/basic_rf.c **** {
 731               	.LM52:
 732               	.LFBB14:
 733               	/* prologue: frame size=0 */
 734               	/* prologue end (size=0) */
 957:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SFLUSHRX);
 736               	.LM53:
 737 024e 4098      		cbi 40-0x20,0
 738 0250 88E0      		ldi r24,lo8(8)
 739 0252 8EBD      		out 78-0x20,r24
 740               	.L148:
 742               	.LM54:
 743 0254 0DB4      		in __tmp_reg__,77-0x20
 744 0256 07FE      		sbrs __tmp_reg__,7
 745 0258 00C0      		rjmp .L148
 746 025a 409A      		sbi 40-0x20,0
 958:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SFLUSHRX);
 748               	.LM55:
 749 025c 4098      		cbi 40-0x20,0
 750 025e 88E0      		ldi r24,lo8(8)
 751 0260 8EBD      		out 78-0x20,r24
 752               	.L150:
 753 0262 0DB4      		in __tmp_reg__,77-0x20
 754 0264 07FE      		sbrs __tmp_reg__,7
 755 0266 00C0      		rjmp .L150
 756 0268 409A      		sbi 40-0x20,0
 757               	/* epilogue: frame size=0 */
 758 026a 0895      		ret
 759               	/* epilogue end (size=1) */
 760               	/* function rf_flush_rx_fifo size 15 (14) */
 762               	.Lscope14:
 764               		.stabd	78,0,0
 766               	.global	rf_carrier_off
 768               	rf_carrier_off:
 769               		.stabd	46,0,0
 959:../../src/radio/cc2420/source/basic_rf.c **** }
 960:../../src/radio/cc2420/source/basic_rf.c **** 
 961:../../src/radio/cc2420/source/basic_rf.c **** void rf_set_cca_thresh(int8_t t)
 962:../../src/radio/cc2420/source/basic_rf.c **** {
 963:../../src/radio/cc2420/source/basic_rf.c **** // default is -32
 964:../../src/radio/cc2420/source/basic_rf.c **** // Higher number is less sensitive
 965:../../src/radio/cc2420/source/basic_rf.c **** uint16_t val;
 966:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 967:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 968:../../src/radio/cc2420/source/basic_rf.c **** #endif
 969:../../src/radio/cc2420/source/basic_rf.c **** 
 970:../../src/radio/cc2420/source/basic_rf.c **** val=(t<<8) | 0x80;
 971:../../src/radio/cc2420/source/basic_rf.c **** FASTSPI_SETREG(CC2420_RSSI, val); 
 972:../../src/radio/cc2420/source/basic_rf.c **** 
 973:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 974:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 975:../../src/radio/cc2420/source/basic_rf.c **** #endif
 976:../../src/radio/cc2420/source/basic_rf.c **** }
 977:../../src/radio/cc2420/source/basic_rf.c **** 
 978:../../src/radio/cc2420/source/basic_rf.c **** void rf_test_mode()
 979:../../src/radio/cc2420/source/basic_rf.c **** {
 980:../../src/radio/cc2420/source/basic_rf.c **** 
 981:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 982:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 983:../../src/radio/cc2420/source/basic_rf.c **** #endif
 984:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SRFOFF); //stop radio
 985:../../src/radio/cc2420/source/basic_rf.c **** 	// NOTE ON SETTING CC2420_MDMCTRL1
 986:../../src/radio/cc2420/source/basic_rf.c **** 	// 
 987:../../src/radio/cc2420/source/basic_rf.c **** 	// RF studio" uses TX_MODE=3 (CC2420_MDMCTRL1=0x050C)
 988:../../src/radio/cc2420/source/basic_rf.c **** 	// to send an unmodulated carrier; data sheet says TX_MODE 
 989:../../src/radio/cc2420/source/basic_rf.c **** 	// can be 2 or 3. So it should not matter...
 990:../../src/radio/cc2420/source/basic_rf.c **** 	// HOWEVER, using (TX_MODE=3) sometimes causes problems when 
 991:../../src/radio/cc2420/source/basic_rf.c **** 	// going back to "data" mode!
 992:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0508); // MDMCTRL1 with TX_MODE=2
 993:../../src/radio/cc2420/source/basic_rf.c **** 	FASTSPI_SETREG(CC2420_DACTST, 0x1800); // send unmodulated carrier
 994:../../src/radio/cc2420/source/basic_rf.c **** 	rf_flush_rx_fifo();
 995:../../src/radio/cc2420/source/basic_rf.c **** 
 996:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
 997:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 998:../../src/radio/cc2420/source/basic_rf.c **** #endif
 999:../../src/radio/cc2420/source/basic_rf.c **** }
1000:../../src/radio/cc2420/source/basic_rf.c **** 
1001:../../src/radio/cc2420/source/basic_rf.c **** 
1002:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1003:../../src/radio/cc2420/source/basic_rf.c ****  * set the radio into "normal" mode (buffered TXFIFO) and go into (data) receive */
1004:../../src/radio/cc2420/source/basic_rf.c **** void rf_data_mode() {
1005:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1006:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
1007:../../src/radio/cc2420/source/basic_rf.c **** #endif
1008:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SRFOFF); //stop radio
1009:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_SETREG(CC2420_MDMCTRL1, 0x0500); // default MDMCTRL1 value
1010:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_SETREG(CC2420_DACTST, 0); // default value
1011:../../src/radio/cc2420/source/basic_rf.c ****         rf_flush_rx_fifo();
1012:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1013:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
1014:../../src/radio/cc2420/source/basic_rf.c **** #endif
1015:../../src/radio/cc2420/source/basic_rf.c **** }
1016:../../src/radio/cc2420/source/basic_rf.c **** 
1017:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1018:../../src/radio/cc2420/source/basic_rf.c ****  * start sending a carrier pulse
1019:../../src/radio/cc2420/source/basic_rf.c ****  * assumes wdrf_radio_test_mode() was called before doing this
1020:../../src/radio/cc2420/source/basic_rf.c ****  */
1021:../../src/radio/cc2420/source/basic_rf.c **** void rf_carrier_on()
1022:../../src/radio/cc2420/source/basic_rf.c **** {
1023:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1024:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
1025:../../src/radio/cc2420/source/basic_rf.c **** #endif
1026:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_STXON); // tell radio to start sending
1027:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1028:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
1029:../../src/radio/cc2420/source/basic_rf.c **** #endif
1030:../../src/radio/cc2420/source/basic_rf.c **** }
1031:../../src/radio/cc2420/source/basic_rf.c **** 
1032:../../src/radio/cc2420/source/basic_rf.c **** /**********************************************************
1033:../../src/radio/cc2420/source/basic_rf.c ****  * stop sending a carrier pulse; set the radio to idle state
1034:../../src/radio/cc2420/source/basic_rf.c ****  */
1035:../../src/radio/cc2420/source/basic_rf.c **** void rf_carrier_off()
1036:../../src/radio/cc2420/source/basic_rf.c **** {
 771               	.LM56:
 772               	.LFBB15:
 773               	/* prologue: frame size=0 */
 774               	/* prologue end (size=0) */
1037:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1038:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_pend(radio_sem);
 776               	.LM57:
 777 026c 8091 0000 		lds r24,radio_sem
 778 0270 9091 0000 		lds r25,(radio_sem)+1
 779 0274 0E94 0000 		call nrk_sem_pend
1039:../../src/radio/cc2420/source/basic_rf.c **** #endif
1040:../../src/radio/cc2420/source/basic_rf.c ****         FASTSPI_STROBE(CC2420_SRFOFF); // stop radio
 781               	.LM58:
 782 0278 4098      		cbi 40-0x20,0
 783 027a 86E0      		ldi r24,lo8(6)
 784 027c 8EBD      		out 78-0x20,r24
 785               	.L158:
 787               	.LM59:
 788 027e 0DB4      		in __tmp_reg__,77-0x20
 789 0280 07FE      		sbrs __tmp_reg__,7
 790 0282 00C0      		rjmp .L158
 791 0284 409A      		sbi 40-0x20,0
1041:../../src/radio/cc2420/source/basic_rf.c **** #ifdef RADIO_PRIORITY_CEILING
1042:../../src/radio/cc2420/source/basic_rf.c **** nrk_sem_post(radio_sem);
 793               	.LM60:
 794 0286 8091 0000 		lds r24,radio_sem
 795 028a 9091 0000 		lds r25,(radio_sem)+1
 796 028e 0E94 0000 		call nrk_sem_post
 797               	/* epilogue: frame size=0 */
 798 0292 0895      		ret
 799               	/* epilogue end (size=1) */
 800               	/* function rf_carrier_off size 20 (19) */
 802               	.Lscope15:
 804               		.stabd	78,0,0
 806               	.global	rf_carrier_on
 808               	rf_carrier_on:
 809               		.stabd	46,0,0
 811               	.LM61:
 812               	.LFBB16:
 813               	/* prologue: frame size=0 */
 814               	/* prologue end (size=0) */
 816               	.LM62:
 817 0294 8091 0000 		lds r24,radio_sem
 818 0298 9091 0000 		lds r25,(radio_sem)+1
 819 029c 0E94 0000 		call nrk_sem_pend
 821               	.LM63:
 822 02a0 4098      		cbi 40-0x20,0
 823 02a2 84E0      		ldi r24,lo8(4)
 824 02a4 8EBD      		out 78-0x20,r24
 825               	.L164:
 827               	.LM64:
 828 02a6 0DB4      		in __tmp_reg__,77-0x20
 829 02a8 07FE      		sbrs __tmp_reg__,7
 830 02aa 00C0      		rjmp .L164
 831 02ac 409A      		sbi 40-0x20,0
 833               	.LM65:
 834 02ae 8091 0000 		lds r24,radio_sem
 835 02b2 9091 0000 		lds r25,(radio_sem)+1
 836 02b6 0E94 0000 		call nrk_sem_post
 837               	/* epilogue: frame size=0 */
 838 02ba 0895      		ret
 839               	/* epilogue end (size=1) */
 840               	/* function rf_carrier_on size 20 (19) */
 842               	.Lscope16:
 844               		.stabd	78,0,0
 846               	.global	rf_data_mode
 848               	rf_data_mode:
 849               		.stabd	46,0,0
 851               	.LM66:
 852               	.LFBB17:
 853               	/* prologue: frame size=0 */
 854               	/* prologue end (size=0) */
 856               	.LM67:
 857 02bc 8091 0000 		lds r24,radio_sem
 858 02c0 9091 0000 		lds r25,(radio_sem)+1
 859 02c4 0E94 0000 		call nrk_sem_pend
 861               	.LM68:
 862 02c8 4098      		cbi 40-0x20,0
 863 02ca 86E0      		ldi r24,lo8(6)
 864 02cc 8EBD      		out 78-0x20,r24
 865               	.L170:
 867               	.LM69:
 868 02ce 0DB4      		in __tmp_reg__,77-0x20
 869 02d0 07FE      		sbrs __tmp_reg__,7
 870 02d2 00C0      		rjmp .L170
 871 02d4 409A      		sbi 40-0x20,0
 873               	.LM70:
 874 02d6 4098      		cbi 40-0x20,0
 875 02d8 82E1      		ldi r24,lo8(18)
 876 02da 8EBD      		out 78-0x20,r24
 877               	.L172:
 878 02dc 0DB4      		in __tmp_reg__,77-0x20
 879 02de 07FE      		sbrs __tmp_reg__,7
 880 02e0 00C0      		rjmp .L172
 881 02e2 85E0      		ldi r24,lo8(5)
 882 02e4 8EBD      		out 78-0x20,r24
 883               	.L174:
 884 02e6 0DB4      		in __tmp_reg__,77-0x20
 885 02e8 07FE      		sbrs __tmp_reg__,7
 886 02ea 00C0      		rjmp .L174
 887 02ec 1EBC      		out 78-0x20,__zero_reg__
 888               	.L176:
 889 02ee 0DB4      		in __tmp_reg__,77-0x20
 890 02f0 07FE      		sbrs __tmp_reg__,7
 891 02f2 00C0      		rjmp .L176
 892 02f4 409A      		sbi 40-0x20,0
 894               	.LM71:
 895 02f6 4098      		cbi 40-0x20,0
 896 02f8 8EE2      		ldi r24,lo8(46)
 897 02fa 8EBD      		out 78-0x20,r24
 898               	.L178:
 899 02fc 0DB4      		in __tmp_reg__,77-0x20
 900 02fe 07FE      		sbrs __tmp_reg__,7
 901 0300 00C0      		rjmp .L178
 902 0302 1EBC      		out 78-0x20,__zero_reg__
 903               	.L180:
 904 0304 0DB4      		in __tmp_reg__,77-0x20
 905 0306 07FE      		sbrs __tmp_reg__,7
 906 0308 00C0      		rjmp .L180
 907 030a 1EBC      		out 78-0x20,__zero_reg__
 908               	.L182:
 909 030c 0DB4      		in __tmp_reg__,77-0x20
 910 030e 07FE      		sbrs __tmp_reg__,7
 911 0310 00C0      		rjmp .L182
 912 0312 409A      		sbi 40-0x20,0
 914               	.LM72:
 915 0314 0E94 0000 		call rf_flush_rx_fifo
 917               	.LM73:
 918 0318 8091 0000 		lds r24,radio_sem
 919 031c 9091 0000 		lds r25,(radio_sem)+1
 920 0320 0E94 0000 		call nrk_sem_post
 921               	/* epilogue: frame size=0 */
 922 0324 0895      		ret
 923               	/* epilogue end (size=1) */
 924               	/* function rf_data_mode size 53 (52) */
 926               	.Lscope17:
 928               		.stabd	78,0,0
 930               	.global	rf_test_mode
 932               	rf_test_mode:
 933               		.stabd	46,0,0
 935               	.LM74:
 936               	.LFBB18:
 937               	/* prologue: frame size=0 */
 938               	/* prologue end (size=0) */
 940               	.LM75:
 941 0326 8091 0000 		lds r24,radio_sem
 942 032a 9091 0000 		lds r25,(radio_sem)+1
 943 032e 0E94 0000 		call nrk_sem_pend
 945               	.LM76:
 946 0332 4098      		cbi 40-0x20,0
 947 0334 86E0      		ldi r24,lo8(6)
 948 0336 8EBD      		out 78-0x20,r24
 949               	.L200:
 951               	.LM77:
 952 0338 0DB4      		in __tmp_reg__,77-0x20
 953 033a 07FE      		sbrs __tmp_reg__,7
 954 033c 00C0      		rjmp .L200
 955 033e 409A      		sbi 40-0x20,0
 957               	.LM78:
 958 0340 4098      		cbi 40-0x20,0
 959 0342 82E1      		ldi r24,lo8(18)
 960 0344 8EBD      		out 78-0x20,r24
 961               	.L202:
 962 0346 0DB4      		in __tmp_reg__,77-0x20
 963 0348 07FE      		sbrs __tmp_reg__,7
 964 034a 00C0      		rjmp .L202
 965 034c 85E0      		ldi r24,lo8(5)
 966 034e 8EBD      		out 78-0x20,r24
 967               	.L204:
 968 0350 0DB4      		in __tmp_reg__,77-0x20
 969 0352 07FE      		sbrs __tmp_reg__,7
 970 0354 00C0      		rjmp .L204
 971 0356 88E0      		ldi r24,lo8(8)
 972 0358 8EBD      		out 78-0x20,r24
 973               	.L206:
 974 035a 0DB4      		in __tmp_reg__,77-0x20
 975 035c 07FE      		sbrs __tmp_reg__,7
 976 035e 00C0      		rjmp .L206
 977 0360 409A      		sbi 40-0x20,0
 979               	.LM79:
 980 0362 4098      		cbi 40-0x20,0
 981 0364 8EE2      		ldi r24,lo8(46)
 982 0366 8EBD      		out 78-0x20,r24
 983               	.L208:
 984 0368 0DB4      		in __tmp_reg__,77-0x20
 985 036a 07FE      		sbrs __tmp_reg__,7
 986 036c 00C0      		rjmp .L208
 987 036e 88E1      		ldi r24,lo8(24)
 988 0370 8EBD      		out 78-0x20,r24
 989               	.L210:
 990 0372 0DB4      		in __tmp_reg__,77-0x20
 991 0374 07FE      		sbrs __tmp_reg__,7
 992 0376 00C0      		rjmp .L210
 993 0378 1EBC      		out 78-0x20,__zero_reg__
 994               	.L212:
 995 037a 0DB4      		in __tmp_reg__,77-0x20
 996 037c 07FE      		sbrs __tmp_reg__,7
 997 037e 00C0      		rjmp .L212
 998 0380 409A      		sbi 40-0x20,0
 1000               	.LM80:
 1001 0382 0E94 0000 		call rf_flush_rx_fifo
 1003               	.LM81:
 1004 0386 8091 0000 		lds r24,radio_sem
 1005 038a 9091 0000 		lds r25,(radio_sem)+1
 1006 038e 0E94 0000 		call nrk_sem_post
 1007               	/* epilogue: frame size=0 */
 1008 0392 0895      		ret
 1009               	/* epilogue end (size=1) */
 1010               	/* function rf_test_mode size 55 (54) */
 1012               	.Lscope18:
 1014               		.stabd	78,0,0
 1017               	.global	rf_set_cca_thresh
 1019               	rf_set_cca_thresh:
 1020               		.stabd	46,0,0
 1022               	.LM82:
 1023               	.LFBB19:
 1024               	/* prologue: frame size=0 */
 1025 0394 0F93      		push r16
 1026 0396 1F93      		push r17
 1027               	/* prologue end (size=2) */
 1028 0398 082F      		mov r16,r24
 1030               	.LM83:
 1031 039a 8091 0000 		lds r24,radio_sem
 1032 039e 9091 0000 		lds r25,(radio_sem)+1
 1033 03a2 0E94 0000 		call nrk_sem_pend
 1035               	.LM84:
 1036 03a6 1127      		clr r17
 1037 03a8 07FD      		sbrc r16,7
 1038 03aa 1095      		com r17
 1039 03ac 302F      		mov r19,r16
 1040 03ae 2227      		clr r18
 1041 03b0 2068      		ori r18,lo8(128)
 1043               	.LM85:
 1044 03b2 4098      		cbi 40-0x20,0
 1045 03b4 83E1      		ldi r24,lo8(19)
 1046 03b6 8EBD      		out 78-0x20,r24
 1047               	.L230:
 1049               	.LM86:
 1050 03b8 0DB4      		in __tmp_reg__,77-0x20
 1051 03ba 07FE      		sbrs __tmp_reg__,7
 1052 03bc 00C0      		rjmp .L230
 1053 03be 832F      		mov r24,r19
 1054 03c0 9927      		clr r25
 1055 03c2 8EBD      		out 78-0x20,r24
 1056               	.L232:
 1057 03c4 0DB4      		in __tmp_reg__,77-0x20
 1058 03c6 07FE      		sbrs __tmp_reg__,7
 1059 03c8 00C0      		rjmp .L232
 1060 03ca 2EBD      		out 78-0x20,r18
 1061               	.L234:
 1062 03cc 0DB4      		in __tmp_reg__,77-0x20
 1063 03ce 07FE      		sbrs __tmp_reg__,7
 1064 03d0 00C0      		rjmp .L234
 1065 03d2 409A      		sbi 40-0x20,0
 1067               	.LM87:
 1068 03d4 8091 0000 		lds r24,radio_sem
 1069 03d8 9091 0000 		lds r25,(radio_sem)+1
 1070 03dc 0E94 0000 		call nrk_sem_post
 1071               	/* epilogue: frame size=0 */
 1072 03e0 1F91      		pop r17
 1073 03e2 0F91      		pop r16
 1074 03e4 0895      		ret
 1075               	/* epilogue end (size=3) */
 1076               	/* function rf_set_cca_thresh size 41 (36) */
 1081               	.Lscope19:
 1083               		.stabd	78,0,0
 1085               	.global	rf_polling_rx_packet
 1087               	rf_polling_rx_packet:
 1088               		.stabd	46,0,0
 1090               	.LM88:
 1091               	.LFBB20:
 1092               	/* prologue: frame size=4 */
 1093 03e6 CF93      		push r28
 1094 03e8 DF93      		push r29
 1095 03ea CDB7      		in r28,__SP_L__
 1096 03ec DEB7      		in r29,__SP_H__
 1097 03ee 2497      		sbiw r28,4
 1098 03f0 0FB6      		in __tmp_reg__,__SREG__
 1099 03f2 F894      		cli
 1100 03f4 DEBF      		out __SP_H__,r29
 1101 03f6 0FBE      		out __SREG__,__tmp_reg__
 1102 03f8 CDBF      		out __SP_L__,r28
 1103               	/* prologue end (size=10) */
 1105               	.LM89:
 1106 03fa 8091 0000 		lds r24,radio_sem
 1107 03fe 9091 0000 		lds r25,(radio_sem)+1
 1108 0402 0E94 0000 		call nrk_sem_pend
 1110               	.LM90:
 1111 0406 679B      		sbis 44-0x20,7
 1112 0408 00C0      		rjmp .L244
 1113               	.LBB2:
 1115               	.LM91:
 1116 040a 1092 0000 		sts last_pkt_encrypted,__zero_reg__
 1118               	.LM92:
 1119 040e 679B      		sbis 44-0x20,7
 1120 0410 00C0      		rjmp .L246
 1121 0412 3199      		sbic 38-0x20,1
 1122 0414 00C0      		rjmp .L246
 1124               	.LM93:
 1125 0416 4098      		cbi 40-0x20,0
 1126 0418 8FE7      		ldi r24,lo8(127)
 1127 041a 8EBD      		out 78-0x20,r24
 1128               	.L249:
 1129 041c 0DB4      		in __tmp_reg__,77-0x20
 1130 041e 07FE      		sbrs __tmp_reg__,7
 1131 0420 00C0      		rjmp .L249
 1132 0422 1EBC      		out 78-0x20,__zero_reg__
 1133               	.L251:
 1134 0424 0DB4      		in __tmp_reg__,77-0x20
 1135 0426 07FE      		sbrs __tmp_reg__,7
 1136 0428 00C0      		rjmp .L251
 1137 042a 8EB5      		in r24,78-0x20
 1138 042c 409A      		sbi 40-0x20,0
 1140               	.LM94:
 1141 042e 4098      		cbi 40-0x20,0
 1142 0430 88E0      		ldi r24,lo8(8)
 1143 0432 8EBD      		out 78-0x20,r24
 1144               	.L253:
 1145 0434 0DB4      		in __tmp_reg__,77-0x20
 1146 0436 07FE      		sbrs __tmp_reg__,7
 1147 0438 00C0      		rjmp .L253
 1148 043a 409A      		sbi 40-0x20,0
 1150               	.LM95:
 1151 043c 4098      		cbi 40-0x20,0
 1152 043e 88E0      		ldi r24,lo8(8)
 1153 0440 8EBD      		out 78-0x20,r24
 1154               	.L255:
 1155 0442 0DB4      		in __tmp_reg__,77-0x20
 1156 0444 07FE      		sbrs __tmp_reg__,7
 1157 0446 00C0      		rjmp .L255
 1158 0448 409A      		sbi 40-0x20,0
 1160               	.LM96:
 1161 044a 8091 0000 		lds r24,radio_sem
 1162 044e 9091 0000 		lds r25,(radio_sem)+1
 1163 0452 0E94 0000 		call nrk_sem_post
 1164 0456 8FEF      		ldi r24,lo8(-1)
 1165 0458 9FEF      		ldi r25,hi8(-1)
 1166 045a 00C0      		rjmp .L257
 1167               	.L246:
 1169               	.LM97:
 1170 045c 4098      		cbi 40-0x20,0
 1171 045e 8FE7      		ldi r24,lo8(127)
 1172 0460 8EBD      		out 78-0x20,r24
 1173               	.L258:
 1174 0462 0DB4      		in __tmp_reg__,77-0x20
 1175 0464 07FE      		sbrs __tmp_reg__,7
 1176 0466 00C0      		rjmp .L258
 1177 0468 1EBC      		out 78-0x20,__zero_reg__
 1178               	.L260:
 1179 046a 0DB4      		in __tmp_reg__,77-0x20
 1180 046c 07FE      		sbrs __tmp_reg__,7
 1181 046e 00C0      		rjmp .L260
 1182 0470 4EB5      		in r20,78-0x20
 1183 0472 409A      		sbi 40-0x20,0
 1185               	.LM98:
 1186 0474 4F77      		andi r20,lo8(127)
 1188               	.LM99:
 1189 0476 01F4      		brne .L262
 1191               	.LM100:
 1192 0478 4098      		cbi 40-0x20,0
 1193 047a 8FE7      		ldi r24,lo8(127)
 1194 047c 8EBD      		out 78-0x20,r24
 1195               	.L264:
 1196 047e 0DB4      		in __tmp_reg__,77-0x20
 1197 0480 07FE      		sbrs __tmp_reg__,7
 1198 0482 00C0      		rjmp .L264
 1199 0484 1EBC      		out 78-0x20,__zero_reg__
 1200               	.L266:
 1201 0486 0DB4      		in __tmp_reg__,77-0x20
 1202 0488 07FE      		sbrs __tmp_reg__,7
 1203 048a 00C0      		rjmp .L266
 1204 048c 8EB5      		in r24,78-0x20
 1205 048e 409A      		sbi 40-0x20,0
 1207               	.LM101:
 1208 0490 4098      		cbi 40-0x20,0
 1209 0492 88E0      		ldi r24,lo8(8)
 1210 0494 8EBD      		out 78-0x20,r24
 1211               	.L268:
 1212 0496 0DB4      		in __tmp_reg__,77-0x20
 1213 0498 07FE      		sbrs __tmp_reg__,7
 1214 049a 00C0      		rjmp .L268
 1215 049c 409A      		sbi 40-0x20,0
 1217               	.LM102:
 1218 049e 4098      		cbi 40-0x20,0
 1219 04a0 88E0      		ldi r24,lo8(8)
 1220 04a2 8EBD      		out 78-0x20,r24
 1221               	.L270:
 1222 04a4 0DB4      		in __tmp_reg__,77-0x20
 1223 04a6 07FE      		sbrs __tmp_reg__,7
 1224 04a8 00C0      		rjmp .L270
 1225 04aa 409A      		sbi 40-0x20,0
 1227               	.LM103:
 1228 04ac 8091 0000 		lds r24,radio_sem
 1229 04b0 9091 0000 		lds r25,(radio_sem)+1
 1230 04b4 0E94 0000 		call nrk_sem_post
 1231 04b8 8EEF      		ldi r24,lo8(-2)
 1232 04ba 9FEF      		ldi r25,hi8(-2)
 1233 04bc 00C0      		rjmp .L257
 1234               	.L262:
 1236               	.LM104:
 1237 04be 4530      		cpi r20,lo8(5)
 1238 04c0 04F0      		brlt .L272
 1239 04c2 E091 0000 		lds r30,rfSettings
 1240 04c6 F091 0000 		lds r31,(rfSettings)+1
 1241 04ca 242F      		mov r18,r20
 1242 04cc 3327      		clr r19
 1243 04ce 27FD      		sbrc r18,7
 1244 04d0 3095      		com r19
 1245 04d2 2B50      		subi r18,lo8(-(-11))
 1246 04d4 3040      		sbci r19,hi8(-(-11))
 1247 04d6 8481      		ldd r24,Z+4
 1248 04d8 9927      		clr r25
 1249 04da 87FD      		sbrc r24,7
 1250 04dc 9095      		com r25
 1251 04de 8217      		cp r24,r18
 1252 04e0 9307      		cpc r25,r19
 1253 04e2 04F4      		brge .L274
 1254               	.L272:
 1256               	.LM105:
 1257 04e4 4098      		cbi 40-0x20,0
 1258 04e6 8FE7      		ldi r24,lo8(127)
 1259 04e8 8EBD      		out 78-0x20,r24
 1260               	.L275:
 1261 04ea 0DB4      		in __tmp_reg__,77-0x20
 1262 04ec 07FE      		sbrs __tmp_reg__,7
 1263 04ee 00C0      		rjmp .L275
 1264 04f0 60E0      		ldi r22,lo8(0)
 1265 04f2 70E0      		ldi r23,hi8(0)
 1266               	.LBB3:
 1267 04f4 242F      		mov r18,r20
 1268 04f6 3327      		clr r19
 1269 04f8 27FD      		sbrc r18,7
 1270 04fa 3095      		com r19
 1271 04fc 00C0      		rjmp .L277
 1272               	.L278:
 1273 04fe 1EBC      		out 78-0x20,__zero_reg__
 1274               	.L279:
 1275 0500 0DB4      		in __tmp_reg__,77-0x20
 1276 0502 07FE      		sbrs __tmp_reg__,7
 1277 0504 00C0      		rjmp .L279
 1278 0506 6F5F      		subi r22,lo8(-(1))
 1279 0508 7F4F      		sbci r23,hi8(-(1))
 1280               	.L277:
 1281 050a 862F      		mov r24,r22
 1282 050c 9927      		clr r25
 1283 050e 8217      		cp r24,r18
 1284 0510 9307      		cpc r25,r19
 1285 0512 04F4      		brge .L281
 1286 0514 3199      		sbic 38-0x20,1
 1287 0516 00C0      		rjmp .L278
 1288               	.L281:
 1289               	.LBE3:
 1290 0518 409A      		sbi 40-0x20,0
 1292               	.LM106:
 1293 051a 4098      		cbi 40-0x20,0
 1294 051c 8FE7      		ldi r24,lo8(127)
 1295 051e 8EBD      		out 78-0x20,r24
 1296               	.L283:
 1297 0520 0DB4      		in __tmp_reg__,77-0x20
 1298 0522 07FE      		sbrs __tmp_reg__,7
 1299 0524 00C0      		rjmp .L283
 1300 0526 1EBC      		out 78-0x20,__zero_reg__
 1301               	.L285:
 1302 0528 0DB4      		in __tmp_reg__,77-0x20
 1303 052a 07FE      		sbrs __tmp_reg__,7
 1304 052c 00C0      		rjmp .L285
 1305 052e 8EB5      		in r24,78-0x20
 1306 0530 409A      		sbi 40-0x20,0
 1308               	.LM107:
 1309 0532 4098      		cbi 40-0x20,0
 1310 0534 88E0      		ldi r24,lo8(8)
 1311 0536 8EBD      		out 78-0x20,r24
 1312               	.L287:
 1313 0538 0DB4      		in __tmp_reg__,77-0x20
 1314 053a 07FE      		sbrs __tmp_reg__,7
 1315 053c 00C0      		rjmp .L287
 1316 053e 409A      		sbi 40-0x20,0
 1318               	.LM108:
 1319 0540 4098      		cbi 40-0x20,0
 1320 0542 88E0      		ldi r24,lo8(8)
 1321 0544 8EBD      		out 78-0x20,r24
 1322               	.L289:
 1323 0546 0DB4      		in __tmp_reg__,77-0x20
 1324 0548 07FE      		sbrs __tmp_reg__,7
 1325 054a 00C0      		rjmp .L289
 1326 054c 409A      		sbi 40-0x20,0
 1328               	.LM109:
 1329 054e 8091 0000 		lds r24,radio_sem
 1330 0552 9091 0000 		lds r25,(radio_sem)+1
 1331 0556 0E94 0000 		call nrk_sem_post
 1332 055a 8DEF      		ldi r24,lo8(-3)
 1333 055c 9FEF      		ldi r25,hi8(-3)
 1334 055e 00C0      		rjmp .L257
 1335               	.L274:
 1337               	.LM110:
 1338 0560 E091 0000 		lds r30,rfSettings
 1339 0564 F091 0000 		lds r31,(rfSettings)+1
 1340 0568 4C50      		subi r20,lo8(-(-12))
 1341 056a 4383      		std Z+3,r20
 1343               	.LM111:
 1344 056c 4098      		cbi 40-0x20,0
 1345 056e 8FE7      		ldi r24,lo8(127)
 1346 0570 8EBD      		out 78-0x20,r24
 1347               	.L291:
 1348 0572 0DB4      		in __tmp_reg__,77-0x20
 1349 0574 07FE      		sbrs __tmp_reg__,7
 1350 0576 00C0      		rjmp .L291
 1351 0578 FE01      		movw r30,r28
 1352 057a 3196      		adiw r30,1
 1353               	.LBB4:
 1354 057c 9E01      		movw r18,r28
 1355 057e 2D5F      		subi r18,lo8(-(3))
 1356 0580 3F4F      		sbci r19,hi8(-(3))
 1357               	.L293:
 1358 0582 1EBC      		out 78-0x20,__zero_reg__
 1359               	.L294:
 1360 0584 0DB4      		in __tmp_reg__,77-0x20
 1361 0586 07FE      		sbrs __tmp_reg__,7
 1362 0588 00C0      		rjmp .L294
 1363 058a 8EB5      		in r24,78-0x20
 1364 058c 8193      		st Z+,r24
 1365 058e E217      		cp r30,r18
 1366 0590 F307      		cpc r31,r19
 1367 0592 01F4      		brne .L293
 1368               	.LBE4:
 1369 0594 409A      		sbi 40-0x20,0
 1371               	.LM112:
 1372 0596 E091 0000 		lds r30,rfSettings
 1373 059a F091 0000 		lds r31,(rfSettings)+1
 1374 059e 8981      		ldd r24,Y+1
 1375 05a0 9A81      		ldd r25,Y+2
 1376 05a2 B5E0      		ldi r27,5
 1377 05a4 9695      	1:	lsr r25
 1378 05a6 8795      		ror r24
 1379 05a8 BA95      		dec r27
 1380 05aa 01F4      		brne 1b
 1381 05ac 8170      		andi r24,lo8(1)
 1382 05ae 8783      		std Z+7,r24
 1384               	.LM113:
 1385 05b0 4098      		cbi 40-0x20,0
 1386 05b2 8FE7      		ldi r24,lo8(127)
 1387 05b4 8EBD      		out 78-0x20,r24
 1388               	.L297:
 1389 05b6 0DB4      		in __tmp_reg__,77-0x20
 1390 05b8 07FE      		sbrs __tmp_reg__,7
 1391 05ba 00C0      		rjmp .L297
 1392 05bc 1EBC      		out 78-0x20,__zero_reg__
 1393               	.L299:
 1394 05be 0DB4      		in __tmp_reg__,77-0x20
 1395 05c0 07FE      		sbrs __tmp_reg__,7
 1396 05c2 00C0      		rjmp .L299
 1397 05c4 E091 0000 		lds r30,rfSettings
 1398 05c8 F091 0000 		lds r31,(rfSettings)+1
 1399 05cc 8EB5      		in r24,78-0x20
 1400 05ce 8083      		st Z,r24
 1401 05d0 409A      		sbi 40-0x20,0
 1403               	.LM114:
 1404 05d2 4098      		cbi 40-0x20,0
 1405 05d4 8FE7      		ldi r24,lo8(127)
 1406 05d6 8EBD      		out 78-0x20,r24
 1407               	.L301:
 1408 05d8 0DB4      		in __tmp_reg__,77-0x20
 1409 05da 07FE      		sbrs __tmp_reg__,7
 1410 05dc 00C0      		rjmp .L301
 1411 05de 80E0      		ldi r24,lo8(0)
 1412 05e0 00C0      		rjmp .L303
 1413               	.L304:
 1414               	.LBB5:
 1415 05e2 1EBC      		out 78-0x20,__zero_reg__
 1416               	.L305:
 1417 05e4 0DB4      		in __tmp_reg__,77-0x20
 1418 05e6 07FE      		sbrs __tmp_reg__,7
 1419 05e8 00C0      		rjmp .L305
 1420 05ea 8F5F      		subi r24,lo8(-(1))
 1421 05ec 8430      		cpi r24,lo8(4)
 1422 05ee 01F0      		breq .L307
 1423               	.L303:
 1424 05f0 3199      		sbic 38-0x20,1
 1425 05f2 00C0      		rjmp .L304
 1426               	.L307:
 1427               	.LBE5:
 1428 05f4 409A      		sbi 40-0x20,0
 1430               	.LM115:
 1431 05f6 4098      		cbi 40-0x20,0
 1432 05f8 8FE7      		ldi r24,lo8(127)
 1433 05fa 8EBD      		out 78-0x20,r24
 1434               	.L308:
 1435 05fc 0DB4      		in __tmp_reg__,77-0x20
 1436 05fe 07FE      		sbrs __tmp_reg__,7
 1437 0600 00C0      		rjmp .L308
 1438 0602 20E0      		ldi r18,lo8(0)
 1439 0604 30E0      		ldi r19,hi8(0)
 1440               	.L310:
 1441               	.LBB6:
 1442 0606 1EBC      		out 78-0x20,__zero_reg__
 1443               	.L311:
 1444 0608 0DB4      		in __tmp_reg__,77-0x20
 1445 060a 07FE      		sbrs __tmp_reg__,7
 1446 060c 00C0      		rjmp .L311
 1447 060e E091 0000 		lds r30,rfSettings
 1448 0612 F091 0000 		lds r31,(rfSettings)+1
 1449 0616 E20F      		add r30,r18
 1450 0618 F31F      		adc r31,r19
 1451 061a 8EB5      		in r24,78-0x20
 1452 061c 8183      		std Z+1,r24
 1453 061e 2F5F      		subi r18,lo8(-(1))
 1454 0620 3F4F      		sbci r19,hi8(-(1))
 1455 0622 2230      		cpi r18,2
 1456 0624 3105      		cpc r19,__zero_reg__
 1457 0626 01F4      		brne .L310
 1458               	.LBE6:
 1459 0628 409A      		sbi 40-0x20,0
 1461               	.LM116:
 1462 062a 8981      		ldd r24,Y+1
 1463 062c 9A81      		ldd r25,Y+2
 1464 062e 83FF      		sbrs r24,3
 1465 0630 00C0      		rjmp .L314
 1466               	.LBB7:
 1468               	.LM117:
 1469 0632 4098      		cbi 40-0x20,0
 1470 0634 8FE7      		ldi r24,lo8(127)
 1471 0636 8EBD      		out 78-0x20,r24
 1472               	.L316:
 1473 0638 0DB4      		in __tmp_reg__,77-0x20
 1474 063a 07FE      		sbrs __tmp_reg__,7
 1475 063c 00C0      		rjmp .L316
 1476 063e E0E0      		ldi r30,lo8(rx_ctr)
 1477 0640 F0E0      		ldi r31,hi8(rx_ctr)
 1478               	.L318:
 1479               	.LBB8:
 1480 0642 1EBC      		out 78-0x20,__zero_reg__
 1481               	.L319:
 1482 0644 0DB4      		in __tmp_reg__,77-0x20
 1483 0646 07FE      		sbrs __tmp_reg__,7
 1484 0648 00C0      		rjmp .L319
 1485 064a 8EB5      		in r24,78-0x20
 1486 064c 8193      		st Z+,r24
 1487 064e 80E0      		ldi r24,hi8(rx_ctr+4)
 1488 0650 E030      		cpi r30,lo8(rx_ctr+4)
 1489 0652 F807      		cpc r31,r24
 1490 0654 01F4      		brne .L318
 1491               	.LBE8:
 1492 0656 409A      		sbi 40-0x20,0
 1494               	.LM118:
 1495 0658 4098      		cbi 40-0x20,0
 1496 065a 89E9      		ldi r24,lo8(-103)
 1497 065c 8EBD      		out 78-0x20,r24
 1498               	.L322:
 1499 065e 0DB4      		in __tmp_reg__,77-0x20
 1500 0660 07FE      		sbrs __tmp_reg__,7
 1501 0662 00C0      		rjmp .L322
 1502 0664 80E8      		ldi r24,lo8(-128)
 1503 0666 8EBD      		out 78-0x20,r24
 1504               	.L324:
 1505 0668 0DB4      		in __tmp_reg__,77-0x20
 1506 066a 07FE      		sbrs __tmp_reg__,7
 1507 066c 00C0      		rjmp .L324
 1508 066e 92E0      		ldi r25,lo8(2)
 1509               	.L326:
 1510 0670 9150      		subi r25,lo8(-(-1))
 1511 0672 E92F      		mov r30,r25
 1512 0674 FF27      		clr r31
 1513 0676 E050      		subi r30,lo8(-(rx_ctr))
 1514 0678 F040      		sbci r31,hi8(-(rx_ctr))
 1515 067a 8081      		ld r24,Z
 1516 067c 8EBD      		out 78-0x20,r24
 1517               	.L327:
 1518 067e 0DB4      		in __tmp_reg__,77-0x20
 1519 0680 07FE      		sbrs __tmp_reg__,7
 1520 0682 00C0      		rjmp .L327
 1521 0684 9923      		tst r25
 1522 0686 01F4      		brne .L326
 1523 0688 409A      		sbi 40-0x20,0
 1525               	.LM119:
 1526 068a 4098      		cbi 40-0x20,0
 1527 068c 8BE9      		ldi r24,lo8(-101)
 1528 068e 8EBD      		out 78-0x20,r24
 1529               	.L330:
 1530 0690 0DB4      		in __tmp_reg__,77-0x20
 1531 0692 07FE      		sbrs __tmp_reg__,7
 1532 0694 00C0      		rjmp .L330
 1533 0696 80E8      		ldi r24,lo8(-128)
 1534 0698 8EBD      		out 78-0x20,r24
 1535               	.L332:
 1536 069a 0DB4      		in __tmp_reg__,77-0x20
 1537 069c 07FE      		sbrs __tmp_reg__,7
 1538 069e 00C0      		rjmp .L332
 1539 06a0 92E0      		ldi r25,lo8(2)
 1540               	.L334:
 1541 06a2 9150      		subi r25,lo8(-(-1))
 1542 06a4 E92F      		mov r30,r25
 1543 06a6 FF27      		clr r31
 1544 06a8 E050      		subi r30,lo8(-(rx_ctr+2))
 1545 06aa F040      		sbci r31,hi8(-(rx_ctr+2))
 1546 06ac 8081      		ld r24,Z
 1547 06ae 8EBD      		out 78-0x20,r24
 1548               	.L335:
 1549 06b0 0DB4      		in __tmp_reg__,77-0x20
 1550 06b2 07FE      		sbrs __tmp_reg__,7
 1551 06b4 00C0      		rjmp .L335
 1552 06b6 9923      		tst r25
 1553 06b8 01F4      		brne .L334
 1554 06ba 409A      		sbi 40-0x20,0
 1556               	.LM120:
 1557 06bc 4098      		cbi 40-0x20,0
 1558 06be 8CE0      		ldi r24,lo8(12)
 1559 06c0 8EBD      		out 78-0x20,r24
 1560               	.L338:
 1561 06c2 0DB4      		in __tmp_reg__,77-0x20
 1562 06c4 07FE      		sbrs __tmp_reg__,7
 1563 06c6 00C0      		rjmp .L338
 1564 06c8 409A      		sbi 40-0x20,0
 1566               	.LM121:
 1567 06ca 81E0      		ldi r24,lo8(1)
 1568 06cc 8093 0000 		sts last_pkt_encrypted,r24
 1570               	.LM122:
 1571 06d0 E091 0000 		lds r30,rfSettings
 1572 06d4 F091 0000 		lds r31,(rfSettings)+1
 1573 06d8 8381      		ldd r24,Z+3
 1574 06da 8450      		subi r24,lo8(-(-4))
 1575 06dc 8383      		std Z+3,r24
 1576               	.L314:
 1577               	.LBE7:
 1579               	.LM123:
 1580 06de 4098      		cbi 40-0x20,0
 1581 06e0 8FE7      		ldi r24,lo8(127)
 1582 06e2 8EBD      		out 78-0x20,r24
 1583               	.L340:
 1584 06e4 0DB4      		in __tmp_reg__,77-0x20
 1585 06e6 07FE      		sbrs __tmp_reg__,7
 1586 06e8 00C0      		rjmp .L340
 1587 06ea 40E0      		ldi r20,lo8(0)
 1588 06ec 50E0      		ldi r21,hi8(0)
 1589 06ee 00C0      		rjmp .L342
 1590               	.L343:
 1591               	.LBB9:
 1592 06f0 1EBC      		out 78-0x20,__zero_reg__
 1593               	.L344:
 1594 06f2 0DB4      		in __tmp_reg__,77-0x20
 1595 06f4 07FE      		sbrs __tmp_reg__,7
 1596 06f6 00C0      		rjmp .L344
 1597 06f8 E091 0000 		lds r30,rfSettings
 1598 06fc F091 0000 		lds r31,(rfSettings)+1
 1599 0700 0580      		ldd __tmp_reg__,Z+5
 1600 0702 F681      		ldd r31,Z+6
 1601 0704 E02D      		mov r30,__tmp_reg__
 1602 0706 E60F      		add r30,r22
 1603 0708 F11D      		adc r31,__zero_reg__
 1604 070a 8EB5      		in r24,78-0x20
 1605 070c 8083      		st Z,r24
 1606 070e 4F5F      		subi r20,lo8(-(1))
 1607 0710 5F4F      		sbci r21,hi8(-(1))
 1608               	.L342:
 1609 0712 642F      		mov r22,r20
 1610 0714 E091 0000 		lds r30,rfSettings
 1611 0718 F091 0000 		lds r31,(rfSettings)+1
 1612 071c 242F      		mov r18,r20
 1613 071e 3327      		clr r19
 1614 0720 8381      		ldd r24,Z+3
 1615 0722 9927      		clr r25
 1616 0724 87FD      		sbrc r24,7
 1617 0726 9095      		com r25
 1618 0728 2817      		cp r18,r24
 1619 072a 3907      		cpc r19,r25
 1620 072c 04F0      		brlt .L343
 1621               	.LBE9:
 1622 072e 409A      		sbi 40-0x20,0
 1624               	.LM124:
 1625 0730 4098      		cbi 40-0x20,0
 1626 0732 8FE7      		ldi r24,lo8(127)
 1627 0734 8EBD      		out 78-0x20,r24
 1628               	.L347:
 1629 0736 0DB4      		in __tmp_reg__,77-0x20
 1630 0738 07FC      		sbrc __tmp_reg__,7
 1631 073a 00C0      		rjmp .L474
 1632 073c 00C0      		rjmp .L347
 1633               	.L349:
 1634               	.LBB10:
 1635 073e 0DB4      		in __tmp_reg__,77-0x20
 1636 0740 07FE      		sbrs __tmp_reg__,7
 1637 0742 00C0      		rjmp .L349
 1638 0744 5EB5      		in r21,78-0x20
 1639               	.LBE10:
 1640 0746 409A      		sbi 40-0x20,0
 1642               	.LM125:
 1643 0748 4098      		cbi 40-0x20,0
 1644 074a 8FE7      		ldi r24,lo8(127)
 1645 074c 8EBD      		out 78-0x20,r24
 1646 074e 00C0      		rjmp .L351
 1647               	.L474:
 1648               	.LBB11:
 1650               	.LM126:
 1651 0750 1EBC      		out 78-0x20,__zero_reg__
 1652 0752 00C0      		rjmp .L349
 1653               	.L351:
 1654               	.LBE11:
 1656               	.LM127:
 1657 0754 0DB4      		in __tmp_reg__,77-0x20
 1658 0756 07FE      		sbrs __tmp_reg__,7
 1659 0758 00C0      		rjmp .L351
 1660 075a FE01      		movw r30,r28
 1661 075c 3396      		adiw r30,3
 1662               	.LBB12:
 1663 075e 9E01      		movw r18,r28
 1664 0760 2B5F      		subi r18,lo8(-(5))
 1665 0762 3F4F      		sbci r19,hi8(-(5))
 1666               	.L353:
 1667 0764 1EBC      		out 78-0x20,__zero_reg__
 1668               	.L354:
 1669 0766 0DB4      		in __tmp_reg__,77-0x20
 1670 0768 07FE      		sbrs __tmp_reg__,7
 1671 076a 00C0      		rjmp .L354
 1672 076c 8EB5      		in r24,78-0x20
 1673 076e 8193      		st Z+,r24
 1674 0770 E217      		cp r30,r18
 1675 0772 F307      		cpc r31,r19
 1676 0774 01F4      		brne .L353
 1677               	.LBE12:
 1678 0776 409A      		sbi 40-0x20,0
 1680               	.LM128:
 1681 0778 E091 0000 		lds r30,rfSettings
 1682 077c F091 0000 		lds r31,(rfSettings)+1
 1683 0780 8B81      		ldd r24,Y+3
 1684 0782 8087      		std Z+8,r24
 1685 0784 40E0      		ldi r20,lo8(0)
 1686 0786 20E0      		ldi r18,lo8(0)
 1687 0788 30E0      		ldi r19,hi8(0)
 1688 078a 00C0      		rjmp .L357
 1689               	.L358:
 1691               	.LM129:
 1692 078c E091 0000 		lds r30,rfSettings
 1693 0790 F091 0000 		lds r31,(rfSettings)+1
 1694 0794 8581      		ldd r24,Z+5
 1695 0796 9681      		ldd r25,Z+6
 1696 0798 A80F      		add r26,r24
 1697 079a B91F      		adc r27,r25
 1698 079c 8C91      		ld r24,X
 1699 079e 480F      		add r20,r24
 1700               	.L357:
 1701 07a0 822F      		mov r24,r18
 1703               	.LM130:
 1704 07a2 E091 0000 		lds r30,rfSettings
 1705 07a6 F091 0000 		lds r31,(rfSettings)+1
 1706 07aa 2F5F      		subi r18,lo8(-(1))
 1707 07ac 3F4F      		sbci r19,hi8(-(1))
 1708 07ae A82F      		mov r26,r24
 1709 07b0 BB27      		clr r27
 1710 07b2 8381      		ldd r24,Z+3
 1711 07b4 9927      		clr r25
 1712 07b6 87FD      		sbrc r24,7
 1713 07b8 9095      		com r25
 1714 07ba A817      		cp r26,r24
 1715 07bc B907      		cpc r27,r25
 1716 07be 04F0      		brlt .L358
 1718               	.LM131:
 1719 07c0 4517      		cp r20,r21
 1720 07c2 01F0      		breq .L360
 1722               	.LM132:
 1723 07c4 4098      		cbi 40-0x20,0
 1724 07c6 8FE7      		ldi r24,lo8(127)
 1725 07c8 8EBD      		out 78-0x20,r24
 1726               	.L362:
 1727 07ca 0DB4      		in __tmp_reg__,77-0x20
 1728 07cc 07FE      		sbrs __tmp_reg__,7
 1729 07ce 00C0      		rjmp .L362
 1730 07d0 1EBC      		out 78-0x20,__zero_reg__
 1731               	.L364:
 1732 07d2 0DB4      		in __tmp_reg__,77-0x20
 1733 07d4 07FE      		sbrs __tmp_reg__,7
 1734 07d6 00C0      		rjmp .L364
 1735 07d8 8EB5      		in r24,78-0x20
 1736 07da 409A      		sbi 40-0x20,0
 1738               	.LM133:
 1739 07dc 4098      		cbi 40-0x20,0
 1740 07de 88E0      		ldi r24,lo8(8)
 1741 07e0 8EBD      		out 78-0x20,r24
 1742               	.L366:
 1743 07e2 0DB4      		in __tmp_reg__,77-0x20
 1744 07e4 07FE      		sbrs __tmp_reg__,7
 1745 07e6 00C0      		rjmp .L366
 1746 07e8 409A      		sbi 40-0x20,0
 1748               	.LM134:
 1749 07ea 4098      		cbi 40-0x20,0
 1750 07ec 88E0      		ldi r24,lo8(8)
 1751 07ee 8EBD      		out 78-0x20,r24
 1752               	.L368:
 1753 07f0 0DB4      		in __tmp_reg__,77-0x20
 1754 07f2 07FE      		sbrs __tmp_reg__,7
 1755 07f4 00C0      		rjmp .L368
 1756 07f6 409A      		sbi 40-0x20,0
 1758               	.LM135:
 1759 07f8 8091 0000 		lds r24,radio_sem
 1760 07fc 9091 0000 		lds r25,(radio_sem)+1
 1761 0800 0E94 0000 		call nrk_sem_post
 1762 0804 8CEF      		ldi r24,lo8(-4)
 1763 0806 9FEF      		ldi r25,hi8(-4)
 1764 0808 00C0      		rjmp .L257
 1765               	.L360:
 1767               	.LM136:
 1768 080a 8C81      		ldd r24,Y+4
 1769 080c 87FF      		sbrs r24,7
 1770 080e 00C0      		rjmp .L370
 1772               	.LM137:
 1773 0810 8091 0000 		lds r24,rx_ready
 1774 0814 8F5F      		subi r24,lo8(-(1))
 1775 0816 8093 0000 		sts rx_ready,r24
 1777               	.LM138:
 1778 081a 8091 0000 		lds r24,radio_sem
 1779 081e 9091 0000 		lds r25,(radio_sem)+1
 1780 0822 0E94 0000 		call nrk_sem_post
 1781 0826 81E0      		ldi r24,lo8(1)
 1782 0828 90E0      		ldi r25,hi8(1)
 1783 082a 00C0      		rjmp .L257
 1784               	.L370:
 1786               	.LM139:
 1787 082c 4098      		cbi 40-0x20,0
 1788 082e 8FE7      		ldi r24,lo8(127)
 1789 0830 8EBD      		out 78-0x20,r24
 1790               	.L372:
 1791 0832 0DB4      		in __tmp_reg__,77-0x20
 1792 0834 07FE      		sbrs __tmp_reg__,7
 1793 0836 00C0      		rjmp .L372
 1794 0838 1EBC      		out 78-0x20,__zero_reg__
 1795               	.L374:
 1796 083a 0DB4      		in __tmp_reg__,77-0x20
 1797 083c 07FE      		sbrs __tmp_reg__,7
 1798 083e 00C0      		rjmp .L374
 1799 0840 8EB5      		in r24,78-0x20
 1800 0842 409A      		sbi 40-0x20,0
 1802               	.LM140:
 1803 0844 4098      		cbi 40-0x20,0
 1804 0846 88E0      		ldi r24,lo8(8)
 1805 0848 8EBD      		out 78-0x20,r24
 1806               	.L376:
 1807 084a 0DB4      		in __tmp_reg__,77-0x20
 1808 084c 07FE      		sbrs __tmp_reg__,7
 1809 084e 00C0      		rjmp .L376
 1810 0850 409A      		sbi 40-0x20,0
 1812               	.LM141:
 1813 0852 4098      		cbi 40-0x20,0
 1814 0854 88E0      		ldi r24,lo8(8)
 1815 0856 8EBD      		out 78-0x20,r24
 1816               	.L378:
 1817 0858 0DB4      		in __tmp_reg__,77-0x20
 1818 085a 07FE      		sbrs __tmp_reg__,7
 1819 085c 00C0      		rjmp .L378
 1820 085e 409A      		sbi 40-0x20,0
 1822               	.LM142:
 1823 0860 8091 0000 		lds r24,radio_sem
 1824 0864 9091 0000 		lds r25,(radio_sem)+1
 1825 0868 0E94 0000 		call nrk_sem_post
 1826 086c 8BEF      		ldi r24,lo8(-5)
 1827 086e 9FEF      		ldi r25,hi8(-5)
 1828 0870 00C0      		rjmp .L257
 1829               	.L244:
 1830               	.LBE2:
 1832               	.LM143:
 1833 0872 8091 0000 		lds r24,radio_sem
 1834 0876 9091 0000 		lds r25,(radio_sem)+1
 1835 087a 0E94 0000 		call nrk_sem_post
 1836 087e 80E0      		ldi r24,lo8(0)
 1837 0880 90E0      		ldi r25,hi8(0)
 1838               	.L257:
 1839               	/* epilogue: frame size=4 */
 1840 0882 2496      		adiw r28,4
 1841 0884 0FB6      		in __tmp_reg__,__SREG__
 1842 0886 F894      		cli
 1843 0888 DEBF      		out __SP_H__,r29
 1844 088a 0FBE      		out __SREG__,__tmp_reg__
 1845 088c CDBF      		out __SP_L__,r28
 1846 088e DF91      		pop r29
 1847 0890 CF91      		pop r28
 1848 0892 0895      		ret
 1849               	/* epilogue end (size=9) */
 1850               	/* function rf_polling_rx_packet size 600 (581) */
 1870               	.Lscope20:
 1872               		.stabd	78,0,0
 1874               	.global	rf_rx_off
 1876               	rf_rx_off:
 1877               		.stabd	46,0,0
 1879               	.LM144:
 1880               	.LFBB21:
 1881               	/* prologue: frame size=0 */
 1882               	/* prologue end (size=0) */
 1884               	.LM145:
 1885 0894 8091 0000 		lds r24,radio_sem
 1886 0898 9091 0000 		lds r25,(radio_sem)+1
 1887 089c 0E94 0000 		call nrk_sem_pend
 1889               	.LM146:
 1890 08a0 1092 0000 		sts rfSettings+8,__zero_reg__
 1892               	.LM147:
 1893 08a4 4098      		cbi 40-0x20,0
 1894 08a6 86E0      		ldi r24,lo8(6)
 1895 08a8 8EBD      		out 78-0x20,r24
 1896               	.L488:
 1898               	.LM148:
 1899 08aa 0DB4      		in __tmp_reg__,77-0x20
 1900 08ac 07FE      		sbrs __tmp_reg__,7
 1901 08ae 00C0      		rjmp .L488
 1902 08b0 409A      		sbi 40-0x20,0
 1904               	.LM149:
 1905 08b2 1092 0000 		sts rx_ready,__zero_reg__
 1907               	.LM150:
 1908 08b6 8091 0000 		lds r24,radio_sem
 1909 08ba 9091 0000 		lds r25,(radio_sem)+1
 1910 08be 0E94 0000 		call nrk_sem_post
 1911               	/* epilogue: frame size=0 */
 1912 08c2 0895      		ret
 1913               	/* epilogue end (size=1) */
 1914               	/* function rf_rx_off size 24 (23) */
 1916               	.Lscope21:
 1918               		.stabd	78,0,0
 1920               	.global	rf_polling_rx_on
 1922               	rf_polling_rx_on:
 1923               		.stabd	46,0,0
 1925               	.LM151:
 1926               	.LFBB22:
 1927               	/* prologue: frame size=0 */
 1928               	/* prologue end (size=0) */
 1930               	.LM152:
 1931 08c4 8091 0000 		lds r24,radio_sem
 1932 08c8 9091 0000 		lds r25,(radio_sem)+1
 1933 08cc 0E94 0000 		call nrk_sem_pend
 1935               	.LM153:
 1936 08d0 81E0      		ldi r24,lo8(1)
 1937 08d2 8093 0000 		sts rfSettings+8,r24
 1939               	.LM154:
 1940 08d6 4098      		cbi 40-0x20,0
 1941 08d8 83E0      		ldi r24,lo8(3)
 1942 08da 8EBD      		out 78-0x20,r24
 1943               	.L494:
 1945               	.LM155:
 1946 08dc 0DB4      		in __tmp_reg__,77-0x20
 1947 08de 07FE      		sbrs __tmp_reg__,7
 1948 08e0 00C0      		rjmp .L494
 1949 08e2 409A      		sbi 40-0x20,0
 1951               	.LM156:
 1952 08e4 4098      		cbi 40-0x20,0
 1953 08e6 88E0      		ldi r24,lo8(8)
 1954 08e8 8EBD      		out 78-0x20,r24
 1955               	.L496:
 1956 08ea 0DB4      		in __tmp_reg__,77-0x20
 1957 08ec 07FE      		sbrs __tmp_reg__,7
 1958 08ee 00C0      		rjmp .L496
 1959 08f0 409A      		sbi 40-0x20,0
 1961               	.LM157:
 1962 08f2 1092 0000 		sts rx_ready,__zero_reg__
 1964               	.LM158:
 1965 08f6 8091 0000 		lds r24,radio_sem
 1966 08fa 9091 0000 		lds r25,(radio_sem)+1
 1967 08fe 0E94 0000 		call nrk_sem_post
 1968               	/* epilogue: frame size=0 */
 1969 0902 0895      		ret
 1970               	/* epilogue end (size=1) */
 1971               	/* function rf_polling_rx_on size 32 (31) */
 1973               	.Lscope22:
 1975               		.stabd	78,0,0
 1977               	.global	rf_rx_on
 1979               	rf_rx_on:
 1980               		.stabd	46,0,0
 1982               	.LM159:
 1983               	.LFBB23:
 1984               	/* prologue: frame size=0 */
 1985               	/* prologue end (size=0) */
 1987               	.LM160:
 1988 0904 8091 0000 		lds r24,radio_sem
 1989 0908 9091 0000 		lds r25,(radio_sem)+1
 1990 090c 0E94 0000 		call nrk_sem_pend
 1992               	.LM161:
 1993 0910 81E0      		ldi r24,lo8(1)
 1994 0912 8093 0000 		sts rfSettings+8,r24
 1996               	.LM162:
 1997 0916 4098      		cbi 40-0x20,0
 1998 0918 83E0      		ldi r24,lo8(3)
 1999 091a 8EBD      		out 78-0x20,r24
 2000               	.L504:
 2002               	.LM163:
 2003 091c 0DB4      		in __tmp_reg__,77-0x20
 2004 091e 07FE      		sbrs __tmp_reg__,7
 2005 0920 00C0      		rjmp .L504
 2006 0922 409A      		sbi 40-0x20,0
 2008               	.LM164:
 2009 0924 4098      		cbi 40-0x20,0
 2010 0926 88E0      		ldi r24,lo8(8)
 2011 0928 8EBD      		out 78-0x20,r24
 2012               	.L506:
 2013 092a 0DB4      		in __tmp_reg__,77-0x20
 2014 092c 07FE      		sbrs __tmp_reg__,7
 2015 092e 00C0      		rjmp .L506
 2016 0930 409A      		sbi 40-0x20,0
 2018               	.LM165:
 2019 0932 1092 0000 		sts rx_ready,__zero_reg__
 2021               	.LM166:
 2022 0936 8091 0000 		lds r24,radio_sem
 2023 093a 9091 0000 		lds r25,(radio_sem)+1
 2024 093e 0E94 0000 		call nrk_sem_post
 2025               	/* epilogue: frame size=0 */
 2026 0942 0895      		ret
 2027               	/* epilogue end (size=1) */
 2028               	/* function rf_rx_on size 32 (31) */
 2030               	.Lscope23:
 2032               		.stabd	78,0,0
 2035               	.global	rf_tx_power
 2037               	rf_tx_power:
 2038               		.stabd	46,0,0
 2040               	.LM167:
 2041               	.LFBB24:
 2042               	/* prologue: frame size=0 */
 2043 0944 1F93      		push r17
 2044               	/* prologue end (size=1) */
 2045 0946 182F      		mov r17,r24
 2047               	.LM168:
 2048 0948 8091 0000 		lds r24,radio_sem
 2049 094c 9091 0000 		lds r25,(radio_sem)+1
 2050 0950 0E94 0000 		call nrk_sem_pend
 2052               	.LM169:
 2053 0954 212F      		mov r18,r17
 2054 0956 3327      		clr r19
 2055 0958 2F71      		andi r18,lo8(31)
 2056 095a 3070      		andi r19,hi8(31)
 2057 095c 206E      		ori r18,lo8(-24352)
 2058 095e 306A      		ori r19,hi8(-24352)
 2060               	.LM170:
 2061 0960 4098      		cbi 40-0x20,0
 2062 0962 85E1      		ldi r24,lo8(21)
 2063 0964 8EBD      		out 78-0x20,r24
 2064               	.L514:
 2066               	.LM171:
 2067 0966 0DB4      		in __tmp_reg__,77-0x20
 2068 0968 07FE      		sbrs __tmp_reg__,7
 2069 096a 00C0      		rjmp .L514
 2070 096c 832F      		mov r24,r19
 2071 096e 9927      		clr r25
 2072 0970 8EBD      		out 78-0x20,r24
 2073               	.L516:
 2074 0972 0DB4      		in __tmp_reg__,77-0x20
 2075 0974 07FE      		sbrs __tmp_reg__,7
 2076 0976 00C0      		rjmp .L516
 2077 0978 2EBD      		out 78-0x20,r18
 2078               	.L518:
 2079 097a 0DB4      		in __tmp_reg__,77-0x20
 2080 097c 07FE      		sbrs __tmp_reg__,7
 2081 097e 00C0      		rjmp .L518
 2082 0980 409A      		sbi 40-0x20,0
 2084               	.LM172:
 2085 0982 8091 0000 		lds r24,radio_sem
 2086 0986 9091 0000 		lds r25,(radio_sem)+1
 2087 098a 0E94 0000 		call nrk_sem_post
 2088               	/* epilogue: frame size=0 */
 2089 098e 1F91      		pop r17
 2090 0990 0895      		ret
 2091               	/* epilogue end (size=2) */
 2092               	/* function rf_tx_power size 39 (36) */
 2097               	.Lscope24:
 2099               		.stabd	78,0,0
 2102               	.global	rf_tx_packet
 2104               	rf_tx_packet:
 2105               		.stabd	46,0,0
 2107               	.LM173:
 2108               	.LFBB25:
 2109               	/* prologue: frame size=2 */
 2110 0992 EF92      		push r14
 2111 0994 FF92      		push r15
 2112 0996 0F93      		push r16
 2113 0998 1F93      		push r17
 2114 099a CF93      		push r28
 2115 099c DF93      		push r29
 2116 099e CDB7      		in r28,__SP_L__
 2117 09a0 DEB7      		in r29,__SP_H__
 2118 09a2 2297      		sbiw r28,2
 2119 09a4 0FB6      		in __tmp_reg__,__SREG__
 2120 09a6 F894      		cli
 2121 09a8 DEBF      		out __SP_H__,r29
 2122 09aa 0FBE      		out __SREG__,__tmp_reg__
 2123 09ac CDBF      		out __SP_L__,r28
 2124               	/* prologue end (size=14) */
 2125 09ae 8C01      		movw r16,r24
 2127               	.LM174:
 2128 09b0 8091 0000 		lds r24,radio_sem
 2129 09b4 9091 0000 		lds r25,(radio_sem)+1
 2130 09b8 0E94 0000 		call nrk_sem_pend
 2132               	.LM175:
 2133 09bc 5091 0000 		lds r21,security_enable
 2134 09c0 5523      		tst r21
 2135 09c2 01F0      		breq .L528
 2137               	.LM176:
 2138 09c4 4098      		cbi 40-0x20,0
 2139 09c6 8DE0      		ldi r24,lo8(13)
 2140 09c8 8EBD      		out 78-0x20,r24
 2141               	.L530:
 2142 09ca 0DB4      		in __tmp_reg__,77-0x20
 2143 09cc 07FE      		sbrs __tmp_reg__,7
 2144 09ce 00C0      		rjmp .L530
 2145 09d0 409A      		sbi 40-0x20,0
 2146               	.L528:
 2148               	.LM177:
 2149 09d2 F801      		movw r30,r16
 2150 09d4 4281      		ldd r20,Z+2
 2151 09d6 642F      		mov r22,r20
 2152 09d8 7727      		clr r23
 2153 09da 67FD      		sbrc r22,7
 2154 09dc 7095      		com r23
 2155 09de A0E0      		ldi r26,lo8(0)
 2156 09e0 20E0      		ldi r18,lo8(0)
 2157 09e2 30E0      		ldi r19,hi8(0)
 2158 09e4 00C0      		rjmp .L532
 2159               	.L533:
 2161               	.LM178:
 2162 09e6 F801      		movw r30,r16
 2163 09e8 8381      		ldd r24,Z+3
 2164 09ea 9481      		ldd r25,Z+4
 2165 09ec E80E      		add r14,r24
 2166 09ee F91E      		adc r15,r25
 2167 09f0 F701      		movw r30,r14
 2168 09f2 8081      		ld r24,Z
 2169 09f4 A80F      		add r26,r24
 2170               	.L532:
 2171 09f6 822F      		mov r24,r18
 2172 09f8 2F5F      		subi r18,lo8(-(1))
 2173 09fa 3F4F      		sbci r19,hi8(-(1))
 2175               	.LM179:
 2176 09fc E82E      		mov r14,r24
 2177 09fe FF24      		clr r15
 2178 0a00 E616      		cp r14,r22
 2179 0a02 F706      		cpc r15,r23
 2180 0a04 04F0      		brlt .L533
 2182               	.LM180:
 2183 0a06 942F      		mov r25,r20
 2184 0a08 945F      		subi r25,lo8(-(12))
 2186               	.LM181:
 2187 0a0a 5111      		cpse r21,__zero_reg__
 2188 0a0c 9C5F      		subi r25,lo8(-(4))
 2189               	.L723:
 2191               	.LM182:
 2192 0a0e 6799      		sbic 44-0x20,7
 2193 0a10 00C0      		rjmp .L723
 2194 0a12 4E99      		sbic 41-0x20,6
 2195 0a14 00C0      		rjmp .L723
 2197               	.LM183:
 2198               	/* #APP */
 2199 0a16 F894      		cli
 2200               		
 2202               	.LM184:
 2203               	/* #NOAPP */
 2204 0a18 4098      		cbi 40-0x20,0
 2205 0a1a 89E0      		ldi r24,lo8(9)
 2206 0a1c 8EBD      		out 78-0x20,r24
 2207               	.L539:
 2208 0a1e 0DB4      		in __tmp_reg__,77-0x20
 2209 0a20 07FE      		sbrs __tmp_reg__,7
 2210 0a22 00C0      		rjmp .L539
 2211 0a24 409A      		sbi 40-0x20,0
 2213               	.LM185:
 2214 0a26 4098      		cbi 40-0x20,0
 2215 0a28 89E0      		ldi r24,lo8(9)
 2216 0a2a 8EBD      		out 78-0x20,r24
 2217               	.L541:
 2218 0a2c 0DB4      		in __tmp_reg__,77-0x20
 2219 0a2e 07FE      		sbrs __tmp_reg__,7
 2220 0a30 00C0      		rjmp .L541
 2221 0a32 409A      		sbi 40-0x20,0
 2223               	.LM186:
 2224 0a34 4098      		cbi 40-0x20,0
 2225 0a36 8EE3      		ldi r24,lo8(62)
 2226 0a38 8EBD      		out 78-0x20,r24
 2227               	.L543:
 2228 0a3a 0DB4      		in __tmp_reg__,77-0x20
 2229 0a3c 07FC      		sbrc __tmp_reg__,7
 2230 0a3e 00C0      		rjmp .L685
 2231 0a40 00C0      		rjmp .L543
 2232               	.L545:
 2233               	.LBB13:
 2234 0a42 0DB4      		in __tmp_reg__,77-0x20
 2235 0a44 07FC      		sbrc __tmp_reg__,7
 2236 0a46 00C0      		rjmp .L686
 2237 0a48 00C0      		rjmp .L545
 2238               	.L685:
 2239 0a4a 9EBD      		out 78-0x20,r25
 2240 0a4c 00C0      		rjmp .L545
 2241               	.L547:
 2242               	.LBE13:
 2244               	.LM187:
 2245 0a4e 81E6      		ldi r24,lo8(-30623)
 2246 0a50 98E8      		ldi r25,hi8(-30623)
 2247 0a52 9A83      		std Y+2,r25
 2248 0a54 8983      		std Y+1,r24
 2249               	.L548:
 2251               	.LM188:
 2252 0a56 5523      		tst r21
 2253 0a58 01F0      		breq .L549
 2254 0a5a 8981      		ldd r24,Y+1
 2255 0a5c 9A81      		ldd r25,Y+2
 2256 0a5e 8860      		ori r24,lo8(8)
 2257 0a60 9A83      		std Y+2,r25
 2258 0a62 8983      		std Y+1,r24
 2259               	.L549:
 2261               	.LM189:
 2262 0a64 4098      		cbi 40-0x20,0
 2263 0a66 8EE3      		ldi r24,lo8(62)
 2264 0a68 8EBD      		out 78-0x20,r24
 2265               	.L551:
 2266 0a6a 0DB4      		in __tmp_reg__,77-0x20
 2267 0a6c 07FE      		sbrs __tmp_reg__,7
 2268 0a6e 00C0      		rjmp .L551
 2269 0a70 FE01      		movw r30,r28
 2270 0a72 3196      		adiw r30,1
 2271               	.LBB14:
 2272 0a74 9E01      		movw r18,r28
 2273 0a76 2D5F      		subi r18,lo8(-(3))
 2274 0a78 3F4F      		sbci r19,hi8(-(3))
 2275               	.L553:
 2276 0a7a 8081      		ld r24,Z
 2277 0a7c 8EBD      		out 78-0x20,r24
 2278               	.L554:
 2279 0a7e 0DB4      		in __tmp_reg__,77-0x20
 2280 0a80 07FE      		sbrs __tmp_reg__,7
 2281 0a82 00C0      		rjmp .L554
 2282 0a84 3196      		adiw r30,1
 2283 0a86 E217      		cp r30,r18
 2284 0a88 F307      		cpc r31,r19
 2285 0a8a 01F4      		brne .L553
 2286               	.LBE14:
 2287 0a8c 409A      		sbi 40-0x20,0
 2289               	.LM190:
 2290 0a8e 4098      		cbi 40-0x20,0
 2291 0a90 8EE3      		ldi r24,lo8(62)
 2292 0a92 8EBD      		out 78-0x20,r24
 2293               	.L557:
 2294 0a94 0DB4      		in __tmp_reg__,77-0x20
 2295 0a96 07FC      		sbrc __tmp_reg__,7
 2296 0a98 00C0      		rjmp .L690
 2297 0a9a 00C0      		rjmp .L557
 2298               	.L559:
 2299               	.LBB15:
 2300 0a9c 0DB4      		in __tmp_reg__,77-0x20
 2301 0a9e 07FC      		sbrc __tmp_reg__,7
 2302 0aa0 00C0      		rjmp .L691
 2303 0aa2 00C0      		rjmp .L559
 2304               	.L690:
 2305 0aa4 8091 0000 		lds r24,rfSettings+2
 2306 0aa8 8EBD      		out 78-0x20,r24
 2307 0aaa 00C0      		rjmp .L559
 2308               	.L561:
 2309               	.LBE15:
 2311               	.LM191:
 2312 0aac 0DB4      		in __tmp_reg__,77-0x20
 2313 0aae 07FE      		sbrs __tmp_reg__,7
 2314 0ab0 00C0      		rjmp .L561
 2315 0ab2 20E0      		ldi r18,lo8(0)
 2316 0ab4 30E0      		ldi r19,hi8(0)
 2317               	.L563:
 2318               	.LBB16:
 2319 0ab6 F901      		movw r30,r18
 2320 0ab8 E050      		subi r30,lo8(-(rfSettings+4))
 2321 0aba F040      		sbci r31,hi8(-(rfSettings+4))
 2322 0abc 8081      		ld r24,Z
 2323 0abe 8EBD      		out 78-0x20,r24
 2324               	.L564:
 2325 0ac0 0DB4      		in __tmp_reg__,77-0x20
 2326 0ac2 07FE      		sbrs __tmp_reg__,7
 2327 0ac4 00C0      		rjmp .L564
 2328 0ac6 2F5F      		subi r18,lo8(-(1))
 2329 0ac8 3F4F      		sbci r19,hi8(-(1))
 2330 0aca 2230      		cpi r18,2
 2331 0acc 3105      		cpc r19,__zero_reg__
 2332 0ace 01F4      		brne .L563
 2333               	.LBE16:
 2334 0ad0 409A      		sbi 40-0x20,0
 2336               	.LM192:
 2337 0ad2 4098      		cbi 40-0x20,0
 2338 0ad4 8EE3      		ldi r24,lo8(62)
 2339 0ad6 8EBD      		out 78-0x20,r24
 2340               	.L567:
 2341 0ad8 0DB4      		in __tmp_reg__,77-0x20
 2342 0ada 07FE      		sbrs __tmp_reg__,7
 2343 0adc 00C0      		rjmp .L567
 2344 0ade 20E0      		ldi r18,lo8(0)
 2345 0ae0 30E0      		ldi r19,hi8(0)
 2346               	.L569:
 2347               	.LBB17:
 2348 0ae2 F801      		movw r30,r16
 2349 0ae4 E20F      		add r30,r18
 2350 0ae6 F31F      		adc r31,r19
 2351 0ae8 8081      		ld r24,Z
 2352 0aea 8EBD      		out 78-0x20,r24
 2353               	.L570:
 2354 0aec 0DB4      		in __tmp_reg__,77-0x20
 2355 0aee 07FE      		sbrs __tmp_reg__,7
 2356 0af0 00C0      		rjmp .L570
 2357 0af2 2F5F      		subi r18,lo8(-(1))
 2358 0af4 3F4F      		sbci r19,hi8(-(1))
 2359 0af6 2230      		cpi r18,2
 2360 0af8 3105      		cpc r19,__zero_reg__
 2361 0afa 01F4      		brne .L569
 2362               	.LBE17:
 2363 0afc 409A      		sbi 40-0x20,0
 2365               	.LM193:
 2366 0afe 4098      		cbi 40-0x20,0
 2367 0b00 8EE3      		ldi r24,lo8(62)
 2368 0b02 8EBD      		out 78-0x20,r24
 2369               	.L573:
 2370 0b04 0DB4      		in __tmp_reg__,77-0x20
 2371 0b06 07FE      		sbrs __tmp_reg__,7
 2372 0b08 00C0      		rjmp .L573
 2373 0b0a 20E0      		ldi r18,lo8(0)
 2374 0b0c 30E0      		ldi r19,hi8(0)
 2375               	.L575:
 2376               	.LBB18:
 2377 0b0e F901      		movw r30,r18
 2378 0b10 E050      		subi r30,lo8(-(rfSettings+6))
 2379 0b12 F040      		sbci r31,hi8(-(rfSettings+6))
 2380 0b14 8081      		ld r24,Z
 2381 0b16 8EBD      		out 78-0x20,r24
 2382               	.L576:
 2383 0b18 0DB4      		in __tmp_reg__,77-0x20
 2384 0b1a 07FE      		sbrs __tmp_reg__,7
 2385 0b1c 00C0      		rjmp .L576
 2386 0b1e 2F5F      		subi r18,lo8(-(1))
 2387 0b20 3F4F      		sbci r19,hi8(-(1))
 2388 0b22 2230      		cpi r18,2
 2389 0b24 3105      		cpc r19,__zero_reg__
 2390 0b26 01F4      		brne .L575
 2391               	.LBE18:
 2392 0b28 409A      		sbi 40-0x20,0
 2394               	.LM194:
 2395 0b2a 5523      		tst r21
 2396 0b2c 01F0      		breq .L579
 2398               	.LM195:
 2399 0b2e 4098      		cbi 40-0x20,0
 2400 0b30 8EE3      		ldi r24,lo8(62)
 2401 0b32 8EBD      		out 78-0x20,r24
 2402               	.L581:
 2403 0b34 0DB4      		in __tmp_reg__,77-0x20
 2404 0b36 07FE      		sbrs __tmp_reg__,7
 2405 0b38 00C0      		rjmp .L581
 2406 0b3a E0E0      		ldi r30,lo8(tx_ctr)
 2407 0b3c F0E0      		ldi r31,hi8(tx_ctr)
 2408               	.L583:
 2409               	.LBB19:
 2410 0b3e 8081      		ld r24,Z
 2411 0b40 8EBD      		out 78-0x20,r24
 2412               	.L584:
 2413 0b42 0DB4      		in __tmp_reg__,77-0x20
 2414 0b44 07FE      		sbrs __tmp_reg__,7
 2415 0b46 00C0      		rjmp .L584
 2416 0b48 3196      		adiw r30,1
 2417 0b4a 80E0      		ldi r24,hi8(tx_ctr+4)
 2418 0b4c E030      		cpi r30,lo8(tx_ctr+4)
 2419 0b4e F807      		cpc r31,r24
 2420 0b50 01F4      		brne .L583
 2421               	.LBE19:
 2422 0b52 409A      		sbi 40-0x20,0
 2423               	.L579:
 2425               	.LM196:
 2426 0b54 4098      		cbi 40-0x20,0
 2427 0b56 8EE3      		ldi r24,lo8(62)
 2428 0b58 8EBD      		out 78-0x20,r24
 2429               	.L587:
 2430 0b5a 0DB4      		in __tmp_reg__,77-0x20
 2431 0b5c 07FE      		sbrs __tmp_reg__,7
 2432 0b5e 00C0      		rjmp .L587
 2433 0b60 20E0      		ldi r18,lo8(0)
 2434 0b62 30E0      		ldi r19,hi8(0)
 2435 0b64 00C0      		rjmp .L589
 2436               	.L590:
 2437               	.LBB20:
 2438 0b66 F801      		movw r30,r16
 2439 0b68 8381      		ldd r24,Z+3
 2440 0b6a 9481      		ldd r25,Z+4
 2441 0b6c 480F      		add r20,r24
 2442 0b6e 591F      		adc r21,r25
 2443 0b70 FA01      		movw r30,r20
 2444 0b72 8081      		ld r24,Z
 2445 0b74 8EBD      		out 78-0x20,r24
 2446               	.L591:
 2447 0b76 0DB4      		in __tmp_reg__,77-0x20
 2448 0b78 07FE      		sbrs __tmp_reg__,7
 2449 0b7a 00C0      		rjmp .L591
 2450 0b7c 2F5F      		subi r18,lo8(-(1))
 2451 0b7e 3F4F      		sbci r19,hi8(-(1))
 2452               	.L589:
 2453 0b80 422F      		mov r20,r18
 2454 0b82 5527      		clr r21
 2455 0b84 4617      		cp r20,r22
 2456 0b86 5707      		cpc r21,r23
 2457 0b88 04F0      		brlt .L590
 2458               	.LBE20:
 2459 0b8a 409A      		sbi 40-0x20,0
 2461               	.LM197:
 2462 0b8c 4098      		cbi 40-0x20,0
 2463 0b8e 8EE3      		ldi r24,lo8(62)
 2464 0b90 8EBD      		out 78-0x20,r24
 2465               	.L594:
 2466 0b92 0DB4      		in __tmp_reg__,77-0x20
 2467 0b94 07FC      		sbrc __tmp_reg__,7
 2468 0b96 00C0      		rjmp .L706
 2469 0b98 00C0      		rjmp .L594
 2470               	.L596:
 2471               	.LBB21:
 2472 0b9a 0DB4      		in __tmp_reg__,77-0x20
 2473 0b9c 07FC      		sbrc __tmp_reg__,7
 2474 0b9e 00C0      		rjmp .L707
 2475 0ba0 00C0      		rjmp .L596
 2476               	.L706:
 2477 0ba2 AEBD      		out 78-0x20,r26
 2478 0ba4 00C0      		rjmp .L596
 2479               	.L598:
 2480               	.LBE21:
 2481               	.LBB22:
 2483               	.LM198:
 2484 0ba6 8091 0000 		lds r24,rfSettings+8
 2485 0baa 8823      		tst r24
 2486 0bac 01F4      		brne .L639
 2488               	.LM199:
 2489 0bae 4098      		cbi 40-0x20,0
 2490 0bb0 83E0      		ldi r24,lo8(3)
 2491 0bb2 8EBD      		out 78-0x20,r24
 2492               	.L601:
 2493 0bb4 0DB4      		in __tmp_reg__,77-0x20
 2494 0bb6 07FE      		sbrs __tmp_reg__,7
 2495 0bb8 00C0      		rjmp .L601
 2496 0bba 409A      		sbi 40-0x20,0
 2497               	.L639:
 2499               	.LM200:
 2500 0bbc 4098      		cbi 40-0x20,0
 2501 0bbe 1EBC      		out 78-0x20,__zero_reg__
 2502               	.L603:
 2503 0bc0 0DB4      		in __tmp_reg__,77-0x20
 2504 0bc2 07FE      		sbrs __tmp_reg__,7
 2505 0bc4 00C0      		rjmp .L603
 2506 0bc6 8EB5      		in r24,78-0x20
 2507 0bc8 409A      		sbi 40-0x20,0
 2509               	.LM201:
 2510 0bca 81FF      		sbrs r24,1
 2511 0bcc 00C0      		rjmp .L639
 2512 0bce 00E0      		ldi r16,lo8(0)
 2513               	.L606:
 2515               	.LM202:
 2516 0bd0 4098      		cbi 40-0x20,0
 2517 0bd2 85E0      		ldi r24,lo8(5)
 2518 0bd4 8EBD      		out 78-0x20,r24
 2519               	.L607:
 2520 0bd6 0DB4      		in __tmp_reg__,77-0x20
 2521 0bd8 07FE      		sbrs __tmp_reg__,7
 2522 0bda 00C0      		rjmp .L607
 2523 0bdc 409A      		sbi 40-0x20,0
 2525               	.LM203:
 2526 0bde 4098      		cbi 40-0x20,0
 2527 0be0 1EBC      		out 78-0x20,__zero_reg__
 2528               	.L609:
 2529 0be2 0DB4      		in __tmp_reg__,77-0x20
 2530 0be4 07FE      		sbrs __tmp_reg__,7
 2531 0be6 00C0      		rjmp .L609
 2532 0be8 1EB5      		in r17,78-0x20
 2533 0bea 409A      		sbi 40-0x20,0
 2535               	.LM204:
 2536 0bec 0F5F      		subi r16,lo8(-(1))
 2538               	.LM205:
 2539 0bee 0536      		cpi r16,lo8(101)
 2540 0bf0 01F4      		brne .L611
 2542               	.LM206:
 2543               	/* #APP */
 2544 0bf2 7894      		sei
 2545               		
 2547               	.LM207:
 2548               	/* #NOAPP */
 2549 0bf4 8091 0000 		lds r24,radio_sem
 2550 0bf8 9091 0000 		lds r25,(radio_sem)+1
 2551 0bfc 0E94 0000 		call nrk_sem_post
 2552 0c00 80E0      		ldi r24,lo8(0)
 2553 0c02 90E0      		ldi r25,hi8(0)
 2554 0c04 00C0      		rjmp .L613
 2555               	.L611:
 2557               	.LM208:
 2558 0c06 84E6      		ldi r24,lo8(100)
 2559 0c08 90E0      		ldi r25,hi8(100)
 2560 0c0a 0E94 0000 		call halWait
 2562               	.LM209:
 2563 0c0e 13FD      		sbrc r17,3
 2564 0c10 00C0      		rjmp .L614
 2565 0c12 00C0      		rjmp .L606
 2566               	.L720:
 2567               	.LBE22:
 2569               	.LM210:
 2570 0c14 4098      		cbi 40-0x20,0
 2571 0c16 84E0      		ldi r24,lo8(4)
 2572 0c18 8EBD      		out 78-0x20,r24
 2573               	.L616:
 2574 0c1a 0DB4      		in __tmp_reg__,77-0x20
 2575 0c1c 07FE      		sbrs __tmp_reg__,7
 2576 0c1e 00C0      		rjmp .L616
 2577 0c20 409A      		sbi 40-0x20,0
 2578               	.L614:
 2580               	.LM211:
 2581               	/* #APP */
 2582 0c22 7894      		sei
 2583               		
 2584               	/* #NOAPP */
 2585               	.L618:
 2587               	.LM212:
 2588 0c24 4E9B      		sbis 41-0x20,6
 2589 0c26 00C0      		rjmp .L618
 2590               	.L640:
 2592               	.LM213:
 2593 0c28 4E99      		sbic 41-0x20,6
 2594 0c2a 00C0      		rjmp .L640
 2596               	.LM214:
 2597 0c2c 8091 0000 		lds r24,auto_ack_enable
 2598 0c30 8823      		tst r24
 2599 0c32 01F0      		breq .L722
 2601               	.LM215:
 2602 0c34 84EA      		ldi r24,lo8(676)
 2603 0c36 92E0      		ldi r25,hi8(676)
 2604 0c38 0E94 0000 		call halWait
 2606               	.LM216:
 2607 0c3c 319B      		sbis 38-0x20,1
 2608 0c3e 00C0      		rjmp .L624
 2610               	.LM217:
 2611 0c40 4098      		cbi 40-0x20,0
 2612 0c42 8FE7      		ldi r24,lo8(127)
 2613 0c44 8EBD      		out 78-0x20,r24
 2614               	.L626:
 2615 0c46 0DB4      		in __tmp_reg__,77-0x20
 2616 0c48 07FE      		sbrs __tmp_reg__,7
 2617 0c4a 00C0      		rjmp .L626
 2618 0c4c 1EBC      		out 78-0x20,__zero_reg__
 2619               	.L628:
 2620 0c4e 0DB4      		in __tmp_reg__,77-0x20
 2621 0c50 07FE      		sbrs __tmp_reg__,7
 2622 0c52 00C0      		rjmp .L628
 2623 0c54 8EB5      		in r24,78-0x20
 2624 0c56 409A      		sbi 40-0x20,0
 2625               	.L722:
 2626 0c58 11E0      		ldi r17,lo8(1)
 2627 0c5a 00C0      		rjmp .L623
 2628               	.L624:
 2630               	.LM218:
 2631 0c5c 4098      		cbi 40-0x20,0
 2632 0c5e 88E0      		ldi r24,lo8(8)
 2633 0c60 8EBD      		out 78-0x20,r24
 2634               	.L630:
 2635 0c62 0DB4      		in __tmp_reg__,77-0x20
 2636 0c64 07FE      		sbrs __tmp_reg__,7
 2637 0c66 00C0      		rjmp .L630
 2638 0c68 409A      		sbi 40-0x20,0
 2640               	.LM219:
 2641 0c6a 4098      		cbi 40-0x20,0
 2642 0c6c 88E0      		ldi r24,lo8(8)
 2643 0c6e 8EBD      		out 78-0x20,r24
 2644               	.L632:
 2645 0c70 0DB4      		in __tmp_reg__,77-0x20
 2646 0c72 07FE      		sbrs __tmp_reg__,7
 2647 0c74 00C0      		rjmp .L632
 2648 0c76 409A      		sbi 40-0x20,0
 2649 0c78 10E0      		ldi r17,lo8(0)
 2650               	.L623:
 2652               	.LM220:
 2653               	/* #APP */
 2654 0c7a F894      		cli
 2655               		
 2657               	.LM221:
 2658               	/* #NOAPP */
 2659 0c7c 4098      		cbi 40-0x20,0
 2660 0c7e 86E0      		ldi r24,lo8(6)
 2661 0c80 8EBD      		out 78-0x20,r24
 2662               	.L634:
 2663 0c82 0DB4      		in __tmp_reg__,77-0x20
 2664 0c84 07FE      		sbrs __tmp_reg__,7
 2665 0c86 00C0      		rjmp .L634
 2666 0c88 409A      		sbi 40-0x20,0
 2668               	.LM222:
 2669               	/* #APP */
 2670 0c8a 7894      		sei
 2671               		
 2673               	.LM223:
 2674               	/* #NOAPP */
 2675 0c8c 8091 0000 		lds r24,rfSettings+2
 2676 0c90 8F5F      		subi r24,lo8(-(1))
 2677 0c92 8093 0000 		sts rfSettings+2,r24
 2679               	.LM224:
 2680 0c96 8091 0000 		lds r24,radio_sem
 2681 0c9a 9091 0000 		lds r25,(radio_sem)+1
 2682 0c9e 0E94 0000 		call nrk_sem_post
 2684               	.LM225:
 2685 0ca2 812F      		mov r24,r17
 2686 0ca4 9927      		clr r25
 2687 0ca6 00C0      		rjmp .L613
 2688               	.L686:
 2690               	.LM226:
 2691 0ca8 409A      		sbi 40-0x20,0
 2693               	.LM227:
 2694 0caa 81E4      		ldi r24,lo8(-30655)
 2695 0cac 98E8      		ldi r25,hi8(-30655)
 2696 0cae 9A83      		std Y+2,r25
 2697 0cb0 8983      		std Y+1,r24
 2699               	.LM228:
 2700 0cb2 8091 0000 		lds r24,auto_ack_enable
 2701 0cb6 8823      		tst r24
 2702 0cb8 01F0      		breq .+2
 2703 0cba 00C0      		rjmp .L547
 2704 0cbc 00C0      		rjmp .L548
 2705               	.L691:
 2707               	.LM229:
 2708 0cbe 409A      		sbi 40-0x20,0
 2710               	.LM230:
 2711 0cc0 4098      		cbi 40-0x20,0
 2712 0cc2 8EE3      		ldi r24,lo8(62)
 2713 0cc4 8EBD      		out 78-0x20,r24
 2714 0cc6 00C0      		rjmp .L561
 2715               	.L707:
 2717               	.LM231:
 2718 0cc8 409A      		sbi 40-0x20,0
 2720               	.LM232:
 2721 0cca F801      		movw r30,r16
 2722 0ccc 8581      		ldd r24,Z+5
 2723 0cce 8823      		tst r24
 2724 0cd0 01F0      		breq .+2
 2725 0cd2 00C0      		rjmp .L598
 2726 0cd4 00C0      		rjmp .L720
 2727               	.L613:
 2728               	/* epilogue: frame size=2 */
 2729 0cd6 2296      		adiw r28,2
 2730 0cd8 0FB6      		in __tmp_reg__,__SREG__
 2731 0cda F894      		cli
 2732 0cdc DEBF      		out __SP_H__,r29
 2733 0cde 0FBE      		out __SREG__,__tmp_reg__
 2734 0ce0 CDBF      		out __SP_L__,r28
 2735 0ce2 DF91      		pop r29
 2736 0ce4 CF91      		pop r28
 2737 0ce6 1F91      		pop r17
 2738 0ce8 0F91      		pop r16
 2739 0cea FF90      		pop r15
 2740 0cec EF90      		pop r14
 2741 0cee 0895      		ret
 2742               	/* epilogue end (size=13) */
 2743               	/* function rf_tx_packet size 447 (420) */
 2757               	.Lscope25:
 2759               		.stabd	78,0,0
 2764               	.global	rf_tx_tdma_packet
 2766               	rf_tx_tdma_packet:
 2767               		.stabd	46,0,0
 2769               	.LM233:
 2770               	.LFBB26:
 2771               	/* prologue: frame size=2 */
 2772 0cf0 BF92      		push r11
 2773 0cf2 CF92      		push r12
 2774 0cf4 DF92      		push r13
 2775 0cf6 EF92      		push r14
 2776 0cf8 FF92      		push r15
 2777 0cfa 0F93      		push r16
 2778 0cfc 1F93      		push r17
 2779 0cfe CF93      		push r28
 2780 0d00 DF93      		push r29
 2781 0d02 CDB7      		in r28,__SP_L__
 2782 0d04 DEB7      		in r29,__SP_H__
 2783 0d06 2297      		sbiw r28,2
 2784 0d08 0FB6      		in __tmp_reg__,__SREG__
 2785 0d0a F894      		cli
 2786 0d0c DEBF      		out __SP_H__,r29
 2787 0d0e 0FBE      		out __SREG__,__tmp_reg__
 2788 0d10 CDBF      		out __SP_L__,r28
 2789               	/* prologue end (size=17) */
 2790 0d12 8C01      		movw r16,r24
 2791 0d14 6B01      		movw r12,r22
 2792 0d16 7A01      		movw r14,r20
 2794               	.LM234:
 2795 0d18 8091 0000 		lds r24,radio_sem
 2796 0d1c 9091 0000 		lds r25,(radio_sem)+1
 2797 0d20 0E94 0000 		call nrk_sem_pend
 2799               	.LM235:
 2800 0d24 0E94 0000 		call _nrk_os_timer_get
 2802               	.LM236:
 2803 0d28 4098      		cbi 40-0x20,0
 2804 0d2a 88E0      		ldi r24,lo8(8)
 2805 0d2c 8EBD      		out 78-0x20,r24
 2806               	.L725:
 2808               	.LM237:
 2809 0d2e 0DB4      		in __tmp_reg__,77-0x20
 2810 0d30 07FE      		sbrs __tmp_reg__,7
 2811 0d32 00C0      		rjmp .L725
 2812 0d34 409A      		sbi 40-0x20,0
 2814               	.LM238:
 2815 0d36 4098      		cbi 40-0x20,0
 2816 0d38 88E0      		ldi r24,lo8(8)
 2817 0d3a 8EBD      		out 78-0x20,r24
 2818               	.L727:
 2819 0d3c 0DB4      		in __tmp_reg__,77-0x20
 2820 0d3e 07FE      		sbrs __tmp_reg__,7
 2821 0d40 00C0      		rjmp .L727
 2822 0d42 409A      		sbi 40-0x20,0
 2823               	.L899:
 2825               	.LM239:
 2826 0d44 6799      		sbic 44-0x20,7
 2827 0d46 00C0      		rjmp .L899
 2828 0d48 4E99      		sbic 41-0x20,6
 2829 0d4a 00C0      		rjmp .L899
 2831               	.LM240:
 2832               	/* #APP */
 2833 0d4c F894      		cli
 2834               		
 2836               	.LM241:
 2837               	/* #NOAPP */
 2838 0d4e 4098      		cbi 40-0x20,0
 2839 0d50 89E0      		ldi r24,lo8(9)
 2840 0d52 8EBD      		out 78-0x20,r24
 2841               	.L732:
 2842 0d54 0DB4      		in __tmp_reg__,77-0x20
 2843 0d56 07FE      		sbrs __tmp_reg__,7
 2844 0d58 00C0      		rjmp .L732
 2845 0d5a 409A      		sbi 40-0x20,0
 2847               	.LM242:
 2848 0d5c 4098      		cbi 40-0x20,0
 2849 0d5e 89E0      		ldi r24,lo8(9)
 2850 0d60 8EBD      		out 78-0x20,r24
 2851               	.L734:
 2852 0d62 0DB4      		in __tmp_reg__,77-0x20
 2853 0d64 07FE      		sbrs __tmp_reg__,7
 2854 0d66 00C0      		rjmp .L734
 2855 0d68 409A      		sbi 40-0x20,0
 2857               	.LM243:
 2858 0d6a F801      		movw r30,r16
 2859 0d6c 6281      		ldd r22,Z+2
 2860 0d6e 462F      		mov r20,r22
 2861 0d70 5527      		clr r21
 2862 0d72 47FD      		sbrc r20,7
 2863 0d74 5095      		com r21
 2864 0d76 BB24      		clr r11
 2865 0d78 20E0      		ldi r18,lo8(0)
 2866 0d7a 30E0      		ldi r19,hi8(0)
 2867 0d7c 00C0      		rjmp .L736
 2868               	.L737:
 2870               	.LM244:
 2871 0d7e F801      		movw r30,r16
 2872 0d80 8381      		ldd r24,Z+3
 2873 0d82 9481      		ldd r25,Z+4
 2874 0d84 A80F      		add r26,r24
 2875 0d86 B91F      		adc r27,r25
 2876 0d88 8C91      		ld r24,X
 2877 0d8a B80E      		add r11,r24
 2878               	.L736:
 2879 0d8c 822F      		mov r24,r18
 2880 0d8e 2F5F      		subi r18,lo8(-(1))
 2881 0d90 3F4F      		sbci r19,hi8(-(1))
 2883               	.LM245:
 2884 0d92 A82F      		mov r26,r24
 2885 0d94 BB27      		clr r27
 2886 0d96 A417      		cp r26,r20
 2887 0d98 B507      		cpc r27,r21
 2888 0d9a 04F0      		brlt .L737
 2890               	.LM246:
 2891 0d9c 962F      		mov r25,r22
 2892 0d9e 945F      		subi r25,lo8(-(12))
 2894               	.LM247:
 2895 0da0 4098      		cbi 40-0x20,0
 2896 0da2 8EE3      		ldi r24,lo8(62)
 2897 0da4 8EBD      		out 78-0x20,r24
 2898               	.L739:
 2899 0da6 0DB4      		in __tmp_reg__,77-0x20
 2900 0da8 07FC      		sbrc __tmp_reg__,7
 2901 0daa 00C0      		rjmp .L865
 2902 0dac 00C0      		rjmp .L739
 2903               	.L741:
 2904               	.LBB23:
 2905 0dae 0DB4      		in __tmp_reg__,77-0x20
 2906 0db0 07FC      		sbrc __tmp_reg__,7
 2907 0db2 00C0      		rjmp .L866
 2908 0db4 00C0      		rjmp .L741
 2909               	.L865:
 2910 0db6 9EBD      		out 78-0x20,r25
 2911 0db8 00C0      		rjmp .L741
 2912               	.L743:
 2913 0dba 81E6      		ldi r24,lo8(-30623)
 2914 0dbc 98E8      		ldi r25,hi8(-30623)
 2915               	.L744:
 2916               	.LBE23:
 2918               	.LM248:
 2919 0dbe 9A83      		std Y+2,r25
 2920 0dc0 8983      		std Y+1,r24
 2922               	.LM249:
 2923 0dc2 4098      		cbi 40-0x20,0
 2924 0dc4 8EE3      		ldi r24,lo8(62)
 2925 0dc6 8EBD      		out 78-0x20,r24
 2926               	.L745:
 2927 0dc8 0DB4      		in __tmp_reg__,77-0x20
 2928 0dca 07FE      		sbrs __tmp_reg__,7
 2929 0dcc 00C0      		rjmp .L745
 2930 0dce FE01      		movw r30,r28
 2931 0dd0 3196      		adiw r30,1
 2932               	.LBB24:
 2933 0dd2 9E01      		movw r18,r28
 2934 0dd4 2D5F      		subi r18,lo8(-(3))
 2935 0dd6 3F4F      		sbci r19,hi8(-(3))
 2936               	.L747:
 2937 0dd8 8081      		ld r24,Z
 2938 0dda 8EBD      		out 78-0x20,r24
 2939               	.L748:
 2940 0ddc 0DB4      		in __tmp_reg__,77-0x20
 2941 0dde 07FE      		sbrs __tmp_reg__,7
 2942 0de0 00C0      		rjmp .L748
 2943 0de2 3196      		adiw r30,1
 2944 0de4 E217      		cp r30,r18
 2945 0de6 F307      		cpc r31,r19
 2946 0de8 01F4      		brne .L747
 2947               	.LBE24:
 2948 0dea 409A      		sbi 40-0x20,0
 2950               	.LM250:
 2951 0dec 4098      		cbi 40-0x20,0
 2952 0dee 8EE3      		ldi r24,lo8(62)
 2953 0df0 8EBD      		out 78-0x20,r24
 2954               	.L751:
 2955 0df2 0DB4      		in __tmp_reg__,77-0x20
 2956 0df4 07FC      		sbrc __tmp_reg__,7
 2957 0df6 00C0      		rjmp .L870
 2958 0df8 00C0      		rjmp .L751
 2959               	.L753:
 2960               	.LBB25:
 2961 0dfa 0DB4      		in __tmp_reg__,77-0x20
 2962 0dfc 07FC      		sbrc __tmp_reg__,7
 2963 0dfe 00C0      		rjmp .L871
 2964 0e00 00C0      		rjmp .L753
 2965               	.L870:
 2966 0e02 8091 0000 		lds r24,rfSettings+2
 2967 0e06 8EBD      		out 78-0x20,r24
 2968 0e08 00C0      		rjmp .L753
 2969               	.L755:
 2970               	.LBE25:
 2972               	.LM251:
 2973 0e0a 0DB4      		in __tmp_reg__,77-0x20
 2974 0e0c 07FE      		sbrs __tmp_reg__,7
 2975 0e0e 00C0      		rjmp .L755
 2976 0e10 20E0      		ldi r18,lo8(0)
 2977 0e12 30E0      		ldi r19,hi8(0)
 2978               	.L757:
 2979               	.LBB26:
 2980 0e14 F901      		movw r30,r18
 2981 0e16 E050      		subi r30,lo8(-(rfSettings+4))
 2982 0e18 F040      		sbci r31,hi8(-(rfSettings+4))
 2983 0e1a 8081      		ld r24,Z
 2984 0e1c 8EBD      		out 78-0x20,r24
 2985               	.L758:
 2986 0e1e 0DB4      		in __tmp_reg__,77-0x20
 2987 0e20 07FE      		sbrs __tmp_reg__,7
 2988 0e22 00C0      		rjmp .L758
 2989 0e24 2F5F      		subi r18,lo8(-(1))
 2990 0e26 3F4F      		sbci r19,hi8(-(1))
 2991 0e28 2230      		cpi r18,2
 2992 0e2a 3105      		cpc r19,__zero_reg__
 2993 0e2c 01F4      		brne .L757
 2994               	.LBE26:
 2995 0e2e 409A      		sbi 40-0x20,0
 2997               	.LM252:
 2998 0e30 4098      		cbi 40-0x20,0
 2999 0e32 8EE3      		ldi r24,lo8(62)
 3000 0e34 8EBD      		out 78-0x20,r24
 3001               	.L761:
 3002 0e36 0DB4      		in __tmp_reg__,77-0x20
 3003 0e38 07FE      		sbrs __tmp_reg__,7
 3004 0e3a 00C0      		rjmp .L761
 3005 0e3c 20E0      		ldi r18,lo8(0)
 3006 0e3e 30E0      		ldi r19,hi8(0)
 3007               	.L763:
 3008               	.LBB27:
 3009 0e40 F801      		movw r30,r16
 3010 0e42 E20F      		add r30,r18
 3011 0e44 F31F      		adc r31,r19
 3012 0e46 8081      		ld r24,Z
 3013 0e48 8EBD      		out 78-0x20,r24
 3014               	.L764:
 3015 0e4a 0DB4      		in __tmp_reg__,77-0x20
 3016 0e4c 07FE      		sbrs __tmp_reg__,7
 3017 0e4e 00C0      		rjmp .L764
 3018 0e50 2F5F      		subi r18,lo8(-(1))
 3019 0e52 3F4F      		sbci r19,hi8(-(1))
 3020 0e54 2230      		cpi r18,2
 3021 0e56 3105      		cpc r19,__zero_reg__
 3022 0e58 01F4      		brne .L763
 3023               	.LBE27:
 3024 0e5a 409A      		sbi 40-0x20,0
 3026               	.LM253:
 3027 0e5c 4098      		cbi 40-0x20,0
 3028 0e5e 8EE3      		ldi r24,lo8(62)
 3029 0e60 8EBD      		out 78-0x20,r24
 3030               	.L767:
 3031 0e62 0DB4      		in __tmp_reg__,77-0x20
 3032 0e64 07FE      		sbrs __tmp_reg__,7
 3033 0e66 00C0      		rjmp .L767
 3034 0e68 20E0      		ldi r18,lo8(0)
 3035 0e6a 30E0      		ldi r19,hi8(0)
 3036               	.L769:
 3037               	.LBB28:
 3038 0e6c F901      		movw r30,r18
 3039 0e6e E050      		subi r30,lo8(-(rfSettings+6))
 3040 0e70 F040      		sbci r31,hi8(-(rfSettings+6))
 3041 0e72 8081      		ld r24,Z
 3042 0e74 8EBD      		out 78-0x20,r24
 3043               	.L770:
 3044 0e76 0DB4      		in __tmp_reg__,77-0x20
 3045 0e78 07FE      		sbrs __tmp_reg__,7
 3046 0e7a 00C0      		rjmp .L770
 3047 0e7c 2F5F      		subi r18,lo8(-(1))
 3048 0e7e 3F4F      		sbci r19,hi8(-(1))
 3049 0e80 2230      		cpi r18,2
 3050 0e82 3105      		cpc r19,__zero_reg__
 3051 0e84 01F4      		brne .L769
 3052               	.LBE28:
 3053 0e86 409A      		sbi 40-0x20,0
 3055               	.LM254:
 3056 0e88 B701      		movw r22,r14
 3057 0e8a C601      		movw r24,r12
 3058 0e8c 0E94 0000 		call nrk_high_speed_timer_wait
 3060               	.LM255:
 3061 0e90 F801      		movw r30,r16
 3062 0e92 8581      		ldd r24,Z+5
 3063 0e94 8823      		tst r24
 3064 0e96 01F0      		breq .L773
 3065               	.LBB29:
 3067               	.LM256:
 3068 0e98 8091 0000 		lds r24,rfSettings+8
 3069 0e9c 8823      		tst r24
 3070 0e9e 01F4      		brne .L821
 3072               	.LM257:
 3073 0ea0 4098      		cbi 40-0x20,0
 3074 0ea2 83E0      		ldi r24,lo8(3)
 3075 0ea4 8EBD      		out 78-0x20,r24
 3076               	.L777:
 3077 0ea6 0DB4      		in __tmp_reg__,77-0x20
 3078 0ea8 07FE      		sbrs __tmp_reg__,7
 3079 0eaa 00C0      		rjmp .L777
 3080 0eac 409A      		sbi 40-0x20,0
 3081               	.L821:
 3083               	.LM258:
 3084 0eae 4098      		cbi 40-0x20,0
 3085 0eb0 1EBC      		out 78-0x20,__zero_reg__
 3086               	.L779:
 3087 0eb2 0DB4      		in __tmp_reg__,77-0x20
 3088 0eb4 07FE      		sbrs __tmp_reg__,7
 3089 0eb6 00C0      		rjmp .L779
 3090 0eb8 8EB5      		in r24,78-0x20
 3091 0eba 409A      		sbi 40-0x20,0
 3093               	.LM259:
 3094 0ebc 81FF      		sbrs r24,1
 3095 0ebe 00C0      		rjmp .L821
 3096 0ec0 EE24      		clr r14
 3097               	.L782:
 3099               	.LM260:
 3100 0ec2 4098      		cbi 40-0x20,0
 3101 0ec4 85E0      		ldi r24,lo8(5)
 3102 0ec6 8EBD      		out 78-0x20,r24
 3103               	.L783:
 3104 0ec8 0DB4      		in __tmp_reg__,77-0x20
 3105 0eca 07FE      		sbrs __tmp_reg__,7
 3106 0ecc 00C0      		rjmp .L783
 3107 0ece 409A      		sbi 40-0x20,0
 3109               	.LM261:
 3110 0ed0 4098      		cbi 40-0x20,0
 3111 0ed2 1EBC      		out 78-0x20,__zero_reg__
 3112               	.L785:
 3113 0ed4 0DB4      		in __tmp_reg__,77-0x20
 3114 0ed6 07FE      		sbrs __tmp_reg__,7
 3115 0ed8 00C0      		rjmp .L785
 3116 0eda FEB4      		in r15,78-0x20
 3117 0edc 409A      		sbi 40-0x20,0
 3119               	.LM262:
 3120 0ede E394      		inc r14
 3122               	.LM263:
 3123 0ee0 F5E6      		ldi r31,lo8(101)
 3124 0ee2 EF16      		cp r14,r31
 3125 0ee4 01F4      		brne .L787
 3127               	.LM264:
 3128               	/* #APP */
 3129 0ee6 7894      		sei
 3130               		
 3132               	.LM265:
 3133               	/* #NOAPP */
 3134 0ee8 8091 0000 		lds r24,radio_sem
 3135 0eec 9091 0000 		lds r25,(radio_sem)+1
 3136 0ef0 0E94 0000 		call nrk_sem_post
 3137 0ef4 80E0      		ldi r24,lo8(0)
 3138 0ef6 90E0      		ldi r25,hi8(0)
 3139 0ef8 00C0      		rjmp .L789
 3140               	.L787:
 3142               	.LM266:
 3143 0efa 84E6      		ldi r24,lo8(100)
 3144 0efc 90E0      		ldi r25,hi8(100)
 3145 0efe 0E94 0000 		call halWait
 3147               	.LM267:
 3148 0f02 F3FC      		sbrc r15,3
 3149 0f04 00C0      		rjmp .L790
 3150 0f06 00C0      		rjmp .L782
 3151               	.L773:
 3152               	.LBE29:
 3154               	.LM268:
 3155 0f08 4098      		cbi 40-0x20,0
 3156 0f0a 84E0      		ldi r24,lo8(4)
 3157 0f0c 8EBD      		out 78-0x20,r24
 3158               	.L791:
 3159 0f0e 0DB4      		in __tmp_reg__,77-0x20
 3160 0f10 07FE      		sbrs __tmp_reg__,7
 3161 0f12 00C0      		rjmp .L791
 3162 0f14 409A      		sbi 40-0x20,0
 3163               	.L790:
 3165               	.LM269:
 3166 0f16 4098      		cbi 40-0x20,0
 3167 0f18 8EE3      		ldi r24,lo8(62)
 3168 0f1a 8EBD      		out 78-0x20,r24
 3169               	.L793:
 3170 0f1c 0DB4      		in __tmp_reg__,77-0x20
 3171 0f1e 07FE      		sbrs __tmp_reg__,7
 3172 0f20 00C0      		rjmp .L793
 3173               	.LBB30:
 3174 0f22 F801      		movw r30,r16
 3175 0f24 8281      		ldd r24,Z+2
 3176 0f26 482F      		mov r20,r24
 3177 0f28 5527      		clr r21
 3178 0f2a 47FD      		sbrc r20,7
 3179 0f2c 5095      		com r21
 3180 0f2e 20E0      		ldi r18,lo8(0)
 3181 0f30 30E0      		ldi r19,hi8(0)
 3182 0f32 00C0      		rjmp .L795
 3183               	.L796:
 3184 0f34 F801      		movw r30,r16
 3185 0f36 8381      		ldd r24,Z+3
 3186 0f38 9481      		ldd r25,Z+4
 3187 0f3a A80F      		add r26,r24
 3188 0f3c B91F      		adc r27,r25
 3189 0f3e 8C91      		ld r24,X
 3190 0f40 8EBD      		out 78-0x20,r24
 3191               	.L797:
 3192 0f42 0DB4      		in __tmp_reg__,77-0x20
 3193 0f44 07FE      		sbrs __tmp_reg__,7
 3194 0f46 00C0      		rjmp .L797
 3195 0f48 2F5F      		subi r18,lo8(-(1))
 3196 0f4a 3F4F      		sbci r19,hi8(-(1))
 3197               	.L795:
 3198 0f4c A22F      		mov r26,r18
 3199 0f4e BB27      		clr r27
 3200 0f50 A417      		cp r26,r20
 3201 0f52 B507      		cpc r27,r21
 3202 0f54 04F0      		brlt .L796
 3203               	.LBE30:
 3204 0f56 409A      		sbi 40-0x20,0
 3206               	.LM270:
 3207 0f58 4098      		cbi 40-0x20,0
 3208 0f5a 8EE3      		ldi r24,lo8(62)
 3209 0f5c 8EBD      		out 78-0x20,r24
 3210               	.L800:
 3211 0f5e 0DB4      		in __tmp_reg__,77-0x20
 3212 0f60 07FC      		sbrc __tmp_reg__,7
 3213 0f62 00C0      		rjmp .L889
 3214 0f64 00C0      		rjmp .L800
 3215               	.L802:
 3216               	.LBB31:
 3217 0f66 0DB4      		in __tmp_reg__,77-0x20
 3218 0f68 07FC      		sbrc __tmp_reg__,7
 3219 0f6a 00C0      		rjmp .L890
 3220 0f6c 00C0      		rjmp .L802
 3221               	.L889:
 3222 0f6e BEBC      		out 78-0x20,r11
 3223 0f70 00C0      		rjmp .L802
 3224               	.L804:
 3225               	.LBE31:
 3227               	.LM271:
 3228 0f72 4E9B      		sbis 41-0x20,6
 3229 0f74 00C0      		rjmp .L804
 3231               	.LM272:
 3232               	/* #APP */
 3233 0f76 F894      		cli
 3234               		
 3235               	/* #NOAPP */
 3236               	.L806:
 3238               	.LM273:
 3239 0f78 4E99      		sbic 41-0x20,6
 3240 0f7a 00C0      		rjmp .L806
 3242               	.LM274:
 3243 0f7c 4098      		cbi 40-0x20,0
 3244 0f7e 88E0      		ldi r24,lo8(8)
 3245 0f80 8EBD      		out 78-0x20,r24
 3246               	.L808:
 3247 0f82 0DB4      		in __tmp_reg__,77-0x20
 3248 0f84 07FE      		sbrs __tmp_reg__,7
 3249 0f86 00C0      		rjmp .L808
 3250 0f88 409A      		sbi 40-0x20,0
 3252               	.LM275:
 3253 0f8a 4098      		cbi 40-0x20,0
 3254 0f8c 88E0      		ldi r24,lo8(8)
 3255 0f8e 8EBD      		out 78-0x20,r24
 3256               	.L810:
 3257 0f90 0DB4      		in __tmp_reg__,77-0x20
 3258 0f92 07FE      		sbrs __tmp_reg__,7
 3259 0f94 00C0      		rjmp .L810
 3260 0f96 409A      		sbi 40-0x20,0
 3262               	.LM276:
 3263 0f98 4098      		cbi 40-0x20,0
 3264 0f9a 89E0      		ldi r24,lo8(9)
 3265 0f9c 8EBD      		out 78-0x20,r24
 3266               	.L812:
 3267 0f9e 0DB4      		in __tmp_reg__,77-0x20
 3268 0fa0 07FE      		sbrs __tmp_reg__,7
 3269 0fa2 00C0      		rjmp .L812
 3270 0fa4 409A      		sbi 40-0x20,0
 3272               	.LM277:
 3273 0fa6 4098      		cbi 40-0x20,0
 3274 0fa8 89E0      		ldi r24,lo8(9)
 3275 0faa 8EBD      		out 78-0x20,r24
 3276               	.L814:
 3277 0fac 0DB4      		in __tmp_reg__,77-0x20
 3278 0fae 07FE      		sbrs __tmp_reg__,7
 3279 0fb0 00C0      		rjmp .L814
 3280 0fb2 409A      		sbi 40-0x20,0
 3282               	.LM278:
 3283 0fb4 4098      		cbi 40-0x20,0
 3284 0fb6 86E0      		ldi r24,lo8(6)
 3285 0fb8 8EBD      		out 78-0x20,r24
 3286               	.L816:
 3287 0fba 0DB4      		in __tmp_reg__,77-0x20
 3288 0fbc 07FE      		sbrs __tmp_reg__,7
 3289 0fbe 00C0      		rjmp .L816
 3290 0fc0 409A      		sbi 40-0x20,0
 3292               	.LM279:
 3293               	/* #APP */
 3294 0fc2 7894      		sei
 3295               		
 3297               	.LM280:
 3298               	/* #NOAPP */
 3299 0fc4 8091 0000 		lds r24,rfSettings+2
 3300 0fc8 8F5F      		subi r24,lo8(-(1))
 3301 0fca 8093 0000 		sts rfSettings+2,r24
 3303               	.LM281:
 3304 0fce 8091 0000 		lds r24,radio_sem
 3305 0fd2 9091 0000 		lds r25,(radio_sem)+1
 3306 0fd6 0E94 0000 		call nrk_sem_post
 3307 0fda 81E0      		ldi r24,lo8(1)
 3308 0fdc 90E0      		ldi r25,hi8(1)
 3309 0fde 00C0      		rjmp .L789
 3310               	.L866:
 3312               	.LM282:
 3313 0fe0 409A      		sbi 40-0x20,0
 3315               	.LM283:
 3316 0fe2 F801      		movw r30,r16
 3317 0fe4 8681      		ldd r24,Z+6
 3318 0fe6 8823      		tst r24
 3319 0fe8 01F0      		breq .+2
 3320 0fea 00C0      		rjmp .L743
 3321 0fec 81E4      		ldi r24,lo8(-30655)
 3322 0fee 98E8      		ldi r25,hi8(-30655)
 3323 0ff0 00C0      		rjmp .L744
 3324               	.L871:
 3326               	.LM284:
 3327 0ff2 409A      		sbi 40-0x20,0
 3329               	.LM285:
 3330 0ff4 4098      		cbi 40-0x20,0
 3331 0ff6 8EE3      		ldi r24,lo8(62)
 3332 0ff8 8EBD      		out 78-0x20,r24
 3333 0ffa 00C0      		rjmp .L755
 3334               	.L890:
 3336               	.LM286:
 3337 0ffc 409A      		sbi 40-0x20,0
 3338 0ffe 00C0      		rjmp .L804
 3339               	.L789:
 3340               	/* epilogue: frame size=2 */
 3341 1000 2296      		adiw r28,2
 3342 1002 0FB6      		in __tmp_reg__,__SREG__
 3343 1004 F894      		cli
 3344 1006 DEBF      		out __SP_H__,r29
 3345 1008 0FBE      		out __SREG__,__tmp_reg__
 3346 100a CDBF      		out __SP_L__,r28
 3347 100c DF91      		pop r29
 3348 100e CF91      		pop r28
 3349 1010 1F91      		pop r17
 3350 1012 0F91      		pop r16
 3351 1014 FF90      		pop r15
 3352 1016 EF90      		pop r14
 3353 1018 DF90      		pop r13
 3354 101a CF90      		pop r12
 3355 101c BF90      		pop r11
 3356 101e 0895      		ret
 3357               	/* epilogue end (size=16) */
 3358               	/* function rf_tx_tdma_packet size 420 (387) */
 3369               	.Lscope26:
 3371               		.stabd	78,0,0
 3374               	.global	rf_addr_decode_set_my_mac
 3376               	rf_addr_decode_set_my_mac:
 3377               		.stabd	46,0,0
 3379               	.LM287:
 3380               	.LFBB27:
 3381               	/* prologue: frame size=2 */
 3382 1020 CF93      		push r28
 3383 1022 DF93      		push r29
 3384 1024 CDB7      		in r28,__SP_L__
 3385 1026 DEB7      		in r29,__SP_H__
 3386 1028 2297      		sbiw r28,2
 3387 102a 0FB6      		in __tmp_reg__,__SREG__
 3388 102c F894      		cli
 3389 102e DEBF      		out __SP_H__,r29
 3390 1030 0FBE      		out __SREG__,__tmp_reg__
 3391 1032 CDBF      		out __SP_L__,r28
 3392               	/* prologue end (size=10) */
 3393 1034 9A83      		std Y+2,r25
 3394 1036 8983      		std Y+1,r24
 3396               	.LM288:
 3397 1038 9093 0000 		sts (rfSettings+6)+1,r25
 3398 103c 8093 0000 		sts rfSettings+6,r24
 3400               	.LM289:
 3401 1040 84EF      		ldi r24,lo8(500)
 3402 1042 91E0      		ldi r25,hi8(500)
 3403 1044 0E94 0000 		call nrk_spin_wait_us
 3405               	.LM290:
 3406 1048 4098      		cbi 40-0x20,0
 3407 104a 8AEE      		ldi r24,lo8(-22)
 3408 104c 8EBD      		out 78-0x20,r24
 3409               	.L901:
 3411               	.LM291:
 3412 104e 0DB4      		in __tmp_reg__,77-0x20
 3413 1050 07FE      		sbrs __tmp_reg__,7
 3414 1052 00C0      		rjmp .L901
 3415 1054 80E8      		ldi r24,lo8(-128)
 3416 1056 8EBD      		out 78-0x20,r24
 3417               	.L903:
 3418 1058 0DB4      		in __tmp_reg__,77-0x20
 3419 105a 07FE      		sbrs __tmp_reg__,7
 3420 105c 00C0      		rjmp .L903
 3421 105e FE01      		movw r30,r28
 3422 1060 3196      		adiw r30,1
 3423 1062 9E01      		movw r18,r28
 3424 1064 2D5F      		subi r18,lo8(-(3))
 3425 1066 3F4F      		sbci r19,hi8(-(3))
 3426               	.L905:
 3427 1068 8081      		ld r24,Z
 3428 106a 8EBD      		out 78-0x20,r24
 3429               	.L906:
 3430 106c 0DB4      		in __tmp_reg__,77-0x20
 3431 106e 07FE      		sbrs __tmp_reg__,7
 3432 1070 00C0      		rjmp .L906
 3433 1072 3196      		adiw r30,1
 3434 1074 E217      		cp r30,r18
 3435 1076 F307      		cpc r31,r19
 3436 1078 01F4      		brne .L905
 3437 107a 409A      		sbi 40-0x20,0
 3439               	.LM292:
 3440 107c 84EF      		ldi r24,lo8(500)
 3441 107e 91E0      		ldi r25,hi8(500)
 3442 1080 0E94 0000 		call nrk_spin_wait_us
 3443               	/* epilogue: frame size=2 */
 3444 1084 2296      		adiw r28,2
 3445 1086 0FB6      		in __tmp_reg__,__SREG__
 3446 1088 F894      		cli
 3447 108a DEBF      		out __SP_H__,r29
 3448 108c 0FBE      		out __SREG__,__tmp_reg__
 3449 108e CDBF      		out __SP_L__,r28
 3450 1090 DF91      		pop r29
 3451 1092 CF91      		pop r28
 3452 1094 0895      		ret
 3453               	/* epilogue end (size=9) */
 3454               	/* function rf_addr_decode_set_my_mac size 59 (40) */
 3456               	.Lscope27:
 3458               		.stabd	78,0,0
 3461               	.global	rf_security_set_key
 3463               	rf_security_set_key:
 3464               		.stabd	46,0,0
 3466               	.LM293:
 3467               	.LFBB28:
 3468               	/* prologue: frame size=2 */
 3469 1096 6F92      		push r6
 3470 1098 7F92      		push r7
 3471 109a 8F92      		push r8
 3472 109c 9F92      		push r9
 3473 109e AF92      		push r10
 3474 10a0 BF92      		push r11
 3475 10a2 CF92      		push r12
 3476 10a4 DF92      		push r13
 3477 10a6 EF92      		push r14
 3478 10a8 FF92      		push r15
 3479 10aa 0F93      		push r16
 3480 10ac 1F93      		push r17
 3481 10ae CF93      		push r28
 3482 10b0 DF93      		push r29
 3483 10b2 CDB7      		in r28,__SP_L__
 3484 10b4 DEB7      		in r29,__SP_H__
 3485 10b6 2297      		sbiw r28,2
 3486 10b8 0FB6      		in __tmp_reg__,__SREG__
 3487 10ba F894      		cli
 3488 10bc DEBF      		out __SP_H__,r29
 3489 10be 0FBE      		out __SREG__,__tmp_reg__
 3490 10c0 CDBF      		out __SP_L__,r28
 3491               	/* prologue end (size=22) */
 3492 10c2 8C01      		movw r16,r24
 3494               	.LM294:
 3495 10c4 84E6      		ldi r24,lo8(100)
 3496 10c6 90E0      		ldi r25,hi8(100)
 3497 10c8 0E94 0000 		call nrk_spin_wait_us
 3498 10cc 7801      		movw r14,r16
 3499 10ce C12C      		mov r12,__zero_reg__
 3500 10d0 B1E0      		ldi r27,hi8(256)
 3501 10d2 DB2E      		mov r13,r27
 3503               	.LM295:
 3504 10d4 3E01      		movw r6,r28
 3505 10d6 0894      		sec
 3506 10d8 611C      		adc r6,__zero_reg__
 3507 10da 711C      		adc r7,__zero_reg__
 3508 10dc A3E0      		ldi r26,lo8(3)
 3509 10de 8A2E      		mov r8,r26
 3510 10e0 912C      		mov r9,__zero_reg__
 3511 10e2 8C0E      		add r8,r28
 3512 10e4 9D1E      		adc r9,r29
 3513               	.L919:
 3515               	.LM296:
 3516 10e6 F701      		movw r30,r14
 3517 10e8 8081      		ld r24,Z
 3518 10ea 2181      		ldd r18,Z+1
 3519 10ec 3327      		clr r19
 3520 10ee 9927      		clr r25
 3521 10f0 982F      		mov r25,r24
 3522 10f2 8827      		clr r24
 3523 10f4 282B      		or r18,r24
 3524 10f6 392B      		or r19,r25
 3525 10f8 3A83      		std Y+2,r19
 3526 10fa 2983      		std Y+1,r18
 3528               	.LM297:
 3529 10fc 84E6      		ldi r24,lo8(100)
 3530 10fe 90E0      		ldi r25,hi8(100)
 3531 1100 0E94 0000 		call nrk_spin_wait_us
 3533               	.LM298:
 3534 1104 4098      		cbi 40-0x20,0
 3535 1106 8C2D      		mov r24,r12
 3536 1108 8068      		ori r24,lo8(-128)
 3537 110a 8EBD      		out 78-0x20,r24
 3538               	.L920:
 3539 110c 0DB4      		in __tmp_reg__,77-0x20
 3540 110e 07FE      		sbrs __tmp_reg__,7
 3541 1110 00C0      		rjmp .L920
 3542 1112 C601      		movw r24,r12
 3543 1114 9595      		asr r25
 3544 1116 8795      		ror r24
 3545 1118 807C      		andi r24,lo8(-64)
 3546 111a 8EBD      		out 78-0x20,r24
 3547               	.L922:
 3548 111c 0DB4      		in __tmp_reg__,77-0x20
 3549 111e 07FE      		sbrs __tmp_reg__,7
 3550 1120 00C0      		rjmp .L922
 3551 1122 8301      		movw r16,r6
 3552 1124 5301      		movw r10,r6
 3553               	.L924:
 3554 1126 F501      		movw r30,r10
 3555 1128 8081      		ld r24,Z
 3556 112a 8EBD      		out 78-0x20,r24
 3557               	.L925:
 3558 112c 0DB4      		in __tmp_reg__,77-0x20
 3559 112e 07FE      		sbrs __tmp_reg__,7
 3560 1130 00C0      		rjmp .L925
 3561 1132 0894      		sec
 3562 1134 A11C      		adc r10,__zero_reg__
 3563 1136 B11C      		adc r11,__zero_reg__
 3564 1138 A814      		cp r10,r8
 3565 113a B904      		cpc r11,r9
 3566 113c 01F4      		brne .L924
 3567 113e 409A      		sbi 40-0x20,0
 3568 1140 0894      		sec
 3569 1142 E11C      		adc r14,__zero_reg__
 3570 1144 F11C      		adc r15,__zero_reg__
 3571 1146 82E0      		ldi r24,lo8(2)
 3572 1148 90E0      		ldi r25,hi8(2)
 3573 114a C80E      		add r12,r24
 3574 114c D91E      		adc r13,r25
 3576               	.LM299:
 3577 114e 90E1      		ldi r25,lo8(272)
 3578 1150 C916      		cp r12,r25
 3579 1152 91E0      		ldi r25,hi8(272)
 3580 1154 D906      		cpc r13,r25
 3581 1156 01F4      		brne .L919
 3583               	.LM300:
 3584 1158 84E6      		ldi r24,lo8(100)
 3585 115a 90E0      		ldi r25,hi8(100)
 3586 115c 0E94 0000 		call nrk_spin_wait_us
 3587 1160 20E1      		ldi r18,lo8(272)
 3588 1162 31E0      		ldi r19,hi8(272)
 3589 1164 40E4      		ldi r20,lo8(320)
 3590 1166 51E0      		ldi r21,hi8(320)
 3591               	.L929:
 3593               	.LM301:
 3594 1168 1A82      		std Y+2,__zero_reg__
 3595 116a 1982      		std Y+1,__zero_reg__
 3597               	.LM302:
 3598 116c 4098      		cbi 40-0x20,0
 3599 116e 842F      		mov r24,r20
 3600 1170 8068      		ori r24,lo8(-128)
 3601 1172 8EBD      		out 78-0x20,r24
 3602               	.L930:
 3603 1174 0DB4      		in __tmp_reg__,77-0x20
 3604 1176 07FE      		sbrs __tmp_reg__,7
 3605 1178 00C0      		rjmp .L930
 3606 117a CA01      		movw r24,r20
 3607 117c 9595      		asr r25
 3608 117e 8795      		ror r24
 3609 1180 807C      		andi r24,lo8(-64)
 3610 1182 8EBD      		out 78-0x20,r24
 3611               	.L932:
 3612 1184 0DB4      		in __tmp_reg__,77-0x20
 3613 1186 07FE      		sbrs __tmp_reg__,7
 3614 1188 00C0      		rjmp .L932
 3615 118a F801      		movw r30,r16
 3616               	.L934:
 3617 118c 8081      		ld r24,Z
 3618 118e 8EBD      		out 78-0x20,r24
 3619               	.L935:
 3620 1190 0DB4      		in __tmp_reg__,77-0x20
 3621 1192 07FE      		sbrs __tmp_reg__,7
 3622 1194 00C0      		rjmp .L935
 3623 1196 3196      		adiw r30,1
 3624 1198 EA15      		cp r30,r10
 3625 119a FB05      		cpc r31,r11
 3626 119c 01F4      		brne .L934
 3627 119e 409A      		sbi 40-0x20,0
 3629               	.LM303:
 3630 11a0 4098      		cbi 40-0x20,0
 3631 11a2 822F      		mov r24,r18
 3632 11a4 8068      		ori r24,lo8(-128)
 3633 11a6 8EBD      		out 78-0x20,r24
 3634               	.L938:
 3635 11a8 0DB4      		in __tmp_reg__,77-0x20
 3636 11aa 07FE      		sbrs __tmp_reg__,7
 3637 11ac 00C0      		rjmp .L938
 3638 11ae C901      		movw r24,r18
 3639 11b0 9595      		asr r25
 3640 11b2 8795      		ror r24
 3641 11b4 807C      		andi r24,lo8(-64)
 3642 11b6 8EBD      		out 78-0x20,r24
 3643               	.L940:
 3644 11b8 0DB4      		in __tmp_reg__,77-0x20
 3645 11ba 07FE      		sbrs __tmp_reg__,7
 3646 11bc 00C0      		rjmp .L940
 3647 11be F801      		movw r30,r16
 3648               	.L942:
 3649 11c0 8081      		ld r24,Z
 3650 11c2 8EBD      		out 78-0x20,r24
 3651               	.L943:
 3652 11c4 0DB4      		in __tmp_reg__,77-0x20
 3653 11c6 07FE      		sbrs __tmp_reg__,7
 3654 11c8 00C0      		rjmp .L943
 3655 11ca 3196      		adiw r30,1
 3656 11cc EA15      		cp r30,r10
 3657 11ce FB05      		cpc r31,r11
 3658 11d0 01F4      		brne .L942
 3659 11d2 409A      		sbi 40-0x20,0
 3660 11d4 2E5F      		subi r18,lo8(-(2))
 3661 11d6 3F4F      		sbci r19,hi8(-(2))
 3662 11d8 4E5F      		subi r20,lo8(-(2))
 3663 11da 5F4F      		sbci r21,hi8(-(2))
 3665               	.LM304:
 3666 11dc E1E0      		ldi r30,hi8(286)
 3667 11de 2E31      		cpi r18,lo8(286)
 3668 11e0 3E07      		cpc r19,r30
 3669 11e2 01F4      		brne .L929
 3671               	.LM305:
 3672 11e4 81E0      		ldi r24,lo8(1)
 3673 11e6 90E0      		ldi r25,hi8(1)
 3674 11e8 9A83      		std Y+2,r25
 3675 11ea 8983      		std Y+1,r24
 3677               	.LM306:
 3678 11ec 4098      		cbi 40-0x20,0
 3679 11ee 8EEC      		ldi r24,lo8(-50)
 3680 11f0 8EBD      		out 78-0x20,r24
 3681               	.L947:
 3682 11f2 0DB4      		in __tmp_reg__,77-0x20
 3683 11f4 07FE      		sbrs __tmp_reg__,7
 3684 11f6 00C0      		rjmp .L947
 3685 11f8 80E8      		ldi r24,lo8(-128)
 3686 11fa 8EBD      		out 78-0x20,r24
 3687               	.L949:
 3688 11fc 0DB4      		in __tmp_reg__,77-0x20
 3689 11fe 07FE      		sbrs __tmp_reg__,7
 3690 1200 00C0      		rjmp .L949
 3691 1202 F801      		movw r30,r16
 3692               	.L951:
 3693 1204 8081      		ld r24,Z
 3694 1206 8EBD      		out 78-0x20,r24
 3695               	.L952:
 3696 1208 0DB4      		in __tmp_reg__,77-0x20
 3697 120a 07FE      		sbrs __tmp_reg__,7
 3698 120c 00C0      		rjmp .L952
 3699 120e 3196      		adiw r30,1
 3700 1210 EA15      		cp r30,r10
 3701 1212 FB05      		cpc r31,r11
 3702 1214 01F4      		brne .L951
 3703 1216 409A      		sbi 40-0x20,0
 3705               	.LM307:
 3706 1218 4098      		cbi 40-0x20,0
 3707 121a 8EE9      		ldi r24,lo8(-98)
 3708 121c 8EBD      		out 78-0x20,r24
 3709               	.L955:
 3710 121e 0DB4      		in __tmp_reg__,77-0x20
 3711 1220 07FE      		sbrs __tmp_reg__,7
 3712 1222 00C0      		rjmp .L955
 3713 1224 80E8      		ldi r24,lo8(-128)
 3714 1226 8EBD      		out 78-0x20,r24
 3715               	.L957:
 3716 1228 0DB4      		in __tmp_reg__,77-0x20
 3717 122a 07FE      		sbrs __tmp_reg__,7
 3718 122c 00C0      		rjmp .L957
 3719               	.L963:
 3720 122e F801      		movw r30,r16
 3721 1230 8081      		ld r24,Z
 3722 1232 8EBD      		out 78-0x20,r24
 3723               	.L959:
 3724 1234 0DB4      		in __tmp_reg__,77-0x20
 3725 1236 07FE      		sbrs __tmp_reg__,7
 3726 1238 00C0      		rjmp .L959
 3727 123a 0F5F      		subi r16,lo8(-(1))
 3728 123c 1F4F      		sbci r17,hi8(-(1))
 3729 123e 0A15      		cp r16,r10
 3730 1240 1B05      		cpc r17,r11
 3731 1242 01F4      		brne .L963
 3732 1244 409A      		sbi 40-0x20,0
 3733               	/* epilogue: frame size=2 */
 3734 1246 2296      		adiw r28,2
 3735 1248 0FB6      		in __tmp_reg__,__SREG__
 3736 124a F894      		cli
 3737 124c DEBF      		out __SP_H__,r29
 3738 124e 0FBE      		out __SREG__,__tmp_reg__
 3739 1250 CDBF      		out __SP_L__,r28
 3740 1252 DF91      		pop r29
 3741 1254 CF91      		pop r28
 3742 1256 1F91      		pop r17
 3743 1258 0F91      		pop r16
 3744 125a FF90      		pop r15
 3745 125c EF90      		pop r14
 3746 125e DF90      		pop r13
 3747 1260 CF90      		pop r12
 3748 1262 BF90      		pop r11
 3749 1264 AF90      		pop r10
 3750 1266 9F90      		pop r9
 3751 1268 8F90      		pop r8
 3752 126a 7F90      		pop r7
 3753 126c 6F90      		pop r6
 3754 126e 0895      		ret
 3755               	/* epilogue end (size=21) */
 3756               	/* function rf_security_set_key size 237 (194) */
 3761               	.Lscope28:
 3763               		.stabd	78,0,0
 3767               	.global	rf_set_rx
 3769               	rf_set_rx:
 3770               		.stabd	46,0,0
 3772               	.LM308:
 3773               	.LFBB29:
 3774               	/* prologue: frame size=0 */
 3775 1270 1F93      		push r17
 3776 1272 CF93      		push r28
 3777 1274 DF93      		push r29
 3778               	/* prologue end (size=3) */
 3779 1276 EC01      		movw r28,r24
 3780 1278 162F      		mov r17,r22
 3782               	.LM309:
 3783 127a 8091 0000 		lds r24,radio_sem
 3784 127e 9091 0000 		lds r25,(radio_sem)+1
 3785 1282 0E94 0000 		call nrk_sem_pend
 3787               	.LM310:
 3788 1286 4098      		cbi 40-0x20,0
 3789 1288 88E0      		ldi r24,lo8(8)
 3790 128a 8EBD      		out 78-0x20,r24
 3791               	.L1008:
 3793               	.LM311:
 3794 128c 0DB4      		in __tmp_reg__,77-0x20
 3795 128e 07FE      		sbrs __tmp_reg__,7
 3796 1290 00C0      		rjmp .L1008
 3797 1292 409A      		sbi 40-0x20,0
 3799               	.LM312:
 3800 1294 4098      		cbi 40-0x20,0
 3801 1296 88E0      		ldi r24,lo8(8)
 3802 1298 8EBD      		out 78-0x20,r24
 3803               	.L1010:
 3804 129a 0DB4      		in __tmp_reg__,77-0x20
 3805 129c 07FE      		sbrs __tmp_reg__,7
 3806 129e 00C0      		rjmp .L1010
 3807 12a0 409A      		sbi 40-0x20,0
 3809               	.LM313:
 3810 12a2 812F      		mov r24,r17
 3811 12a4 0E94 0000 		call halRfSetChannel
 3813               	.LM314:
 3814 12a8 D093 0000 		sts (rfSettings)+1,r29
 3815 12ac C093 0000 		sts rfSettings,r28
 3817               	.LM315:
 3818 12b0 8091 0000 		lds r24,radio_sem
 3819 12b4 9091 0000 		lds r25,(radio_sem)+1
 3820 12b8 0E94 0000 		call nrk_sem_post
 3821               	/* epilogue: frame size=0 */
 3822 12bc DF91      		pop r29
 3823 12be CF91      		pop r28
 3824 12c0 1F91      		pop r17
 3825 12c2 0895      		ret
 3826               	/* epilogue end (size=4) */
 3827               	/* function rf_set_rx size 42 (35) */
 3829               	.Lscope29:
 3831               		.stabd	78,0,0
 3834               	.global	rf_set_channel
 3836               	rf_set_channel:
 3837               		.stabd	46,0,0
 3839               	.LM316:
 3840               	.LFBB30:
 3841               	/* prologue: frame size=0 */
 3842 12c4 1F93      		push r17
 3843               	/* prologue end (size=1) */
 3844 12c6 182F      		mov r17,r24
 3846               	.LM317:
 3847 12c8 8091 0000 		lds r24,radio_sem
 3848 12cc 9091 0000 		lds r25,(radio_sem)+1
 3849 12d0 0E94 0000 		call nrk_sem_pend
 3851               	.LM318:
 3852 12d4 812F      		mov r24,r17
 3853 12d6 0E94 0000 		call halRfSetChannel
 3855               	.LM319:
 3856 12da 8091 0000 		lds r24,radio_sem
 3857 12de 9091 0000 		lds r25,(radio_sem)+1
 3858 12e2 0E94 0000 		call nrk_sem_post
 3859               	/* epilogue: frame size=0 */
 3860 12e6 1F91      		pop r17
 3861 12e8 0895      		ret
 3862               	/* epilogue end (size=2) */
 3863               	/* function rf_set_channel size 19 (16) */
 3865               	.Lscope30:
 3867               		.stabd	78,0,0
 3873               	.global	rf_init
 3875               	rf_init:
 3876               		.stabd	46,0,0
 3878               	.LM320:
 3879               	.LFBB31:
 3880               	/* prologue: frame size=2 */
 3881 12ea DF92      		push r13
 3882 12ec EF92      		push r14
 3883 12ee FF92      		push r15
 3884 12f0 0F93      		push r16
 3885 12f2 1F93      		push r17
 3886 12f4 CF93      		push r28
 3887 12f6 DF93      		push r29
 3888 12f8 CDB7      		in r28,__SP_L__
 3889 12fa DEB7      		in r29,__SP_H__
 3890 12fc 2297      		sbiw r28,2
 3891 12fe 0FB6      		in __tmp_reg__,__SREG__
 3892 1300 F894      		cli
 3893 1302 DEBF      		out __SP_H__,r29
 3894 1304 0FBE      		out __SREG__,__tmp_reg__
 3895 1306 CDBF      		out __SP_L__,r28
 3896               	/* prologue end (size=15) */
 3897 1308 8C01      		movw r16,r24
 3898 130a D62E      		mov r13,r22
 3899 130c 5A83      		std Y+2,r21
 3900 130e 4983      		std Y+1,r20
 3901 1310 7901      		movw r14,r18
 3903               	.LM321:
 3904 1312 6AE0      		ldi r22,lo8(10)
 3905 1314 81E0      		ldi r24,lo8(1)
 3906 1316 0E94 0000 		call nrk_sem_create
 3907 131a 9093 0000 		sts (radio_sem)+1,r25
 3908 131e 8093 0000 		sts radio_sem,r24
 3910               	.LM322:
 3911 1322 892B      		or r24,r25
 3912 1324 01F4      		brne .L1020
 3914               	.LM323:
 3915 1326 0E94 0000 		call nrk_get_pid
 3916 132a 682F      		mov r22,r24
 3917 132c 8FE0      		ldi r24,lo8(15)
 3918 132e 0E94 0000 		call nrk_kernel_error_add
 3919               	.L1020:
 3921               	.LM324:
 3922 1332 8091 0000 		lds r24,radio_sem
 3923 1336 9091 0000 		lds r25,(radio_sem)+1
 3924 133a 0E94 0000 		call nrk_sem_pend
 3926               	.LM325:
 3927 133e 8F3F      		cpi r24,lo8(-1)
 3928 1340 01F4      		brne .L1022
 3930               	.LM326:
 3931 1342 80E0      		ldi r24,lo8(__c.2671)
 3932 1344 90E0      		ldi r25,hi8(__c.2671)
 3933 1346 0E94 0000 		call nrk_kprintf
 3934               	.L1022:
 3936               	.LM327:
 3937 134a 159A      		sbi 34-0x20,5
 3939               	.LM328:
 3940 134c 88EE      		ldi r24,lo8(1000)
 3941 134e 93E0      		ldi r25,hi8(1000)
 3942 1350 0E94 0000 		call halWait
 3944               	.LM329:
 3945 1354 1698      		cbi 34-0x20,6
 3947               	.LM330:
 3948 1356 81E0      		ldi r24,lo8(1)
 3949 1358 90E0      		ldi r25,hi8(1)
 3950 135a 0E94 0000 		call halWait
 3952               	.LM331:
 3953 135e 169A      		sbi 34-0x20,6
 3955               	.LM332:
 3956 1360 84E6      		ldi r24,lo8(100)
 3957 1362 90E0      		ldi r25,hi8(100)
 3958 1364 0E94 0000 		call halWait
 3960               	.LM333:
 3961               	/* #APP */
 3962 1368 F894      		cli
 3963               		
 3965               	.LM334:
 3966               	/* #NOAPP */
 3967 136a 4098      		cbi 40-0x20,0
 3968 136c 81E0      		ldi r24,lo8(1)
 3969 136e 8EBD      		out 78-0x20,r24
 3970               	.L1024:
 3971 1370 0DB4      		in __tmp_reg__,77-0x20
 3972 1372 07FE      		sbrs __tmp_reg__,7
 3973 1374 00C0      		rjmp .L1024
 3974 1376 409A      		sbi 40-0x20,0
 3976               	.LM335:
 3977 1378 82EE      		ldi r24,lo8(738)
 3978 137a 92E0      		ldi r25,hi8(738)
 3979 137c 9093 0000 		sts (mdmctrl0)+1,r25
 3980 1380 8093 0000 		sts mdmctrl0,r24
 3982               	.LM336:
 3983 1384 4098      		cbi 40-0x20,0
 3984 1386 81E1      		ldi r24,lo8(17)
 3985 1388 8EBD      		out 78-0x20,r24
 3986               	.L1026:
 3987 138a 0DB4      		in __tmp_reg__,77-0x20
 3988 138c 07FE      		sbrs __tmp_reg__,7
 3989 138e 00C0      		rjmp .L1026
 3990 1390 82E0      		ldi r24,lo8(2)
 3991 1392 8EBD      		out 78-0x20,r24
 3992               	.L1028:
 3993 1394 0DB4      		in __tmp_reg__,77-0x20
 3994 1396 07FE      		sbrs __tmp_reg__,7
 3995 1398 00C0      		rjmp .L1028
 3996 139a 82EE      		ldi r24,lo8(-30)
 3997 139c 8EBD      		out 78-0x20,r24
 3998               	.L1030:
 3999 139e 0DB4      		in __tmp_reg__,77-0x20
 4000 13a0 07FE      		sbrs __tmp_reg__,7
 4001 13a2 00C0      		rjmp .L1030
 4002 13a4 409A      		sbi 40-0x20,0
 4004               	.LM337:
 4005 13a6 4098      		cbi 40-0x20,0
 4006 13a8 82E1      		ldi r24,lo8(18)
 4007 13aa 8EBD      		out 78-0x20,r24
 4008               	.L1032:
 4009 13ac 0DB4      		in __tmp_reg__,77-0x20
 4010 13ae 07FE      		sbrs __tmp_reg__,7
 4011 13b0 00C0      		rjmp .L1032
 4012 13b2 85E0      		ldi r24,lo8(5)
 4013 13b4 8EBD      		out 78-0x20,r24
 4014               	.L1034:
 4015 13b6 0DB4      		in __tmp_reg__,77-0x20
 4016 13b8 07FE      		sbrs __tmp_reg__,7
 4017 13ba 00C0      		rjmp .L1034
 4018 13bc 1EBC      		out 78-0x20,__zero_reg__
 4019               	.L1036:
 4020 13be 0DB4      		in __tmp_reg__,77-0x20
 4021 13c0 07FE      		sbrs __tmp_reg__,7
 4022 13c2 00C0      		rjmp .L1036
 4023 13c4 409A      		sbi 40-0x20,0
 4025               	.LM338:
 4026 13c6 4098      		cbi 40-0x20,0
 4027 13c8 8CE1      		ldi r24,lo8(28)
 4028 13ca 8EBD      		out 78-0x20,r24
 4029               	.L1038:
 4030 13cc 0DB4      		in __tmp_reg__,77-0x20
 4031 13ce 07FE      		sbrs __tmp_reg__,7
 4032 13d0 00C0      		rjmp .L1038
 4033 13d2 1EBC      		out 78-0x20,__zero_reg__
 4034               	.L1040:
 4035 13d4 0DB4      		in __tmp_reg__,77-0x20
 4036 13d6 07FE      		sbrs __tmp_reg__,7
 4037 13d8 00C0      		rjmp .L1040
 4038 13da 8FE7      		ldi r24,lo8(127)
 4039 13dc 8EBD      		out 78-0x20,r24
 4040               	.L1042:
 4041 13de 0DB4      		in __tmp_reg__,77-0x20
 4042 13e0 07FE      		sbrs __tmp_reg__,7
 4043 13e2 00C0      		rjmp .L1042
 4044 13e4 409A      		sbi 40-0x20,0
 4046               	.LM339:
 4047 13e6 4098      		cbi 40-0x20,0
 4048 13e8 89E1      		ldi r24,lo8(25)
 4049 13ea 8EBD      		out 78-0x20,r24
 4050               	.L1044:
 4051 13ec 0DB4      		in __tmp_reg__,77-0x20
 4052 13ee 07FE      		sbrs __tmp_reg__,7
 4053 13f0 00C0      		rjmp .L1044
 4054 13f2 81E0      		ldi r24,lo8(1)
 4055 13f4 8EBD      		out 78-0x20,r24
 4056               	.L1046:
 4057 13f6 0DB4      		in __tmp_reg__,77-0x20
 4058 13f8 07FE      		sbrs __tmp_reg__,7
 4059 13fa 00C0      		rjmp .L1046
 4060 13fc 84EC      		ldi r24,lo8(-60)
 4061 13fe 8EBD      		out 78-0x20,r24
 4062               	.L1048:
 4063 1400 0DB4      		in __tmp_reg__,77-0x20
 4064 1402 07FE      		sbrs __tmp_reg__,7
 4065 1404 00C0      		rjmp .L1048
 4066 1406 409A      		sbi 40-0x20,0
 4068               	.LM340:
 4069 1408 4098      		cbi 40-0x20,0
 4070 140a 87E1      		ldi r24,lo8(23)
 4071 140c 8EBD      		out 78-0x20,r24
 4072               	.L1050:
 4073 140e 0DB4      		in __tmp_reg__,77-0x20
 4074 1410 07FE      		sbrs __tmp_reg__,7
 4075 1412 00C0      		rjmp .L1050
 4076 1414 8AE1      		ldi r24,lo8(26)
 4077 1416 8EBD      		out 78-0x20,r24
 4078               	.L1052:
 4079 1418 0DB4      		in __tmp_reg__,77-0x20
 4080 141a 07FE      		sbrs __tmp_reg__,7
 4081 141c 00C0      		rjmp .L1052
 4082 141e 86E5      		ldi r24,lo8(86)
 4083 1420 8EBD      		out 78-0x20,r24
 4084               	.L1054:
 4085 1422 0DB4      		in __tmp_reg__,77-0x20
 4086 1424 07FE      		sbrs __tmp_reg__,7
 4087 1426 00C0      		rjmp .L1054
 4088 1428 409A      		sbi 40-0x20,0
 4090               	.LM341:
 4091 142a 84EF      		ldi r24,lo8(500)
 4092 142c 91E0      		ldi r25,hi8(500)
 4093 142e 0E94 0000 		call nrk_spin_wait_us
 4095               	.LM342:
 4096 1432 4098      		cbi 40-0x20,0
 4097 1434 88EE      		ldi r24,lo8(-24)
 4098 1436 8EBD      		out 78-0x20,r24
 4099               	.L1056:
 4100 1438 0DB4      		in __tmp_reg__,77-0x20
 4101 143a 07FE      		sbrs __tmp_reg__,7
 4102 143c 00C0      		rjmp .L1056
 4103 143e 80E8      		ldi r24,lo8(-128)
 4104 1440 8EBD      		out 78-0x20,r24
 4105               	.L1058:
 4106 1442 0DB4      		in __tmp_reg__,77-0x20
 4107 1444 07FE      		sbrs __tmp_reg__,7
 4108 1446 00C0      		rjmp .L1058
 4109 1448 FE01      		movw r30,r28
 4110 144a 3196      		adiw r30,1
 4111 144c 9E01      		movw r18,r28
 4112 144e 2D5F      		subi r18,lo8(-(3))
 4113 1450 3F4F      		sbci r19,hi8(-(3))
 4114               	.L1060:
 4115 1452 8081      		ld r24,Z
 4116 1454 8EBD      		out 78-0x20,r24
 4117               	.L1061:
 4118 1456 0DB4      		in __tmp_reg__,77-0x20
 4119 1458 07FE      		sbrs __tmp_reg__,7
 4120 145a 00C0      		rjmp .L1061
 4121 145c 3196      		adiw r30,1
 4122 145e E217      		cp r30,r18
 4123 1460 F307      		cpc r31,r19
 4124 1462 01F4      		brne .L1060
 4125 1464 409A      		sbi 40-0x20,0
 4127               	.LM343:
 4128 1466 84EF      		ldi r24,lo8(500)
 4129 1468 91E0      		ldi r25,hi8(500)
 4130 146a 0E94 0000 		call nrk_spin_wait_us
 4132               	.LM344:
 4133               	/* #APP */
 4134 146e 7894      		sei
 4135               		
 4137               	.LM345:
 4138               	/* #NOAPP */
 4139 1470 8D2D      		mov r24,r13
 4140 1472 0E94 0000 		call halRfSetChannel
 4142               	.LM346:
 4143               	/* #APP */
 4144 1476 7894      		sei
 4145               		
 4147               	.LM347:
 4148               	/* #NOAPP */
 4149 1478 1093 0000 		sts (rfSettings)+1,r17
 4150 147c 0093 0000 		sts rfSettings,r16
 4152               	.LM348:
 4153 1480 8981      		ldd r24,Y+1
 4154 1482 9A81      		ldd r25,Y+2
 4155 1484 9093 0000 		sts (rfSettings+4)+1,r25
 4156 1488 8093 0000 		sts rfSettings+4,r24
 4158               	.LM349:
 4159 148c F092 0000 		sts (rfSettings+6)+1,r15
 4160 1490 E092 0000 		sts rfSettings+6,r14
 4162               	.LM350:
 4163 1494 1092 0000 		sts rfSettings+2,__zero_reg__
 4165               	.LM351:
 4166 1498 1092 0000 		sts rfSettings+8,__zero_reg__
 4168               	.LM352:
 4169 149c 0E94 0000 		call halRfWaitForCrystalOscillator
 4171               	.LM353:
 4172 14a0 8091 0000 		lds r24,radio_sem
 4173 14a4 9091 0000 		lds r25,(radio_sem)+1
 4174 14a8 0E94 0000 		call nrk_sem_post
 4176               	.LM354:
 4177 14ac 8F3F      		cpi r24,lo8(-1)
 4178 14ae 01F4      		brne .L1064
 4180               	.LM355:
 4181 14b0 80E0      		ldi r24,lo8(__c.2733)
 4182 14b2 90E0      		ldi r25,hi8(__c.2733)
 4183 14b4 0E94 0000 		call nrk_kprintf
 4185               	.LM356:
 4186 14b8 82E0      		ldi r24,lo8(2)
 4187 14ba 0E94 0000 		call _nrk_errno_set
 4188               	.L1064:
 4190               	.LM357:
 4191 14be 1092 0000 		sts auto_ack_enable,__zero_reg__
 4193               	.LM358:
 4194 14c2 1092 0000 		sts security_enable,__zero_reg__
 4196               	.LM359:
 4197 14c6 1092 0000 		sts last_pkt_encrypted,__zero_reg__
 4198               	/* epilogue: frame size=2 */
 4199 14ca 2296      		adiw r28,2
 4200 14cc 0FB6      		in __tmp_reg__,__SREG__
 4201 14ce F894      		cli
 4202 14d0 DEBF      		out __SP_H__,r29
 4203 14d2 0FBE      		out __SREG__,__tmp_reg__
 4204 14d4 CDBF      		out __SP_L__,r28
 4205 14d6 DF91      		pop r29
 4206 14d8 CF91      		pop r28
 4207 14da 1F91      		pop r17
 4208 14dc 0F91      		pop r16
 4209 14de FF90      		pop r15
 4210 14e0 EF90      		pop r14
 4211 14e2 DF90      		pop r13
 4212 14e4 0895      		ret
 4213               	/* epilogue end (size=14) */
 4214               	/* function rf_init size 263 (234) */
 4216               	.Lscope31:
 4218               		.stabd	78,0,0
 4219               		.section	.progmem.data,"a",@progbits
 4222               	__c.2733:
 4223 0000 4343 3234 		.string	"CC2420 ERROR:  Release of semaphore failed\r\n"
 4223      3230 2045 
 4223      5252 4F52 
 4223      3A20 2052 
 4223      656C 6561 
 4226               	__c.2671:
 4227 002d 4343 3234 		.string	"CC2420 ERROR:  Access to semaphore failed\r\n"
 4227      3230 2045 
 4227      5252 4F52 
 4227      3A20 2041 
 4227      6363 6573 
 4228               		.comm _nrk_signal_list,4,1
 4229               		.comm rfSettings,9,1
 4230               		.comm nrk_idle_task_stk,128,1
 4231               		.comm nrk_kernel_stk_ptr,2,1
 4232               		.comm error_task,1,1
 4233               		.comm error_num,1,1
 4234               		.comm _nrk_prev_timer_val,1,1
 4235               		.comm _nrk_time_trigger,1,1
 4236               		.comm app_timer0_callback,2,1
 4237               		.comm app_timer0_prescale,1,1
 4238               		.comm radio_sem,2,1
 4239               		.comm auto_ack_enable,1,1
 4240               		.comm security_enable,1,1
 4241               		.comm last_pkt_encrypted,1,1
 4242               		.comm mdmctrl0,2,1
 4243               		.comm tx_ctr,4,1
 4244               		.comm rx_ctr,4,1
 4245               		.comm rx_ready,1,1
 4246               		.comm tmp_blah,2,1
 4268               		.text
 4270               	.Letext0:
 4271               	/* File "../../src/radio/cc2420/source/basic_rf.c": code 2715 = 0x0a9b (2503), prologues  97, epilo
DEFINED SYMBOLS
                            *ABS*:00000000 basic_rf.c
     /tmp/ccspO9AK.s:2      *ABS*:0000003f __SREG__
     /tmp/ccspO9AK.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccspO9AK.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccspO9AK.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccspO9AK.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccspO9AK.s:128    .text:00000000 rf_security_last_pkt_status
                            *COM*:00000001 last_pkt_encrypted
     /tmp/ccspO9AK.s:151    .text:00000008 rf_security_set_ctr_counter
                            *COM*:00000004 tx_ctr
     /tmp/ccspO9AK.s:261    .text:00000096 rf_security_enable
                            *COM*:00000001 security_enable
     /tmp/ccspO9AK.s:329    .text:000000e2 rf_security_disable
     /tmp/ccspO9AK.s:374    .text:0000010a rf_get_sem
                            *COM*:00000002 radio_sem
     /tmp/ccspO9AK.s:396    .text:00000114 rf_addr_decode_enable
                            *COM*:00000002 mdmctrl0
     /tmp/ccspO9AK.s:445    .text:0000014a rf_addr_decode_disable
     /tmp/ccspO9AK.s:494    .text:00000180 rf_auto_ack_enable
                            *COM*:00000001 auto_ack_enable
     /tmp/ccspO9AK.s:547    .text:000001bc rf_auto_ack_disable
     /tmp/ccspO9AK.s:599    .text:000001f6 rf_busy
     /tmp/ccspO9AK.s:630    .text:0000020a rf_rx_check_fifop
     /tmp/ccspO9AK.s:660    .text:0000021c rf_rx_check_sfd
     /tmp/ccspO9AK.s:691    .text:00000230 rf_rx_packet
                            *COM*:00000001 rx_ready
     /tmp/ccspO9AK.s:728    .text:0000024e rf_flush_rx_fifo
     /tmp/ccspO9AK.s:768    .text:0000026c rf_carrier_off
     /tmp/ccspO9AK.s:808    .text:00000294 rf_carrier_on
     /tmp/ccspO9AK.s:848    .text:000002bc rf_data_mode
     /tmp/ccspO9AK.s:932    .text:00000326 rf_test_mode
     /tmp/ccspO9AK.s:1019   .text:00000394 rf_set_cca_thresh
     /tmp/ccspO9AK.s:1087   .text:000003e6 rf_polling_rx_packet
                            *COM*:00000009 rfSettings
                            *COM*:00000004 rx_ctr
     /tmp/ccspO9AK.s:1876   .text:00000894 rf_rx_off
     /tmp/ccspO9AK.s:1922   .text:000008c4 rf_polling_rx_on
     /tmp/ccspO9AK.s:1979   .text:00000904 rf_rx_on
     /tmp/ccspO9AK.s:2037   .text:00000944 rf_tx_power
     /tmp/ccspO9AK.s:2104   .text:00000992 rf_tx_packet
     /tmp/ccspO9AK.s:2766   .text:00000cf0 rf_tx_tdma_packet
     /tmp/ccspO9AK.s:3376   .text:00001020 rf_addr_decode_set_my_mac
     /tmp/ccspO9AK.s:3463   .text:00001096 rf_security_set_key
     /tmp/ccspO9AK.s:3769   .text:00001270 rf_set_rx
     /tmp/ccspO9AK.s:3836   .text:000012c4 rf_set_channel
     /tmp/ccspO9AK.s:3875   .text:000012ea rf_init
     /tmp/ccspO9AK.s:4226   .progmem.data:0000002d __c.2671
     /tmp/ccspO9AK.s:4222   .progmem.data:00000000 __c.2733
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000002 nrk_kernel_stk_ptr
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num
                            *COM*:00000001 _nrk_prev_timer_val
                            *COM*:00000001 _nrk_time_trigger
                            *COM*:00000002 app_timer0_callback
                            *COM*:00000001 app_timer0_prescale
                            *COM*:00000002 tmp_blah

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
nrk_sem_pend
nrk_sem_post
halWait
_nrk_os_timer_get
nrk_high_speed_timer_wait
nrk_spin_wait_us
halRfSetChannel
nrk_sem_create
nrk_get_pid
nrk_kernel_error_add
nrk_kprintf
halRfWaitForCrystalOscillator
_nrk_errno_set
